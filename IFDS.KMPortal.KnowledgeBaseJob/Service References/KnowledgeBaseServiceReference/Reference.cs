//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserMemberBasic", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.User")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember))]
    public partial class UserMemberBasic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveDirectoryUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActiveDirectoryUser {
            get {
                return this.IsActiveDirectoryUserField;
            }
            set {
                if ((this.IsActiveDirectoryUserField.Equals(value) != true)) {
                    this.IsActiveDirectoryUserField = value;
                    this.RaisePropertyChanged("IsActiveDirectoryUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.User")]
    [System.SerializableAttribute()]
    public partial class UserMember : IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMemberBasic {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ForumSuspendedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRegisteredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ExternalProfileMember UserProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession UserSessionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WikiSuspendedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ForumSuspended {
            get {
                return this.ForumSuspendedField;
            }
            set {
                if ((this.ForumSuspendedField.Equals(value) != true)) {
                    this.ForumSuspendedField = value;
                    this.RaisePropertyChanged("ForumSuspended");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegistered {
            get {
                return this.IsRegisteredField;
            }
            set {
                if ((this.IsRegisteredField.Equals(value) != true)) {
                    this.IsRegisteredField = value;
                    this.RaisePropertyChanged("IsRegistered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ExternalProfileMember UserProfile {
            get {
                return this.UserProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.UserProfileField, value) != true)) {
                    this.UserProfileField = value;
                    this.RaisePropertyChanged("UserProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession UserSession {
            get {
                return this.UserSessionField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSessionField, value) != true)) {
                    this.UserSessionField = value;
                    this.RaisePropertyChanged("UserSession");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WikiSuspended {
            get {
                return this.WikiSuspendedField;
            }
            set {
                if ((this.WikiSuspendedField.Equals(value) != true)) {
                    this.WikiSuspendedField = value;
                    this.RaisePropertyChanged("WikiSuspended");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExternalProfileMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.User")]
    [System.SerializableAttribute()]
    public partial class ExternalProfileMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleGroupMember[] ArticleGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmbeddedExpandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ProfileForumManagementMember ForumManagementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalMember[] PortalAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProfileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ProfileWikiManagementMember WikiManagementField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleGroupMember[] ArticleGroup {
            get {
                return this.ArticleGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleGroupField, value) != true)) {
                    this.ArticleGroupField = value;
                    this.RaisePropertyChanged("ArticleGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmbeddedExpand {
            get {
                return this.EmbeddedExpandField;
            }
            set {
                if ((this.EmbeddedExpandField.Equals(value) != true)) {
                    this.EmbeddedExpandField = value;
                    this.RaisePropertyChanged("EmbeddedExpand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ProfileForumManagementMember ForumManagement {
            get {
                return this.ForumManagementField;
            }
            set {
                if ((object.ReferenceEquals(this.ForumManagementField, value) != true)) {
                    this.ForumManagementField = value;
                    this.RaisePropertyChanged("ForumManagement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalMember[] PortalAccess {
            get {
                return this.PortalAccessField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalAccessField, value) != true)) {
                    this.PortalAccessField = value;
                    this.RaisePropertyChanged("PortalAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProfileID {
            get {
                return this.ProfileIDField;
            }
            set {
                if ((this.ProfileIDField.Equals(value) != true)) {
                    this.ProfileIDField = value;
                    this.RaisePropertyChanged("ProfileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileName {
            get {
                return this.ProfileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileNameField, value) != true)) {
                    this.ProfileNameField = value;
                    this.RaisePropertyChanged("ProfileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ProfileWikiManagementMember WikiManagement {
            get {
                return this.WikiManagementField;
            }
            set {
                if ((object.ReferenceEquals(this.WikiManagementField, value) != true)) {
                    this.WikiManagementField = value;
                    this.RaisePropertyChanged("WikiManagement");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KBUserSession", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.User")]
    [System.SerializableAttribute()]
    public partial class KBUserSession : IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSessionBasic {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortalIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthUser {
            get {
                return this.AuthUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthUserField, value) != true)) {
                    this.AuthUserField = value;
                    this.RaisePropertyChanged("AuthUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PortalId {
            get {
                return this.PortalIdField;
            }
            set {
                if ((this.PortalIdField.Equals(value) != true)) {
                    this.PortalIdField = value;
                    this.RaisePropertyChanged("PortalId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileForumManagementMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.User")]
    [System.SerializableAttribute()]
    public partial class ProfileForumManagementMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddAttachmentPostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddAttachmentThreadsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreatePostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreateThreadsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeleteAttachmentPostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeleteAttachmentThreadsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletePostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EditPostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManageForumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenCloseForumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RestoreForumPostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuspendForumPostField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddAttachmentPost {
            get {
                return this.AddAttachmentPostField;
            }
            set {
                if ((this.AddAttachmentPostField.Equals(value) != true)) {
                    this.AddAttachmentPostField = value;
                    this.RaisePropertyChanged("AddAttachmentPost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddAttachmentThreads {
            get {
                return this.AddAttachmentThreadsField;
            }
            set {
                if ((this.AddAttachmentThreadsField.Equals(value) != true)) {
                    this.AddAttachmentThreadsField = value;
                    this.RaisePropertyChanged("AddAttachmentThreads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreatePosts {
            get {
                return this.CreatePostsField;
            }
            set {
                if ((this.CreatePostsField.Equals(value) != true)) {
                    this.CreatePostsField = value;
                    this.RaisePropertyChanged("CreatePosts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreateThreads {
            get {
                return this.CreateThreadsField;
            }
            set {
                if ((this.CreateThreadsField.Equals(value) != true)) {
                    this.CreateThreadsField = value;
                    this.RaisePropertyChanged("CreateThreads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeleteAttachmentPost {
            get {
                return this.DeleteAttachmentPostField;
            }
            set {
                if ((this.DeleteAttachmentPostField.Equals(value) != true)) {
                    this.DeleteAttachmentPostField = value;
                    this.RaisePropertyChanged("DeleteAttachmentPost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeleteAttachmentThreads {
            get {
                return this.DeleteAttachmentThreadsField;
            }
            set {
                if ((this.DeleteAttachmentThreadsField.Equals(value) != true)) {
                    this.DeleteAttachmentThreadsField = value;
                    this.RaisePropertyChanged("DeleteAttachmentThreads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeletePost {
            get {
                return this.DeletePostField;
            }
            set {
                if ((this.DeletePostField.Equals(value) != true)) {
                    this.DeletePostField = value;
                    this.RaisePropertyChanged("DeletePost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EditPost {
            get {
                return this.EditPostField;
            }
            set {
                if ((this.EditPostField.Equals(value) != true)) {
                    this.EditPostField = value;
                    this.RaisePropertyChanged("EditPost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManageForum {
            get {
                return this.ManageForumField;
            }
            set {
                if ((this.ManageForumField.Equals(value) != true)) {
                    this.ManageForumField = value;
                    this.RaisePropertyChanged("ManageForum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenCloseForum {
            get {
                return this.OpenCloseForumField;
            }
            set {
                if ((this.OpenCloseForumField.Equals(value) != true)) {
                    this.OpenCloseForumField = value;
                    this.RaisePropertyChanged("OpenCloseForum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RestoreForumPost {
            get {
                return this.RestoreForumPostField;
            }
            set {
                if ((this.RestoreForumPostField.Equals(value) != true)) {
                    this.RestoreForumPostField = value;
                    this.RaisePropertyChanged("RestoreForumPost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SuspendForumPost {
            get {
                return this.SuspendForumPostField;
            }
            set {
                if ((this.SuspendForumPostField.Equals(value) != true)) {
                    this.SuspendForumPostField = value;
                    this.RaisePropertyChanged("SuspendForumPost");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileWikiManagementMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.User")]
    [System.SerializableAttribute()]
    public partial class ProfileWikiManagementMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeleteTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EditTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManageWikiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RestoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuspendField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddTag {
            get {
                return this.AddTagField;
            }
            set {
                if ((this.AddTagField.Equals(value) != true)) {
                    this.AddTagField = value;
                    this.RaisePropertyChanged("AddTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Create {
            get {
                return this.CreateField;
            }
            set {
                if ((this.CreateField.Equals(value) != true)) {
                    this.CreateField = value;
                    this.RaisePropertyChanged("Create");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Delete {
            get {
                return this.DeleteField;
            }
            set {
                if ((this.DeleteField.Equals(value) != true)) {
                    this.DeleteField = value;
                    this.RaisePropertyChanged("Delete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeleteTag {
            get {
                return this.DeleteTagField;
            }
            set {
                if ((this.DeleteTagField.Equals(value) != true)) {
                    this.DeleteTagField = value;
                    this.RaisePropertyChanged("DeleteTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Edit {
            get {
                return this.EditField;
            }
            set {
                if ((this.EditField.Equals(value) != true)) {
                    this.EditField = value;
                    this.RaisePropertyChanged("Edit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EditTag {
            get {
                return this.EditTagField;
            }
            set {
                if ((this.EditTagField.Equals(value) != true)) {
                    this.EditTagField = value;
                    this.RaisePropertyChanged("EditTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManageWiki {
            get {
                return this.ManageWikiField;
            }
            set {
                if ((this.ManageWikiField.Equals(value) != true)) {
                    this.ManageWikiField = value;
                    this.RaisePropertyChanged("ManageWiki");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Restore {
            get {
                return this.RestoreField;
            }
            set {
                if ((this.RestoreField.Equals(value) != true)) {
                    this.RestoreField = value;
                    this.RaisePropertyChanged("Restore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Suspend {
            get {
                return this.SuspendField;
            }
            set {
                if ((this.SuspendField.Equals(value) != true)) {
                    this.SuspendField = value;
                    this.RaisePropertyChanged("Suspend");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleGroupMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.User")]
    [System.SerializableAttribute()]
    public partial class ArticleGroupMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PortalMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.User")]
    [System.SerializableAttribute()]
    public partial class PortalMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IPRestrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalTypes PortalTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IPRestrict {
            get {
                return this.IPRestrictField;
            }
            set {
                if ((this.IPRestrictField.Equals(value) != true)) {
                    this.IPRestrictField = value;
                    this.RaisePropertyChanged("IPRestrict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PortalID {
            get {
                return this.PortalIDField;
            }
            set {
                if ((this.PortalIDField.Equals(value) != true)) {
                    this.PortalIDField = value;
                    this.RaisePropertyChanged("PortalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortalName {
            get {
                return this.PortalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalNameField, value) != true)) {
                    this.PortalNameField = value;
                    this.RaisePropertyChanged("PortalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalTypes PortalType {
            get {
                return this.PortalTypeField;
            }
            set {
                if ((this.PortalTypeField.Equals(value) != true)) {
                    this.PortalTypeField = value;
                    this.RaisePropertyChanged("PortalType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PortalTypes", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.User")]
    public enum PortalTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Open = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Registration = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Secure = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Personalize = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KBUserSessionBasic", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.User")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession))]
    public partial class KBUserSessionBasic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.EndTimeField, value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Port {
            get {
                return this.PortField;
            }
            set {
                if ((object.ReferenceEquals(this.PortField, value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Secure {
            get {
                return this.SecureField;
            }
            set {
                if ((object.ReferenceEquals(this.SecureField, value) != true)) {
                    this.SecureField = value;
                    this.RaisePropertyChanged("Secure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartTimeField, value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeClient {
            get {
                return this.TypeClientField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeClientField, value) != true)) {
                    this.TypeClientField = value;
                    this.RaisePropertyChanged("TypeClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAgent {
            get {
                return this.UserAgentField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAgentField, value) != true)) {
                    this.UserAgentField = value;
                    this.RaisePropertyChanged("UserAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThreadMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase")]
    [System.SerializableAttribute()]
    public partial class ThreadMember : IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Member {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ForumIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember LatestPostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModifiedByUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfPostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ThreadIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThreadNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedByUserID {
            get {
                return this.CreatedByUserIDField;
            }
            set {
                if ((this.CreatedByUserIDField.Equals(value) != true)) {
                    this.CreatedByUserIDField = value;
                    this.RaisePropertyChanged("CreatedByUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomMessage {
            get {
                return this.CustomMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomMessageField, value) != true)) {
                    this.CustomMessageField = value;
                    this.RaisePropertyChanged("CustomMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ForumID {
            get {
                return this.ForumIDField;
            }
            set {
                if ((this.ForumIDField.Equals(value) != true)) {
                    this.ForumIDField = value;
                    this.RaisePropertyChanged("ForumID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember LatestPost {
            get {
                return this.LatestPostField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestPostField, value) != true)) {
                    this.LatestPostField = value;
                    this.RaisePropertyChanged("LatestPost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Locked {
            get {
                return this.LockedField;
            }
            set {
                if ((this.LockedField.Equals(value) != true)) {
                    this.LockedField = value;
                    this.RaisePropertyChanged("Locked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModifiedByUserID {
            get {
                return this.ModifiedByUserIDField;
            }
            set {
                if ((this.ModifiedByUserIDField.Equals(value) != true)) {
                    this.ModifiedByUserIDField = value;
                    this.RaisePropertyChanged("ModifiedByUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfPosts {
            get {
                return this.NumberOfPostsField;
            }
            set {
                if ((this.NumberOfPostsField.Equals(value) != true)) {
                    this.NumberOfPostsField = value;
                    this.RaisePropertyChanged("NumberOfPosts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ThreadID {
            get {
                return this.ThreadIDField;
            }
            set {
                if ((this.ThreadIDField.Equals(value) != true)) {
                    this.ThreadIDField = value;
                    this.RaisePropertyChanged("ThreadID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThreadName {
            get {
                return this.ThreadNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ThreadNameField, value) != true)) {
                    this.ThreadNameField = value;
                    this.RaisePropertyChanged("ThreadName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Member", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CommunityTagMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember))]
    public partial class Member : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase")]
    [System.SerializableAttribute()]
    public partial class PostMember : IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Member {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcceptedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AcceptedByUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AcceptedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMember[] AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ForumIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostProposedType IsPostProposedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModifiedByUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NegativeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfQuotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfReplysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentPostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositiveRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProposedByUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ProposedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ThreadIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThreadNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcceptedBy {
            get {
                return this.AcceptedByField;
            }
            set {
                if ((object.ReferenceEquals(this.AcceptedByField, value) != true)) {
                    this.AcceptedByField = value;
                    this.RaisePropertyChanged("AcceptedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AcceptedByUserID {
            get {
                return this.AcceptedByUserIDField;
            }
            set {
                if ((this.AcceptedByUserIDField.Equals(value) != true)) {
                    this.AcceptedByUserIDField = value;
                    this.RaisePropertyChanged("AcceptedByUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AcceptedDate {
            get {
                return this.AcceptedDateField;
            }
            set {
                if ((this.AcceptedDateField.Equals(value) != true)) {
                    this.AcceptedDateField = value;
                    this.RaisePropertyChanged("AcceptedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMember[] Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedByUserID {
            get {
                return this.CreatedByUserIDField;
            }
            set {
                if ((this.CreatedByUserIDField.Equals(value) != true)) {
                    this.CreatedByUserIDField = value;
                    this.RaisePropertyChanged("CreatedByUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomMessage {
            get {
                return this.CustomMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomMessageField, value) != true)) {
                    this.CustomMessageField = value;
                    this.RaisePropertyChanged("CustomMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ForumID {
            get {
                return this.ForumIDField;
            }
            set {
                if ((this.ForumIDField.Equals(value) != true)) {
                    this.ForumIDField = value;
                    this.RaisePropertyChanged("ForumID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForumName {
            get {
                return this.ForumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ForumNameField, value) != true)) {
                    this.ForumNameField = value;
                    this.RaisePropertyChanged("ForumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostProposedType IsPostProposed {
            get {
                return this.IsPostProposedField;
            }
            set {
                if ((this.IsPostProposedField.Equals(value) != true)) {
                    this.IsPostProposedField = value;
                    this.RaisePropertyChanged("IsPostProposed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModifiedByUserID {
            get {
                return this.ModifiedByUserIDField;
            }
            set {
                if ((this.ModifiedByUserIDField.Equals(value) != true)) {
                    this.ModifiedByUserIDField = value;
                    this.RaisePropertyChanged("ModifiedByUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NegativeRate {
            get {
                return this.NegativeRateField;
            }
            set {
                if ((this.NegativeRateField.Equals(value) != true)) {
                    this.NegativeRateField = value;
                    this.RaisePropertyChanged("NegativeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfQuotes {
            get {
                return this.NumberOfQuotesField;
            }
            set {
                if ((this.NumberOfQuotesField.Equals(value) != true)) {
                    this.NumberOfQuotesField = value;
                    this.RaisePropertyChanged("NumberOfQuotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfReplys {
            get {
                return this.NumberOfReplysField;
            }
            set {
                if ((this.NumberOfReplysField.Equals(value) != true)) {
                    this.NumberOfReplysField = value;
                    this.RaisePropertyChanged("NumberOfReplys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentPost {
            get {
                return this.ParentPostField;
            }
            set {
                if ((this.ParentPostField.Equals(value) != true)) {
                    this.ParentPostField = value;
                    this.RaisePropertyChanged("ParentPost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PositiveRate {
            get {
                return this.PositiveRateField;
            }
            set {
                if ((this.PositiveRateField.Equals(value) != true)) {
                    this.PositiveRateField = value;
                    this.RaisePropertyChanged("PositiveRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostContent {
            get {
                return this.PostContentField;
            }
            set {
                if ((object.ReferenceEquals(this.PostContentField, value) != true)) {
                    this.PostContentField = value;
                    this.RaisePropertyChanged("PostContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostID {
            get {
                return this.PostIDField;
            }
            set {
                if ((this.PostIDField.Equals(value) != true)) {
                    this.PostIDField = value;
                    this.RaisePropertyChanged("PostID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostName {
            get {
                return this.PostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PostNameField, value) != true)) {
                    this.PostNameField = value;
                    this.RaisePropertyChanged("PostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostTypeID {
            get {
                return this.PostTypeIDField;
            }
            set {
                if ((this.PostTypeIDField.Equals(value) != true)) {
                    this.PostTypeIDField = value;
                    this.RaisePropertyChanged("PostTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposedBy {
            get {
                return this.ProposedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposedByField, value) != true)) {
                    this.ProposedByField = value;
                    this.RaisePropertyChanged("ProposedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProposedByUserID {
            get {
                return this.ProposedByUserIDField;
            }
            set {
                if ((this.ProposedByUserIDField.Equals(value) != true)) {
                    this.ProposedByUserIDField = value;
                    this.RaisePropertyChanged("ProposedByUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ProposedDate {
            get {
                return this.ProposedDateField;
            }
            set {
                if ((this.ProposedDateField.Equals(value) != true)) {
                    this.ProposedDateField = value;
                    this.RaisePropertyChanged("ProposedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ThreadID {
            get {
                return this.ThreadIDField;
            }
            set {
                if ((this.ThreadIDField.Equals(value) != true)) {
                    this.ThreadIDField = value;
                    this.RaisePropertyChanged("ThreadID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThreadName {
            get {
                return this.ThreadNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ThreadNameField, value) != true)) {
                    this.ThreadNameField = value;
                    this.RaisePropertyChanged("ThreadName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommunityTagMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase")]
    [System.SerializableAttribute()]
    public partial class CommunityTagMember : IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Member {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModifiedByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModifiedUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfPostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfThreadsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TagIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedByUserId {
            get {
                return this.CreatedByUserIdField;
            }
            set {
                if ((this.CreatedByUserIdField.Equals(value) != true)) {
                    this.CreatedByUserIdField = value;
                    this.RaisePropertyChanged("CreatedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedUserId {
            get {
                return this.CreatedUserIdField;
            }
            set {
                if ((this.CreatedUserIdField.Equals(value) != true)) {
                    this.CreatedUserIdField = value;
                    this.RaisePropertyChanged("CreatedUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModifiedByUserId {
            get {
                return this.ModifiedByUserIdField;
            }
            set {
                if ((this.ModifiedByUserIdField.Equals(value) != true)) {
                    this.ModifiedByUserIdField = value;
                    this.RaisePropertyChanged("ModifiedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModifiedUserId {
            get {
                return this.ModifiedUserIdField;
            }
            set {
                if ((this.ModifiedUserIdField.Equals(value) != true)) {
                    this.ModifiedUserIdField = value;
                    this.RaisePropertyChanged("ModifiedUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfPosts {
            get {
                return this.NumberOfPostsField;
            }
            set {
                if ((this.NumberOfPostsField.Equals(value) != true)) {
                    this.NumberOfPostsField = value;
                    this.RaisePropertyChanged("NumberOfPosts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfThreads {
            get {
                return this.NumberOfThreadsField;
            }
            set {
                if ((this.NumberOfThreadsField.Equals(value) != true)) {
                    this.NumberOfThreadsField = value;
                    this.RaisePropertyChanged("NumberOfThreads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagDesc {
            get {
                return this.TagDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TagDescField, value) != true)) {
                    this.TagDescField = value;
                    this.RaisePropertyChanged("TagDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagID {
            get {
                return this.TagIDField;
            }
            set {
                if ((this.TagIDField.Equals(value) != true)) {
                    this.TagIDField = value;
                    this.RaisePropertyChanged("TagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ForumCategoryMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase")]
    [System.SerializableAttribute()]
    public partial class ForumCategoryMember : IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Member {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfForumsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CatID {
            get {
                return this.CatIDField;
            }
            set {
                if ((this.CatIDField.Equals(value) != true)) {
                    this.CatIDField = value;
                    this.RaisePropertyChanged("CatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatName {
            get {
                return this.CatNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CatNameField, value) != true)) {
                    this.CatNameField = value;
                    this.RaisePropertyChanged("CatName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomMessage {
            get {
                return this.CustomMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomMessageField, value) != true)) {
                    this.CustomMessageField = value;
                    this.RaisePropertyChanged("CustomMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfForums {
            get {
                return this.NumberOfForumsField;
            }
            set {
                if ((this.NumberOfForumsField.Equals(value) != true)) {
                    this.NumberOfForumsField = value;
                    this.RaisePropertyChanged("NumberOfForums");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ForumMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase")]
    [System.SerializableAttribute()]
    public partial class ForumMember : IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Member {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForumClosedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ForumClosedByUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ForumClosedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForumDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ForumIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForumReOpenedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ForumReOpenedByUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ForumReOpenedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumStatus ForumTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModifiedByUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfPostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfThreadsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CatID {
            get {
                return this.CatIDField;
            }
            set {
                if ((this.CatIDField.Equals(value) != true)) {
                    this.CatIDField = value;
                    this.RaisePropertyChanged("CatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatName {
            get {
                return this.CatNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CatNameField, value) != true)) {
                    this.CatNameField = value;
                    this.RaisePropertyChanged("CatName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedByUserID {
            get {
                return this.CreatedByUserIDField;
            }
            set {
                if ((this.CreatedByUserIDField.Equals(value) != true)) {
                    this.CreatedByUserIDField = value;
                    this.RaisePropertyChanged("CreatedByUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomMessage {
            get {
                return this.CustomMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomMessageField, value) != true)) {
                    this.CustomMessageField = value;
                    this.RaisePropertyChanged("CustomMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForumClosedBy {
            get {
                return this.ForumClosedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ForumClosedByField, value) != true)) {
                    this.ForumClosedByField = value;
                    this.RaisePropertyChanged("ForumClosedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ForumClosedByUserID {
            get {
                return this.ForumClosedByUserIDField;
            }
            set {
                if ((this.ForumClosedByUserIDField.Equals(value) != true)) {
                    this.ForumClosedByUserIDField = value;
                    this.RaisePropertyChanged("ForumClosedByUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ForumClosedDate {
            get {
                return this.ForumClosedDateField;
            }
            set {
                if ((this.ForumClosedDateField.Equals(value) != true)) {
                    this.ForumClosedDateField = value;
                    this.RaisePropertyChanged("ForumClosedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForumDesc {
            get {
                return this.ForumDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ForumDescField, value) != true)) {
                    this.ForumDescField = value;
                    this.RaisePropertyChanged("ForumDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ForumID {
            get {
                return this.ForumIDField;
            }
            set {
                if ((this.ForumIDField.Equals(value) != true)) {
                    this.ForumIDField = value;
                    this.RaisePropertyChanged("ForumID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForumName {
            get {
                return this.ForumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ForumNameField, value) != true)) {
                    this.ForumNameField = value;
                    this.RaisePropertyChanged("ForumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForumReOpenedBy {
            get {
                return this.ForumReOpenedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ForumReOpenedByField, value) != true)) {
                    this.ForumReOpenedByField = value;
                    this.RaisePropertyChanged("ForumReOpenedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ForumReOpenedByUserID {
            get {
                return this.ForumReOpenedByUserIDField;
            }
            set {
                if ((this.ForumReOpenedByUserIDField.Equals(value) != true)) {
                    this.ForumReOpenedByUserIDField = value;
                    this.RaisePropertyChanged("ForumReOpenedByUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ForumReOpenedDate {
            get {
                return this.ForumReOpenedDateField;
            }
            set {
                if ((this.ForumReOpenedDateField.Equals(value) != true)) {
                    this.ForumReOpenedDateField = value;
                    this.RaisePropertyChanged("ForumReOpenedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumStatus ForumType {
            get {
                return this.ForumTypeField;
            }
            set {
                if ((this.ForumTypeField.Equals(value) != true)) {
                    this.ForumTypeField = value;
                    this.RaisePropertyChanged("ForumType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModifiedByUserID {
            get {
                return this.ModifiedByUserIDField;
            }
            set {
                if ((this.ModifiedByUserIDField.Equals(value) != true)) {
                    this.ModifiedByUserIDField = value;
                    this.RaisePropertyChanged("ModifiedByUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfPosts {
            get {
                return this.NumberOfPostsField;
            }
            set {
                if ((this.NumberOfPostsField.Equals(value) != true)) {
                    this.NumberOfPostsField = value;
                    this.RaisePropertyChanged("NumberOfPosts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfThreads {
            get {
                return this.NumberOfThreadsField;
            }
            set {
                if ((this.NumberOfThreadsField.Equals(value) != true)) {
                    this.NumberOfThreadsField = value;
                    this.RaisePropertyChanged("NumberOfThreads");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachmentMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMemberFile))]
    public partial class AttachmentMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttachmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileExtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttachmentId {
            get {
                return this.AttachmentIdField;
            }
            set {
                if ((this.AttachmentIdField.Equals(value) != true)) {
                    this.AttachmentIdField = value;
                    this.RaisePropertyChanged("AttachmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileExtn {
            get {
                return this.FileExtnField;
            }
            set {
                if ((object.ReferenceEquals(this.FileExtnField, value) != true)) {
                    this.FileExtnField = value;
                    this.RaisePropertyChanged("FileExtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostProposedType", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase")]
    public enum PostProposedType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Proposed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Answered = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachmentMemberFile", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase")]
    [System.SerializableAttribute()]
    public partial class AttachmentMemberFile : IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMember {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileContentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileContent {
            get {
                return this.FileContentField;
            }
            set {
                if ((object.ReferenceEquals(this.FileContentField, value) != true)) {
                    this.FileContentField = value;
                    this.RaisePropertyChanged("FileContent");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ForumStatus", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase")]
    public enum ForumStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Open = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Closed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FutureClose = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateType", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase")]
    public enum DateType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Create = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modified = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThreadDisplayMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase")]
    [System.SerializableAttribute()]
    public partial class ThreadDisplayMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfPostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositiveRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ThreadIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThreadNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfPosts {
            get {
                return this.NumberOfPostsField;
            }
            set {
                if ((this.NumberOfPostsField.Equals(value) != true)) {
                    this.NumberOfPostsField = value;
                    this.RaisePropertyChanged("NumberOfPosts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PositiveRate {
            get {
                return this.PositiveRateField;
            }
            set {
                if ((this.PositiveRateField.Equals(value) != true)) {
                    this.PositiveRateField = value;
                    this.RaisePropertyChanged("PositiveRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ThreadID {
            get {
                return this.ThreadIDField;
            }
            set {
                if ((this.ThreadIDField.Equals(value) != true)) {
                    this.ThreadIDField = value;
                    this.RaisePropertyChanged("ThreadID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThreadName {
            get {
                return this.ThreadNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ThreadNameField, value) != true)) {
                    this.ThreadNameField = value;
                    this.RaisePropertyChanged("ThreadName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostUser", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase")]
    [System.SerializableAttribute()]
    public partial class PostUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfPostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfPosts {
            get {
                return this.NumberOfPostsField;
            }
            set {
                if ((this.NumberOfPostsField.Equals(value) != true)) {
                    this.NumberOfPostsField = value;
                    this.RaisePropertyChanged("NumberOfPosts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetRatingMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.KBRatingReputation")]
    [System.SerializableAttribute()]
    public partial class SetRatingMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceContentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SourceRating SourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.RatingValue ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceContentID {
            get {
                return this.SourceContentIDField;
            }
            set {
                if ((this.SourceContentIDField.Equals(value) != true)) {
                    this.SourceContentIDField = value;
                    this.RaisePropertyChanged("SourceContentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SourceRating SourceID {
            get {
                return this.SourceIDField;
            }
            set {
                if ((this.SourceIDField.Equals(value) != true)) {
                    this.SourceIDField = value;
                    this.RaisePropertyChanged("SourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.RatingValue Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceRating", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.KBRatingReputation")]
    public enum SourceRating : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dumb = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Article = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Forum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thread = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Post = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wiki = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RatingValue", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.KBRatingReputation")]
    public enum RatingValue : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Postive = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Negative = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RatingValueMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.KBRatingReputation")]
    [System.SerializableAttribute()]
    public partial class RatingValueMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NegativeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Negative {
            get {
                return this.NegativeField;
            }
            set {
                if ((this.NegativeField.Equals(value) != true)) {
                    this.NegativeField = value;
                    this.RaisePropertyChanged("Negative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Positive {
            get {
                return this.PositiveField;
            }
            set {
                if ((this.PositiveField.Equals(value) != true)) {
                    this.PositiveField = value;
                    this.RaisePropertyChanged("Positive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PortalProperties", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.MarshalByRefObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TemplateSection[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TemplateSection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiVersion[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiVersion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiPortalConfig))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.User[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Portal[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Portal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserProfile[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiUserActivityReport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ApplicationInfoMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQDisplayOption))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FileTypeMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FileTypeMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleDisplayMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalArticleInfoMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalLanguageMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalLanguageMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AlertStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchCloudResultMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchCloudResultMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchTypeMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchTypeMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TagMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TagMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQCategoryMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQCategoryMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CategoryMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CategoryMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryTermMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryTermMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryItemMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryItemMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRField[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRDropDownlist[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRDropDownlist))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATREmail[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATREmail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleInfoMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleInfoProperties))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Attachment[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Attachment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleRelated[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleRelated))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleContentMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleResourceMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleResourceMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Member))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostProposedType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadDisplayMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadDisplayMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CommunityTagMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CommunityTagMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMemberFile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostUser[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.History[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.History))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumDisplayMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumDisplayMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.IO.MemoryStream))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.IO.Stream))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalKBMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalKBMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParamsList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParameter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParameter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SetRatingMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SourceRating))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.RatingValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.RatingValueMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMemberBasic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ExternalProfileMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleGroupMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleGroupMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ProfileForumManagementMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ProfileWikiManagementMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSessionBasic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalSettingField[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalSettingField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalSettingMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ExternalProfileMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleContentTemplateMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleContentTemplateMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleCommentMember[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleCommentMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlow[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlowStep[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlowStep))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WorkFlowType))]
    public partial class PortalProperties : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ATREmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ATRSubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ApplicationInfoMember ApplicationInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArticleBodySecurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArticleGroupSecurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailKBSystemNotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailUserRequestNotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQDisplayOption FAQDisplaySettingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FileTypeMember[] FileTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KeepSessionAliveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[] ModulePortalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleDisplayMember PortalArticleDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalArticleInfoMember PortalArticleInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PortalCreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortalDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortalDisplayTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortalForumTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[] PortalGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortalLangIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalLanguageMember[] PortalLanguagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PortalLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PortalRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalSettingField[] PortalRegistrationFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PortalReputationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortalTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalTypes PortalTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalSettingMember PortalUserRequestAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PortalUserRequestEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagement PortalWidgetManagementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortalWikiTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ATREmail {
            get {
                return this.ATREmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ATREmailField, value) != true)) {
                    this.ATREmailField = value;
                    this.RaisePropertyChanged("ATREmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ATRSubject {
            get {
                return this.ATRSubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ATRSubjectField, value) != true)) {
                    this.ATRSubjectField = value;
                    this.RaisePropertyChanged("ATRSubject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminUrl {
            get {
                return this.AdminUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminUrlField, value) != true)) {
                    this.AdminUrlField = value;
                    this.RaisePropertyChanged("AdminUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ApplicationInfoMember ApplicationInfo {
            get {
                return this.ApplicationInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationInfoField, value) != true)) {
                    this.ApplicationInfoField = value;
                    this.RaisePropertyChanged("ApplicationInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ArticleBodySecurity {
            get {
                return this.ArticleBodySecurityField;
            }
            set {
                if ((this.ArticleBodySecurityField.Equals(value) != true)) {
                    this.ArticleBodySecurityField = value;
                    this.RaisePropertyChanged("ArticleBodySecurity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArticleGroupSecurity {
            get {
                return this.ArticleGroupSecurityField;
            }
            set {
                if ((this.ArticleGroupSecurityField.Equals(value) != true)) {
                    this.ArticleGroupSecurityField = value;
                    this.RaisePropertyChanged("ArticleGroupSecurity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailKBSystemNotification {
            get {
                return this.EmailKBSystemNotificationField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailKBSystemNotificationField, value) != true)) {
                    this.EmailKBSystemNotificationField = value;
                    this.RaisePropertyChanged("EmailKBSystemNotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailUserRequestNotification {
            get {
                return this.EmailUserRequestNotificationField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailUserRequestNotificationField, value) != true)) {
                    this.EmailUserRequestNotificationField = value;
                    this.RaisePropertyChanged("EmailUserRequestNotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQDisplayOption FAQDisplaySetting {
            get {
                return this.FAQDisplaySettingField;
            }
            set {
                if ((this.FAQDisplaySettingField.Equals(value) != true)) {
                    this.FAQDisplaySettingField = value;
                    this.RaisePropertyChanged("FAQDisplaySetting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FileTypeMember[] FileTypes {
            get {
                return this.FileTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypesField, value) != true)) {
                    this.FileTypesField = value;
                    this.RaisePropertyChanged("FileTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KeepSessionAlive {
            get {
                return this.KeepSessionAliveField;
            }
            set {
                if ((this.KeepSessionAliveField.Equals(value) != true)) {
                    this.KeepSessionAliveField = value;
                    this.RaisePropertyChanged("KeepSessionAlive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] ModulePortal {
            get {
                return this.ModulePortalField;
            }
            set {
                if ((object.ReferenceEquals(this.ModulePortalField, value) != true)) {
                    this.ModulePortalField = value;
                    this.RaisePropertyChanged("ModulePortal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleDisplayMember PortalArticleDisplay {
            get {
                return this.PortalArticleDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalArticleDisplayField, value) != true)) {
                    this.PortalArticleDisplayField = value;
                    this.RaisePropertyChanged("PortalArticleDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalArticleInfoMember PortalArticleInfo {
            get {
                return this.PortalArticleInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalArticleInfoField, value) != true)) {
                    this.PortalArticleInfoField = value;
                    this.RaisePropertyChanged("PortalArticleInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortalCode {
            get {
                return this.PortalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalCodeField, value) != true)) {
                    this.PortalCodeField = value;
                    this.RaisePropertyChanged("PortalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PortalCreatedDate {
            get {
                return this.PortalCreatedDateField;
            }
            set {
                if ((this.PortalCreatedDateField.Equals(value) != true)) {
                    this.PortalCreatedDateField = value;
                    this.RaisePropertyChanged("PortalCreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortalDescription {
            get {
                return this.PortalDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalDescriptionField, value) != true)) {
                    this.PortalDescriptionField = value;
                    this.RaisePropertyChanged("PortalDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PortalDisplayType {
            get {
                return this.PortalDisplayTypeField;
            }
            set {
                if ((this.PortalDisplayTypeField.Equals(value) != true)) {
                    this.PortalDisplayTypeField = value;
                    this.RaisePropertyChanged("PortalDisplayType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortalForumText {
            get {
                return this.PortalForumTextField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalForumTextField, value) != true)) {
                    this.PortalForumTextField = value;
                    this.RaisePropertyChanged("PortalForumText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] PortalGroup {
            get {
                return this.PortalGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalGroupField, value) != true)) {
                    this.PortalGroupField = value;
                    this.RaisePropertyChanged("PortalGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PortalID {
            get {
                return this.PortalIDField;
            }
            set {
                if ((this.PortalIDField.Equals(value) != true)) {
                    this.PortalIDField = value;
                    this.RaisePropertyChanged("PortalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PortalLangID {
            get {
                return this.PortalLangIDField;
            }
            set {
                if ((this.PortalLangIDField.Equals(value) != true)) {
                    this.PortalLangIDField = value;
                    this.RaisePropertyChanged("PortalLangID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalLanguageMember[] PortalLanguages {
            get {
                return this.PortalLanguagesField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalLanguagesField, value) != true)) {
                    this.PortalLanguagesField = value;
                    this.RaisePropertyChanged("PortalLanguages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PortalLogin {
            get {
                return this.PortalLoginField;
            }
            set {
                if ((this.PortalLoginField.Equals(value) != true)) {
                    this.PortalLoginField = value;
                    this.RaisePropertyChanged("PortalLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PortalRating {
            get {
                return this.PortalRatingField;
            }
            set {
                if ((this.PortalRatingField.Equals(value) != true)) {
                    this.PortalRatingField = value;
                    this.RaisePropertyChanged("PortalRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalSettingField[] PortalRegistrationFields {
            get {
                return this.PortalRegistrationFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalRegistrationFieldsField, value) != true)) {
                    this.PortalRegistrationFieldsField = value;
                    this.RaisePropertyChanged("PortalRegistrationFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PortalReputation {
            get {
                return this.PortalReputationField;
            }
            set {
                if ((this.PortalReputationField.Equals(value) != true)) {
                    this.PortalReputationField = value;
                    this.RaisePropertyChanged("PortalReputation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortalTitle {
            get {
                return this.PortalTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalTitleField, value) != true)) {
                    this.PortalTitleField = value;
                    this.RaisePropertyChanged("PortalTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalTypes PortalType {
            get {
                return this.PortalTypeField;
            }
            set {
                if ((this.PortalTypeField.Equals(value) != true)) {
                    this.PortalTypeField = value;
                    this.RaisePropertyChanged("PortalType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalSettingMember PortalUserRequestAccount {
            get {
                return this.PortalUserRequestAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalUserRequestAccountField, value) != true)) {
                    this.PortalUserRequestAccountField = value;
                    this.RaisePropertyChanged("PortalUserRequestAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PortalUserRequestEnabled {
            get {
                return this.PortalUserRequestEnabledField;
            }
            set {
                if ((this.PortalUserRequestEnabledField.Equals(value) != true)) {
                    this.PortalUserRequestEnabledField = value;
                    this.RaisePropertyChanged("PortalUserRequestEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagement PortalWidgetManagement {
            get {
                return this.PortalWidgetManagementField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalWidgetManagementField, value) != true)) {
                    this.PortalWidgetManagementField = value;
                    this.RaisePropertyChanged("PortalWidgetManagement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortalWikiText {
            get {
                return this.PortalWikiTextField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalWikiTextField, value) != true)) {
                    this.PortalWikiTextField = value;
                    this.RaisePropertyChanged("PortalWikiText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationInfoMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class ApplicationInfoMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBDataPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationPath {
            get {
                return this.ApplicationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationPathField, value) != true)) {
                    this.ApplicationPathField = value;
                    this.RaisePropertyChanged("ApplicationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBDataPath {
            get {
                return this.KBDataPathField;
            }
            set {
                if ((object.ReferenceEquals(this.KBDataPathField, value) != true)) {
                    this.KBDataPathField = value;
                    this.RaisePropertyChanged("KBDataPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceGroup {
            get {
                return this.SourceGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceGroupField, value) != true)) {
                    this.SourceGroupField = value;
                    this.RaisePropertyChanged("SourceGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleDisplayMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class ArticleDisplayMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArticleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AttributeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeHeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KnowledgeBaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ModifyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateAlertField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Alert {
            get {
                return this.AlertField;
            }
            set {
                if ((this.AlertField.Equals(value) != true)) {
                    this.AlertField = value;
                    this.RaisePropertyChanged("Alert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ArticleID {
            get {
                return this.ArticleIDField;
            }
            set {
                if ((this.ArticleIDField.Equals(value) != true)) {
                    this.ArticleIDField = value;
                    this.RaisePropertyChanged("ArticleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Attribute {
            get {
                return this.AttributeField;
            }
            set {
                if ((this.AttributeField.Equals(value) != true)) {
                    this.AttributeField = value;
                    this.RaisePropertyChanged("Attribute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeHeader {
            get {
                return this.AttributeHeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeHeaderField, value) != true)) {
                    this.AttributeHeaderField = value;
                    this.RaisePropertyChanged("AttributeHeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((this.FileTypeField.Equals(value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KnowledgeBase {
            get {
                return this.KnowledgeBaseField;
            }
            set {
                if ((this.KnowledgeBaseField.Equals(value) != true)) {
                    this.KnowledgeBaseField = value;
                    this.RaisePropertyChanged("KnowledgeBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ModifyDate {
            get {
                return this.ModifyDateField;
            }
            set {
                if ((this.ModifyDateField.Equals(value) != true)) {
                    this.ModifyDateField = value;
                    this.RaisePropertyChanged("ModifyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewAlert {
            get {
                return this.NewAlertField;
            }
            set {
                if ((this.NewAlertField.Equals(value) != true)) {
                    this.NewAlertField = value;
                    this.RaisePropertyChanged("NewAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateAlert {
            get {
                return this.UpdateAlertField;
            }
            set {
                if ((this.UpdateAlertField.Equals(value) != true)) {
                    this.UpdateAlertField = value;
                    this.RaisePropertyChanged("UpdateAlert");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PortalArticleInfoMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class PortalArticleInfoMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArticleCategorizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArticleFavoriteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArticleInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArticleSubscriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArticleSuggestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BookmarkArticleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CopyArticleLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocumentViewNotificationDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DownloadArticleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EditArticleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailArticleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExternalNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HighLightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncludeArticleContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsExpandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OfficeDocumentNotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeDocumentNotificationContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrintArticleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RateArticleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SocialMediaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuggestEmailTemplateBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuggestionNotificationEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ArticleCategorization {
            get {
                return this.ArticleCategorizationField;
            }
            set {
                if ((this.ArticleCategorizationField.Equals(value) != true)) {
                    this.ArticleCategorizationField = value;
                    this.RaisePropertyChanged("ArticleCategorization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ArticleFavorite {
            get {
                return this.ArticleFavoriteField;
            }
            set {
                if ((this.ArticleFavoriteField.Equals(value) != true)) {
                    this.ArticleFavoriteField = value;
                    this.RaisePropertyChanged("ArticleFavorite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ArticleInfo {
            get {
                return this.ArticleInfoField;
            }
            set {
                if ((this.ArticleInfoField.Equals(value) != true)) {
                    this.ArticleInfoField = value;
                    this.RaisePropertyChanged("ArticleInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ArticleSubscription {
            get {
                return this.ArticleSubscriptionField;
            }
            set {
                if ((this.ArticleSubscriptionField.Equals(value) != true)) {
                    this.ArticleSubscriptionField = value;
                    this.RaisePropertyChanged("ArticleSubscription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ArticleSuggestion {
            get {
                return this.ArticleSuggestionField;
            }
            set {
                if ((this.ArticleSuggestionField.Equals(value) != true)) {
                    this.ArticleSuggestionField = value;
                    this.RaisePropertyChanged("ArticleSuggestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BookmarkArticle {
            get {
                return this.BookmarkArticleField;
            }
            set {
                if ((this.BookmarkArticleField.Equals(value) != true)) {
                    this.BookmarkArticleField = value;
                    this.RaisePropertyChanged("BookmarkArticle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CopyArticleLink {
            get {
                return this.CopyArticleLinkField;
            }
            set {
                if ((this.CopyArticleLinkField.Equals(value) != true)) {
                    this.CopyArticleLinkField = value;
                    this.RaisePropertyChanged("CopyArticleLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocumentViewNotificationDefault {
            get {
                return this.DocumentViewNotificationDefaultField;
            }
            set {
                if ((this.DocumentViewNotificationDefaultField.Equals(value) != true)) {
                    this.DocumentViewNotificationDefaultField = value;
                    this.RaisePropertyChanged("DocumentViewNotificationDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DownloadArticle {
            get {
                return this.DownloadArticleField;
            }
            set {
                if ((this.DownloadArticleField.Equals(value) != true)) {
                    this.DownloadArticleField = value;
                    this.RaisePropertyChanged("DownloadArticle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EditArticle {
            get {
                return this.EditArticleField;
            }
            set {
                if ((this.EditArticleField.Equals(value) != true)) {
                    this.EditArticleField = value;
                    this.RaisePropertyChanged("EditArticle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailArticle {
            get {
                return this.EmailArticleField;
            }
            set {
                if ((this.EmailArticleField.Equals(value) != true)) {
                    this.EmailArticleField = value;
                    this.RaisePropertyChanged("EmailArticle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExternalNotes {
            get {
                return this.ExternalNotesField;
            }
            set {
                if ((this.ExternalNotesField.Equals(value) != true)) {
                    this.ExternalNotesField = value;
                    this.RaisePropertyChanged("ExternalNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HighLight {
            get {
                return this.HighLightField;
            }
            set {
                if ((this.HighLightField.Equals(value) != true)) {
                    this.HighLightField = value;
                    this.RaisePropertyChanged("HighLight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncludeArticleContent {
            get {
                return this.IncludeArticleContentField;
            }
            set {
                if ((this.IncludeArticleContentField.Equals(value) != true)) {
                    this.IncludeArticleContentField = value;
                    this.RaisePropertyChanged("IncludeArticleContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsExpand {
            get {
                return this.IsExpandField;
            }
            set {
                if ((this.IsExpandField.Equals(value) != true)) {
                    this.IsExpandField = value;
                    this.RaisePropertyChanged("IsExpand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationEmail {
            get {
                return this.NotificationEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationEmailField, value) != true)) {
                    this.NotificationEmailField = value;
                    this.RaisePropertyChanged("NotificationEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OfficeDocumentNotification {
            get {
                return this.OfficeDocumentNotificationField;
            }
            set {
                if ((this.OfficeDocumentNotificationField.Equals(value) != true)) {
                    this.OfficeDocumentNotificationField = value;
                    this.RaisePropertyChanged("OfficeDocumentNotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeDocumentNotificationContent {
            get {
                return this.OfficeDocumentNotificationContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeDocumentNotificationContentField, value) != true)) {
                    this.OfficeDocumentNotificationContentField = value;
                    this.RaisePropertyChanged("OfficeDocumentNotificationContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrintArticle {
            get {
                return this.PrintArticleField;
            }
            set {
                if ((this.PrintArticleField.Equals(value) != true)) {
                    this.PrintArticleField = value;
                    this.RaisePropertyChanged("PrintArticle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RateArticle {
            get {
                return this.RateArticleField;
            }
            set {
                if ((this.RateArticleField.Equals(value) != true)) {
                    this.RateArticleField = value;
                    this.RaisePropertyChanged("RateArticle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SocialMedia {
            get {
                return this.SocialMediaField;
            }
            set {
                if ((this.SocialMediaField.Equals(value) != true)) {
                    this.SocialMediaField = value;
                    this.RaisePropertyChanged("SocialMedia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuggestEmailTemplateBody {
            get {
                return this.SuggestEmailTemplateBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.SuggestEmailTemplateBodyField, value) != true)) {
                    this.SuggestEmailTemplateBodyField = value;
                    this.RaisePropertyChanged("SuggestEmailTemplateBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SuggestionNotificationEmail {
            get {
                return this.SuggestionNotificationEmailField;
            }
            set {
                if ((this.SuggestionNotificationEmailField.Equals(value) != true)) {
                    this.SuggestionNotificationEmailField = value;
                    this.RaisePropertyChanged("SuggestionNotificationEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PortalSettingMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.User")]
    [System.SerializableAttribute()]
    public partial class PortalSettingMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalSettingField[] FieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalSettingField[] Fields {
            get {
                return this.FieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldsField, value) != true)) {
                    this.FieldsField = value;
                    this.RaisePropertyChanged("Fields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WidgetManagement", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class WidgetManagement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember AdManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember AllKBSearchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember ArticlesViewedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember ChatEscalationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember ContributeKBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember ContributeWikiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember CustomMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember HotTopicsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember LatestArticlesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember MostActiveForumsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember MostRecentWikisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember PortalFeedbackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember RecentSearchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember TagCloudField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember Top10FAQField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember TopRatedForumsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember TopRatedWikisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember TopSearchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember TopViewedWikisField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember AdManager {
            get {
                return this.AdManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.AdManagerField, value) != true)) {
                    this.AdManagerField = value;
                    this.RaisePropertyChanged("AdManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember AllKBSearch {
            get {
                return this.AllKBSearchField;
            }
            set {
                if ((object.ReferenceEquals(this.AllKBSearchField, value) != true)) {
                    this.AllKBSearchField = value;
                    this.RaisePropertyChanged("AllKBSearch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember ArticlesViewed {
            get {
                return this.ArticlesViewedField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticlesViewedField, value) != true)) {
                    this.ArticlesViewedField = value;
                    this.RaisePropertyChanged("ArticlesViewed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember ChatEscalation {
            get {
                return this.ChatEscalationField;
            }
            set {
                if ((object.ReferenceEquals(this.ChatEscalationField, value) != true)) {
                    this.ChatEscalationField = value;
                    this.RaisePropertyChanged("ChatEscalation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember ContributeKB {
            get {
                return this.ContributeKBField;
            }
            set {
                if ((object.ReferenceEquals(this.ContributeKBField, value) != true)) {
                    this.ContributeKBField = value;
                    this.RaisePropertyChanged("ContributeKB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember ContributeWiki {
            get {
                return this.ContributeWikiField;
            }
            set {
                if ((object.ReferenceEquals(this.ContributeWikiField, value) != true)) {
                    this.ContributeWikiField = value;
                    this.RaisePropertyChanged("ContributeWiki");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember CustomMessage {
            get {
                return this.CustomMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomMessageField, value) != true)) {
                    this.CustomMessageField = value;
                    this.RaisePropertyChanged("CustomMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember HotTopics {
            get {
                return this.HotTopicsField;
            }
            set {
                if ((object.ReferenceEquals(this.HotTopicsField, value) != true)) {
                    this.HotTopicsField = value;
                    this.RaisePropertyChanged("HotTopics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember LatestArticles {
            get {
                return this.LatestArticlesField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestArticlesField, value) != true)) {
                    this.LatestArticlesField = value;
                    this.RaisePropertyChanged("LatestArticles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember MostActiveForums {
            get {
                return this.MostActiveForumsField;
            }
            set {
                if ((object.ReferenceEquals(this.MostActiveForumsField, value) != true)) {
                    this.MostActiveForumsField = value;
                    this.RaisePropertyChanged("MostActiveForums");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember MostRecentWikis {
            get {
                return this.MostRecentWikisField;
            }
            set {
                if ((object.ReferenceEquals(this.MostRecentWikisField, value) != true)) {
                    this.MostRecentWikisField = value;
                    this.RaisePropertyChanged("MostRecentWikis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember PortalFeedback {
            get {
                return this.PortalFeedbackField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalFeedbackField, value) != true)) {
                    this.PortalFeedbackField = value;
                    this.RaisePropertyChanged("PortalFeedback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember RecentSearches {
            get {
                return this.RecentSearchesField;
            }
            set {
                if ((object.ReferenceEquals(this.RecentSearchesField, value) != true)) {
                    this.RecentSearchesField = value;
                    this.RaisePropertyChanged("RecentSearches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember TagCloud {
            get {
                return this.TagCloudField;
            }
            set {
                if ((object.ReferenceEquals(this.TagCloudField, value) != true)) {
                    this.TagCloudField = value;
                    this.RaisePropertyChanged("TagCloud");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember Top10FAQ {
            get {
                return this.Top10FAQField;
            }
            set {
                if ((object.ReferenceEquals(this.Top10FAQField, value) != true)) {
                    this.Top10FAQField = value;
                    this.RaisePropertyChanged("Top10FAQ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember TopRatedForums {
            get {
                return this.TopRatedForumsField;
            }
            set {
                if ((object.ReferenceEquals(this.TopRatedForumsField, value) != true)) {
                    this.TopRatedForumsField = value;
                    this.RaisePropertyChanged("TopRatedForums");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember TopRatedWikis {
            get {
                return this.TopRatedWikisField;
            }
            set {
                if ((object.ReferenceEquals(this.TopRatedWikisField, value) != true)) {
                    this.TopRatedWikisField = value;
                    this.RaisePropertyChanged("TopRatedWikis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember TopSearches {
            get {
                return this.TopSearchesField;
            }
            set {
                if ((object.ReferenceEquals(this.TopSearchesField, value) != true)) {
                    this.TopSearchesField = value;
                    this.RaisePropertyChanged("TopSearches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember TopViewedWikis {
            get {
                return this.TopViewedWikisField;
            }
            set {
                if ((object.ReferenceEquals(this.TopViewedWikisField, value) != true)) {
                    this.TopViewedWikisField = value;
                    this.RaisePropertyChanged("TopViewedWikis");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Wiki", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Wiki")]
    [System.SerializableAttribute()]
    public partial class Wiki : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CheckOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CheckOutDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckOutFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckOutLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CheckOutUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifyFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifyLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModifyUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifydateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatAveRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatRateCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SttatHitCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[] TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template TemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ViewdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WikiContentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WikiIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiVersion[] WikiVersionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[] _tagsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CheckOut {
            get {
                return this.CheckOutField;
            }
            set {
                if ((this.CheckOutField.Equals(value) != true)) {
                    this.CheckOutField = value;
                    this.RaisePropertyChanged("CheckOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CheckOutDate {
            get {
                return this.CheckOutDateField;
            }
            set {
                if ((this.CheckOutDateField.Equals(value) != true)) {
                    this.CheckOutDateField = value;
                    this.RaisePropertyChanged("CheckOutDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckOutFirstName {
            get {
                return this.CheckOutFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckOutFirstNameField, value) != true)) {
                    this.CheckOutFirstNameField = value;
                    this.RaisePropertyChanged("CheckOutFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckOutLastName {
            get {
                return this.CheckOutLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckOutLastNameField, value) != true)) {
                    this.CheckOutLastNameField = value;
                    this.RaisePropertyChanged("CheckOutLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CheckOutUserID {
            get {
                return this.CheckOutUserIDField;
            }
            set {
                if ((this.CheckOutUserIDField.Equals(value) != true)) {
                    this.CheckOutUserIDField = value;
                    this.RaisePropertyChanged("CheckOutUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedFirstName {
            get {
                return this.CreatedFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedFirstNameField, value) != true)) {
                    this.CreatedFirstNameField = value;
                    this.RaisePropertyChanged("CreatedFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedLastName {
            get {
                return this.CreatedLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedLastNameField, value) != true)) {
                    this.CreatedLastNameField = value;
                    this.RaisePropertyChanged("CreatedLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedUserID {
            get {
                return this.CreatedUserIDField;
            }
            set {
                if ((this.CreatedUserIDField.Equals(value) != true)) {
                    this.CreatedUserIDField = value;
                    this.RaisePropertyChanged("CreatedUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Createdate {
            get {
                return this.CreatedateField;
            }
            set {
                if ((this.CreatedateField.Equals(value) != true)) {
                    this.CreatedateField = value;
                    this.RaisePropertyChanged("Createdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifyFirstName {
            get {
                return this.ModifyFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifyFirstNameField, value) != true)) {
                    this.ModifyFirstNameField = value;
                    this.RaisePropertyChanged("ModifyFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifyLastName {
            get {
                return this.ModifyLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifyLastNameField, value) != true)) {
                    this.ModifyLastNameField = value;
                    this.RaisePropertyChanged("ModifyLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModifyUserID {
            get {
                return this.ModifyUserIDField;
            }
            set {
                if ((this.ModifyUserIDField.Equals(value) != true)) {
                    this.ModifyUserIDField = value;
                    this.RaisePropertyChanged("ModifyUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Modifydate {
            get {
                return this.ModifydateField;
            }
            set {
                if ((this.ModifydateField.Equals(value) != true)) {
                    this.ModifydateField = value;
                    this.RaisePropertyChanged("Modifydate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PortalID {
            get {
                return this.PortalIDField;
            }
            set {
                if ((this.PortalIDField.Equals(value) != true)) {
                    this.PortalIDField = value;
                    this.RaisePropertyChanged("PortalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortalName {
            get {
                return this.PortalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalNameField, value) != true)) {
                    this.PortalNameField = value;
                    this.RaisePropertyChanged("PortalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatAveRating {
            get {
                return this.StatAveRatingField;
            }
            set {
                if ((this.StatAveRatingField.Equals(value) != true)) {
                    this.StatAveRatingField = value;
                    this.RaisePropertyChanged("StatAveRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatRateCount {
            get {
                return this.StatRateCountField;
            }
            set {
                if ((this.StatRateCountField.Equals(value) != true)) {
                    this.StatRateCountField = value;
                    this.RaisePropertyChanged("StatRateCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SttatHitCount {
            get {
                return this.SttatHitCountField;
            }
            set {
                if ((this.SttatHitCountField.Equals(value) != true)) {
                    this.SttatHitCountField = value;
                    this.RaisePropertyChanged("SttatHitCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[] Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template Template {
            get {
                return this.TemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateField, value) != true)) {
                    this.TemplateField = value;
                    this.RaisePropertyChanged("Template");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Viewdate {
            get {
                return this.ViewdateField;
            }
            set {
                if ((this.ViewdateField.Equals(value) != true)) {
                    this.ViewdateField = value;
                    this.RaisePropertyChanged("Viewdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WikiContents {
            get {
                return this.WikiContentsField;
            }
            set {
                if ((object.ReferenceEquals(this.WikiContentsField, value) != true)) {
                    this.WikiContentsField = value;
                    this.RaisePropertyChanged("WikiContents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WikiID {
            get {
                return this.WikiIDField;
            }
            set {
                if ((this.WikiIDField.Equals(value) != true)) {
                    this.WikiIDField = value;
                    this.RaisePropertyChanged("WikiID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiVersion[] WikiVersions {
            get {
                return this.WikiVersionsField;
            }
            set {
                if ((object.ReferenceEquals(this.WikiVersionsField, value) != true)) {
                    this.WikiVersionsField = value;
                    this.RaisePropertyChanged("WikiVersions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[] _tags {
            get {
                return this._tagsField;
            }
            set {
                if ((object.ReferenceEquals(this._tagsField, value) != true)) {
                    this._tagsField = value;
                    this.RaisePropertyChanged("_tags");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Template", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Wiki")]
    [System.SerializableAttribute()]
    public partial class Template : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TemplateSection[] TemplateSectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((this.TemplateIDField.Equals(value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateName {
            get {
                return this.TemplateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateNameField, value) != true)) {
                    this.TemplateNameField = value;
                    this.RaisePropertyChanged("TemplateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TemplateSection[] TemplateSections {
            get {
                return this.TemplateSectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateSectionsField, value) != true)) {
                    this.TemplateSectionsField = value;
                    this.RaisePropertyChanged("TemplateSections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateTag {
            get {
                return this.TemplateTagField;
            }
            set {
                if ((this.TemplateTagField.Equals(value) != true)) {
                    this.TemplateTagField = value;
                    this.RaisePropertyChanged("TemplateTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateType {
            get {
                return this.TemplateTypeField;
            }
            set {
                if ((this.TemplateTypeField.Equals(value) != true)) {
                    this.TemplateTypeField = value;
                    this.RaisePropertyChanged("TemplateType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemplateSection", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Wiki")]
    [System.SerializableAttribute()]
    public partial class TemplateSection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateBodyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateSectionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultStyle {
            get {
                return this.DefaultStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultStyleField, value) != true)) {
                    this.DefaultStyleField = value;
                    this.RaisePropertyChanged("DefaultStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayTitle {
            get {
                return this.DisplayTitleField;
            }
            set {
                if ((this.DisplayTitleField.Equals(value) != true)) {
                    this.DisplayTitleField = value;
                    this.RaisePropertyChanged("DisplayTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Required {
            get {
                return this.RequiredField;
            }
            set {
                if ((this.RequiredField.Equals(value) != true)) {
                    this.RequiredField = value;
                    this.RaisePropertyChanged("Required");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateBodyName {
            get {
                return this.TemplateBodyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateBodyNameField, value) != true)) {
                    this.TemplateBodyNameField = value;
                    this.RaisePropertyChanged("TemplateBodyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((this.TemplateIDField.Equals(value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateSectionID {
            get {
                return this.TemplateSectionIDField;
            }
            set {
                if ((this.TemplateSectionIDField.Equals(value) != true)) {
                    this.TemplateSectionIDField = value;
                    this.RaisePropertyChanged("TemplateSectionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WikiVersion", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Wiki")]
    [System.SerializableAttribute()]
    public partial class WikiVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedInPortalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedUserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileExtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionMinorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WikiFileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WikiIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedInPortalID {
            get {
                return this.CreatedInPortalIDField;
            }
            set {
                if ((this.CreatedInPortalIDField.Equals(value) != true)) {
                    this.CreatedInPortalIDField = value;
                    this.RaisePropertyChanged("CreatedInPortalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedUserID {
            get {
                return this.CreatedUserIDField;
            }
            set {
                if ((this.CreatedUserIDField.Equals(value) != true)) {
                    this.CreatedUserIDField = value;
                    this.RaisePropertyChanged("CreatedUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedUserType {
            get {
                return this.CreatedUserTypeField;
            }
            set {
                if ((this.CreatedUserTypeField.Equals(value) != true)) {
                    this.CreatedUserTypeField = value;
                    this.RaisePropertyChanged("CreatedUserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Createdate {
            get {
                return this.CreatedateField;
            }
            set {
                if ((this.CreatedateField.Equals(value) != true)) {
                    this.CreatedateField = value;
                    this.RaisePropertyChanged("Createdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileExt {
            get {
                return this.FileExtField;
            }
            set {
                if ((object.ReferenceEquals(this.FileExtField, value) != true)) {
                    this.FileExtField = value;
                    this.RaisePropertyChanged("FileExt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((this.TemplateIDField.Equals(value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionMinor {
            get {
                return this.VersionMinorField;
            }
            set {
                if ((this.VersionMinorField.Equals(value) != true)) {
                    this.VersionMinorField = value;
                    this.RaisePropertyChanged("VersionMinor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WikiFileID {
            get {
                return this.WikiFileIDField;
            }
            set {
                if ((this.WikiFileIDField.Equals(value) != true)) {
                    this.WikiFileIDField = value;
                    this.RaisePropertyChanged("WikiFileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WikiID {
            get {
                return this.WikiIDField;
            }
            set {
                if ((this.WikiIDField.Equals(value) != true)) {
                    this.WikiIDField = value;
                    this.RaisePropertyChanged("WikiID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WikiPortalConfig", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Wiki")]
    [System.SerializableAttribute()]
    public partial class WikiPortalConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccessWikiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedByDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreatedByDateFilterEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.User[] CreatedByUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Portal[] CreatedPortalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreatedTemplateFliterEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template[] CreatedTemplatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreatedUserFliterEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserProfile[] CreatedUserProfilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxTagCloudDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedByDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ModifiedByDateFilterEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PortalFliterEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template[] TemplatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UserProfileFliterEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WikiPortalConfigIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccessWiki {
            get {
                return this.AccessWikiField;
            }
            set {
                if ((this.AccessWikiField.Equals(value) != true)) {
                    this.AccessWikiField = value;
                    this.RaisePropertyChanged("AccessWiki");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedByDate {
            get {
                return this.CreatedByDateField;
            }
            set {
                if ((this.CreatedByDateField.Equals(value) != true)) {
                    this.CreatedByDateField = value;
                    this.RaisePropertyChanged("CreatedByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreatedByDateFilterEnable {
            get {
                return this.CreatedByDateFilterEnableField;
            }
            set {
                if ((this.CreatedByDateFilterEnableField.Equals(value) != true)) {
                    this.CreatedByDateFilterEnableField = value;
                    this.RaisePropertyChanged("CreatedByDateFilterEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.User[] CreatedByUsers {
            get {
                return this.CreatedByUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUsersField, value) != true)) {
                    this.CreatedByUsersField = value;
                    this.RaisePropertyChanged("CreatedByUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Portal[] CreatedPortals {
            get {
                return this.CreatedPortalsField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedPortalsField, value) != true)) {
                    this.CreatedPortalsField = value;
                    this.RaisePropertyChanged("CreatedPortals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreatedTemplateFliterEnable {
            get {
                return this.CreatedTemplateFliterEnableField;
            }
            set {
                if ((this.CreatedTemplateFliterEnableField.Equals(value) != true)) {
                    this.CreatedTemplateFliterEnableField = value;
                    this.RaisePropertyChanged("CreatedTemplateFliterEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template[] CreatedTemplates {
            get {
                return this.CreatedTemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedTemplatesField, value) != true)) {
                    this.CreatedTemplatesField = value;
                    this.RaisePropertyChanged("CreatedTemplates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreatedUserFliterEnable {
            get {
                return this.CreatedUserFliterEnableField;
            }
            set {
                if ((this.CreatedUserFliterEnableField.Equals(value) != true)) {
                    this.CreatedUserFliterEnableField = value;
                    this.RaisePropertyChanged("CreatedUserFliterEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserProfile[] CreatedUserProfiles {
            get {
                return this.CreatedUserProfilesField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedUserProfilesField, value) != true)) {
                    this.CreatedUserProfilesField = value;
                    this.RaisePropertyChanged("CreatedUserProfiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableTag {
            get {
                return this.EnableTagField;
            }
            set {
                if ((this.EnableTagField.Equals(value) != true)) {
                    this.EnableTagField = value;
                    this.RaisePropertyChanged("EnableTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxTagCloudDisplay {
            get {
                return this.MaxTagCloudDisplayField;
            }
            set {
                if ((this.MaxTagCloudDisplayField.Equals(value) != true)) {
                    this.MaxTagCloudDisplayField = value;
                    this.RaisePropertyChanged("MaxTagCloudDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedByDate {
            get {
                return this.ModifiedByDateField;
            }
            set {
                if ((this.ModifiedByDateField.Equals(value) != true)) {
                    this.ModifiedByDateField = value;
                    this.RaisePropertyChanged("ModifiedByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ModifiedByDateFilterEnable {
            get {
                return this.ModifiedByDateFilterEnableField;
            }
            set {
                if ((this.ModifiedByDateFilterEnableField.Equals(value) != true)) {
                    this.ModifiedByDateFilterEnableField = value;
                    this.RaisePropertyChanged("ModifiedByDateFilterEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PortalFliterEnable {
            get {
                return this.PortalFliterEnableField;
            }
            set {
                if ((this.PortalFliterEnableField.Equals(value) != true)) {
                    this.PortalFliterEnableField = value;
                    this.RaisePropertyChanged("PortalFliterEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PortalID {
            get {
                return this.PortalIDField;
            }
            set {
                if ((this.PortalIDField.Equals(value) != true)) {
                    this.PortalIDField = value;
                    this.RaisePropertyChanged("PortalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template[] Templates {
            get {
                return this.TemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatesField, value) != true)) {
                    this.TemplatesField = value;
                    this.RaisePropertyChanged("Templates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserProfileFliterEnable {
            get {
                return this.UserProfileFliterEnableField;
            }
            set {
                if ((this.UserProfileFliterEnableField.Equals(value) != true)) {
                    this.UserProfileFliterEnableField = value;
                    this.RaisePropertyChanged("UserProfileFliterEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WikiPortalConfigID {
            get {
                return this.WikiPortalConfigIDField;
            }
            set {
                if ((this.WikiPortalConfigIDField.Equals(value) != true)) {
                    this.WikiPortalConfigIDField = value;
                    this.RaisePropertyChanged("WikiPortalConfigID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Wiki")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int type {
            get {
                return this.typeField;
            }
            set {
                if ((this.typeField.Equals(value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Portal", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Wiki")]
    [System.SerializableAttribute()]
    public partial class Portal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int portalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string portalNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int portalID {
            get {
                return this.portalIDField;
            }
            set {
                if ((this.portalIDField.Equals(value) != true)) {
                    this.portalIDField = value;
                    this.RaisePropertyChanged("portalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string portalName {
            get {
                return this.portalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.portalNameField, value) != true)) {
                    this.portalNameField = value;
                    this.RaisePropertyChanged("portalName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfile", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Wiki")]
    [System.SerializableAttribute()]
    public partial class UserProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int profileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string profileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int profileTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int profileID {
            get {
                return this.profileIDField;
            }
            set {
                if ((this.profileIDField.Equals(value) != true)) {
                    this.profileIDField = value;
                    this.RaisePropertyChanged("profileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string profileName {
            get {
                return this.profileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.profileNameField, value) != true)) {
                    this.profileNameField = value;
                    this.RaisePropertyChanged("profileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int profileType {
            get {
                return this.profileTypeField;
            }
            set {
                if ((this.profileTypeField.Equals(value) != true)) {
                    this.profileTypeField = value;
                    this.RaisePropertyChanged("profileType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WikiUserActivityReport", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Wiki")]
    [System.SerializableAttribute()]
    public partial class WikiUserActivityReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SearchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VisitEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VisitStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisittimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WikiIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int searchid1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PortalId {
            get {
                return this.PortalIdField;
            }
            set {
                if ((this.PortalIdField.Equals(value) != true)) {
                    this.PortalIdField = value;
                    this.RaisePropertyChanged("PortalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SearchId {
            get {
                return this.SearchIdField;
            }
            set {
                if ((this.SearchIdField.Equals(value) != true)) {
                    this.SearchIdField = value;
                    this.RaisePropertyChanged("SearchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitEndDate {
            get {
                return this.VisitEndDateField;
            }
            set {
                if ((this.VisitEndDateField.Equals(value) != true)) {
                    this.VisitEndDateField = value;
                    this.RaisePropertyChanged("VisitEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitStartDate {
            get {
                return this.VisitStartDateField;
            }
            set {
                if ((this.VisitStartDateField.Equals(value) != true)) {
                    this.VisitStartDateField = value;
                    this.RaisePropertyChanged("VisitStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Visittime {
            get {
                return this.VisittimeField;
            }
            set {
                if ((object.ReferenceEquals(this.VisittimeField, value) != true)) {
                    this.VisittimeField = value;
                    this.RaisePropertyChanged("Visittime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WikiID {
            get {
                return this.WikiIDField;
            }
            set {
                if ((this.WikiIDField.Equals(value) != true)) {
                    this.WikiIDField = value;
                    this.RaisePropertyChanged("WikiID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="searchid")]
        public int searchid1 {
            get {
                return this.searchid1Field;
            }
            set {
                if ((this.searchid1Field.Equals(value) != true)) {
                    this.searchid1Field = value;
                    this.RaisePropertyChanged("searchid1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FAQDisplayOption", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    public enum FAQDisplayOption : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ListallFAQswithoutanycategories = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ListFAQswithcategoriesin1verticalcolumn = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ListFAQswithcategoriesin2verticalcolumns = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileTypeMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class FileTypeMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileContentHeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileExtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileContentHeader {
            get {
                return this.FileContentHeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.FileContentHeaderField, value) != true)) {
                    this.FileContentHeaderField = value;
                    this.RaisePropertyChanged("FileContentHeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileExt {
            get {
                return this.FileExtField;
            }
            set {
                if ((object.ReferenceEquals(this.FileExtField, value) != true)) {
                    this.FileExtField = value;
                    this.RaisePropertyChanged("FileExt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileTypeID {
            get {
                return this.FileTypeIDField;
            }
            set {
                if ((this.FileTypeIDField.Equals(value) != true)) {
                    this.FileTypeIDField = value;
                    this.RaisePropertyChanged("FileTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileTypeName {
            get {
                return this.FileTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeNameField, value) != true)) {
                    this.FileTypeNameField = value;
                    this.RaisePropertyChanged("FileTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PortalLanguageMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class PortalLanguageMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageFileName {
            get {
                return this.LanguageFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageFileNameField, value) != true)) {
                    this.LanguageFileNameField = value;
                    this.RaisePropertyChanged("LanguageFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageName {
            get {
                return this.LanguageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageNameField, value) != true)) {
                    this.LanguageNameField = value;
                    this.RaisePropertyChanged("LanguageName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WidgetManagementMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class WidgetManagementMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ButtonTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnabledField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ButtonText {
            get {
                return this.ButtonTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ButtonTextField, value) != true)) {
                    this.ButtonTextField = value;
                    this.RaisePropertyChanged("ButtonText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentText {
            get {
                return this.ContentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentTextField, value) != true)) {
                    this.ContentTextField = value;
                    this.RaisePropertyChanged("ContentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnabled {
            get {
                return this.IsEnabledField;
            }
            set {
                if ((this.IsEnabledField.Equals(value) != true)) {
                    this.IsEnabledField = value;
                    this.RaisePropertyChanged("IsEnabled");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class ArticleMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleAttributeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArticleCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleFileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ArticleGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArticleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleSummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KBIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AlertStatus StatusAlertField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleAttributeName {
            get {
                return this.ArticleAttributeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleAttributeNameField, value) != true)) {
                    this.ArticleAttributeNameField = value;
                    this.RaisePropertyChanged("ArticleAttributeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArticleCategoryID {
            get {
                return this.ArticleCategoryIDField;
            }
            set {
                if ((this.ArticleCategoryIDField.Equals(value) != true)) {
                    this.ArticleCategoryIDField = value;
                    this.RaisePropertyChanged("ArticleCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleFileType {
            get {
                return this.ArticleFileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleFileTypeField, value) != true)) {
                    this.ArticleFileTypeField = value;
                    this.RaisePropertyChanged("ArticleFileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ArticleGroupID {
            get {
                return this.ArticleGroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleGroupIDField, value) != true)) {
                    this.ArticleGroupIDField = value;
                    this.RaisePropertyChanged("ArticleGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArticleID {
            get {
                return this.ArticleIDField;
            }
            set {
                if ((this.ArticleIDField.Equals(value) != true)) {
                    this.ArticleIDField = value;
                    this.RaisePropertyChanged("ArticleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleName {
            get {
                return this.ArticleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleNameField, value) != true)) {
                    this.ArticleNameField = value;
                    this.RaisePropertyChanged("ArticleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleSummary {
            get {
                return this.ArticleSummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleSummaryField, value) != true)) {
                    this.ArticleSummaryField = value;
                    this.RaisePropertyChanged("ArticleSummary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocID {
            get {
                return this.DocIDField;
            }
            set {
                if ((this.DocIDField.Equals(value) != true)) {
                    this.DocIDField = value;
                    this.RaisePropertyChanged("DocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileSizeField, value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KBID {
            get {
                return this.KBIDField;
            }
            set {
                if ((this.KBIDField.Equals(value) != true)) {
                    this.KBIDField = value;
                    this.RaisePropertyChanged("KBID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBName {
            get {
                return this.KBNameField;
            }
            set {
                if ((object.ReferenceEquals(this.KBNameField, value) != true)) {
                    this.KBNameField = value;
                    this.RaisePropertyChanged("KBName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AlertStatus StatusAlert {
            get {
                return this.StatusAlertField;
            }
            set {
                if ((this.StatusAlertField.Equals(value) != true)) {
                    this.StatusAlertField = value;
                    this.RaisePropertyChanged("StatusAlert");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlertStatus", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    public enum AlertStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoAlert = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchCloudResultMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class SearchCloudResultMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int numbersearchField;
        
        private string searchtermField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int numbersearch {
            get {
                return this.numbersearchField;
            }
            set {
                if ((this.numbersearchField.Equals(value) != true)) {
                    this.numbersearchField = value;
                    this.RaisePropertyChanged("numbersearch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string searchterm {
            get {
                return this.searchtermField;
            }
            set {
                if ((object.ReferenceEquals(this.searchtermField, value) != true)) {
                    this.searchtermField = value;
                    this.RaisePropertyChanged("searchterm");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchTypeMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class SearchTypeMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SearchTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod SearchTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchDescription {
            get {
                return this.SearchDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchDescriptionField, value) != true)) {
                    this.SearchDescriptionField = value;
                    this.RaisePropertyChanged("SearchDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SearchTypeId {
            get {
                return this.SearchTypeIdField;
            }
            set {
                if ((this.SearchTypeIdField.Equals(value) != true)) {
                    this.SearchTypeIdField = value;
                    this.RaisePropertyChanged("SearchTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod SearchTypeName {
            get {
                return this.SearchTypeNameField;
            }
            set {
                if ((this.SearchTypeNameField.Equals(value) != true)) {
                    this.SearchTypeNameField = value;
                    this.RaisePropertyChanged("SearchTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class TagMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberArticleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TagIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberArticle {
            get {
                return this.NumberArticleField;
            }
            set {
                if ((this.NumberArticleField.Equals(value) != true)) {
                    this.NumberArticleField = value;
                    this.RaisePropertyChanged("NumberArticle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagID {
            get {
                return this.TagIDField;
            }
            set {
                if ((this.TagIDField.Equals(value) != true)) {
                    this.TagIDField = value;
                    this.RaisePropertyChanged("TagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FAQMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class FAQMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArticleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FAQCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FAQCatNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FAQIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FAQNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KBIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArticleID {
            get {
                return this.ArticleIDField;
            }
            set {
                if ((this.ArticleIDField.Equals(value) != true)) {
                    this.ArticleIDField = value;
                    this.RaisePropertyChanged("ArticleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleName {
            get {
                return this.ArticleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleNameField, value) != true)) {
                    this.ArticleNameField = value;
                    this.RaisePropertyChanged("ArticleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FAQCatID {
            get {
                return this.FAQCatIDField;
            }
            set {
                if ((this.FAQCatIDField.Equals(value) != true)) {
                    this.FAQCatIDField = value;
                    this.RaisePropertyChanged("FAQCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FAQCatName {
            get {
                return this.FAQCatNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FAQCatNameField, value) != true)) {
                    this.FAQCatNameField = value;
                    this.RaisePropertyChanged("FAQCatName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FAQID {
            get {
                return this.FAQIDField;
            }
            set {
                if ((this.FAQIDField.Equals(value) != true)) {
                    this.FAQIDField = value;
                    this.RaisePropertyChanged("FAQID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FAQName {
            get {
                return this.FAQNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FAQNameField, value) != true)) {
                    this.FAQNameField = value;
                    this.RaisePropertyChanged("FAQName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KBID {
            get {
                return this.KBIDField;
            }
            set {
                if ((this.KBIDField.Equals(value) != true)) {
                    this.KBIDField = value;
                    this.RaisePropertyChanged("KBID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitCount {
            get {
                return this.VisitCountField;
            }
            set {
                if ((this.VisitCountField.Equals(value) != true)) {
                    this.VisitCountField = value;
                    this.RaisePropertyChanged("VisitCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FAQCategoryMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class FAQCategoryMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FAQCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FAQCatNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FAQOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KBIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FAQCatID {
            get {
                return this.FAQCatIDField;
            }
            set {
                if ((this.FAQCatIDField.Equals(value) != true)) {
                    this.FAQCatIDField = value;
                    this.RaisePropertyChanged("FAQCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FAQCatName {
            get {
                return this.FAQCatNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FAQCatNameField, value) != true)) {
                    this.FAQCatNameField = value;
                    this.RaisePropertyChanged("FAQCatName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FAQOrder {
            get {
                return this.FAQOrderField;
            }
            set {
                if ((this.FAQOrderField.Equals(value) != true)) {
                    this.FAQOrderField = value;
                    this.RaisePropertyChanged("FAQOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KBID {
            get {
                return this.KBIDField;
            }
            set {
                if ((this.KBIDField.Equals(value) != true)) {
                    this.KBIDField = value;
                    this.RaisePropertyChanged("KBID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class CategoryMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberArticleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberArticle {
            get {
                return this.NumberArticleField;
            }
            set {
                if ((this.NumberArticleField.Equals(value) != true)) {
                    this.NumberArticleField = value;
                    this.RaisePropertyChanged("NumberArticle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SolutionFinderMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class SolutionFinderMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SFChoiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SFChoiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SFstatementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SolutionFinderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SolutionFinderNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsParent {
            get {
                return this.IsParentField;
            }
            set {
                if ((this.IsParentField.Equals(value) != true)) {
                    this.IsParentField = value;
                    this.RaisePropertyChanged("IsParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SFChoiceID {
            get {
                return this.SFChoiceIDField;
            }
            set {
                if ((this.SFChoiceIDField.Equals(value) != true)) {
                    this.SFChoiceIDField = value;
                    this.RaisePropertyChanged("SFChoiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SFChoiceName {
            get {
                return this.SFChoiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SFChoiceNameField, value) != true)) {
                    this.SFChoiceNameField = value;
                    this.RaisePropertyChanged("SFChoiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SFstatement {
            get {
                return this.SFstatementField;
            }
            set {
                if ((object.ReferenceEquals(this.SFstatementField, value) != true)) {
                    this.SFstatementField = value;
                    this.RaisePropertyChanged("SFstatement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SolutionFinderID {
            get {
                return this.SolutionFinderIDField;
            }
            set {
                if ((this.SolutionFinderIDField.Equals(value) != true)) {
                    this.SolutionFinderIDField = value;
                    this.RaisePropertyChanged("SolutionFinderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SolutionFinderName {
            get {
                return this.SolutionFinderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SolutionFinderNameField, value) != true)) {
                    this.SolutionFinderNameField = value;
                    this.RaisePropertyChanged("SolutionFinderName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlossaryMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class GlossaryMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlossaryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlossaryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlossaryID {
            get {
                return this.GlossaryIDField;
            }
            set {
                if ((this.GlossaryIDField.Equals(value) != true)) {
                    this.GlossaryIDField = value;
                    this.RaisePropertyChanged("GlossaryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlossaryName {
            get {
                return this.GlossaryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GlossaryNameField, value) != true)) {
                    this.GlossaryNameField = value;
                    this.RaisePropertyChanged("GlossaryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlossaryTermMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class GlossaryTermMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Term {
            get {
                return this.TermField;
            }
            set {
                if ((object.ReferenceEquals(this.TermField, value) != true)) {
                    this.TermField = value;
                    this.RaisePropertyChanged("Term");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlossaryItemMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class GlossaryItemMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlossaryItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlossaryItemOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlossaryItemValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlossaryItemID {
            get {
                return this.GlossaryItemIDField;
            }
            set {
                if ((this.GlossaryItemIDField.Equals(value) != true)) {
                    this.GlossaryItemIDField = value;
                    this.RaisePropertyChanged("GlossaryItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlossaryItemOrder {
            get {
                return this.GlossaryItemOrderField;
            }
            set {
                if ((this.GlossaryItemOrderField.Equals(value) != true)) {
                    this.GlossaryItemOrderField = value;
                    this.RaisePropertyChanged("GlossaryItemOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlossaryItemValue {
            get {
                return this.GlossaryItemValueField;
            }
            set {
                if ((object.ReferenceEquals(this.GlossaryItemValueField, value) != true)) {
                    this.GlossaryItemValueField = value;
                    this.RaisePropertyChanged("GlossaryItemValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ATRMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class ATRMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ATRConfirmTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ATRNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ATRResultTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ATRSubmitTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRField[] FieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATREmail[] ToEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UploadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ATRConfirmText {
            get {
                return this.ATRConfirmTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ATRConfirmTextField, value) != true)) {
                    this.ATRConfirmTextField = value;
                    this.RaisePropertyChanged("ATRConfirmText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ATRName {
            get {
                return this.ATRNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ATRNameField, value) != true)) {
                    this.ATRNameField = value;
                    this.RaisePropertyChanged("ATRName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ATRResultText {
            get {
                return this.ATRResultTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ATRResultTextField, value) != true)) {
                    this.ATRResultTextField = value;
                    this.RaisePropertyChanged("ATRResultText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ATRSubmitText {
            get {
                return this.ATRSubmitTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ATRSubmitTextField, value) != true)) {
                    this.ATRSubmitTextField = value;
                    this.RaisePropertyChanged("ATRSubmitText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRField[] Fields {
            get {
                return this.FieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldsField, value) != true)) {
                    this.FieldsField = value;
                    this.RaisePropertyChanged("Fields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATREmail[] ToEmail {
            get {
                return this.ToEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ToEmailField, value) != true)) {
                    this.ToEmailField = value;
                    this.RaisePropertyChanged("ToEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Upload {
            get {
                return this.UploadField;
            }
            set {
                if ((this.UploadField.Equals(value) != true)) {
                    this.UploadField = value;
                    this.RaisePropertyChanged("Upload");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ATRField", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class ATRField : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRDropDownlist[] DropDownListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRDropDownlist[] DropDownList {
            get {
                return this.DropDownListField;
            }
            set {
                if ((object.ReferenceEquals(this.DropDownListField, value) != true)) {
                    this.DropDownListField = value;
                    this.RaisePropertyChanged("DropDownList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Required {
            get {
                return this.RequiredField;
            }
            set {
                if ((this.RequiredField.Equals(value) != true)) {
                    this.RequiredField = value;
                    this.RaisePropertyChanged("Required");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ATRDropDownlist", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class ATRDropDownlist : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValueID {
            get {
                return this.ValueIDField;
            }
            set {
                if ((this.ValueIDField.Equals(value) != true)) {
                    this.ValueIDField = value;
                    this.RaisePropertyChanged("ValueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueName {
            get {
                return this.ValueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueNameField, value) != true)) {
                    this.ValueNameField = value;
                    this.RaisePropertyChanged("ValueName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValueOrder {
            get {
                return this.ValueOrderField;
            }
            set {
                if ((this.ValueOrderField.Equals(value) != true)) {
                    this.ValueOrderField = value;
                    this.RaisePropertyChanged("ValueOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ATREmail", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class ATREmail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleInfoMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class ArticleInfoMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArticleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArticleViewField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArticleID {
            get {
                return this.ArticleIDField;
            }
            set {
                if ((this.ArticleIDField.Equals(value) != true)) {
                    this.ArticleIDField = value;
                    this.RaisePropertyChanged("ArticleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArticleView {
            get {
                return this.ArticleViewField;
            }
            set {
                if ((this.ArticleViewField.Equals(value) != true)) {
                    this.ArticleViewField = value;
                    this.RaisePropertyChanged("ArticleView");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleInfoProperties", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class ArticleInfoProperties : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Attachment[] ArticleAttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleFileExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArticleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ArticleLinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategorizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailSubscriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastReviewedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastViewDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleRelated[] RelatedArticleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Attachment[] ArticleAttachments {
            get {
                return this.ArticleAttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleAttachmentsField, value) != true)) {
                    this.ArticleAttachmentsField = value;
                    this.RaisePropertyChanged("ArticleAttachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleFileExtension {
            get {
                return this.ArticleFileExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleFileExtensionField, value) != true)) {
                    this.ArticleFileExtensionField = value;
                    this.RaisePropertyChanged("ArticleFileExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArticleID {
            get {
                return this.ArticleIDField;
            }
            set {
                if ((this.ArticleIDField.Equals(value) != true)) {
                    this.ArticleIDField = value;
                    this.RaisePropertyChanged("ArticleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ArticleLinks {
            get {
                return this.ArticleLinksField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleLinksField, value) != true)) {
                    this.ArticleLinksField = value;
                    this.RaisePropertyChanged("ArticleLinks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleName {
            get {
                return this.ArticleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleNameField, value) != true)) {
                    this.ArticleNameField = value;
                    this.RaisePropertyChanged("ArticleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Categorization {
            get {
                return this.CategorizationField;
            }
            set {
                if ((object.ReferenceEquals(this.CategorizationField, value) != true)) {
                    this.CategorizationField = value;
                    this.RaisePropertyChanged("Categorization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailSubscription {
            get {
                return this.EmailSubscriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailSubscriptionField, value) != true)) {
                    this.EmailSubscriptionField = value;
                    this.RaisePropertyChanged("EmailSubscription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalNote {
            get {
                return this.ExternalNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalNoteField, value) != true)) {
                    this.ExternalNoteField = value;
                    this.RaisePropertyChanged("ExternalNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastReviewedDate {
            get {
                return this.LastReviewedDateField;
            }
            set {
                if ((this.LastReviewedDateField.Equals(value) != true)) {
                    this.LastReviewedDateField = value;
                    this.RaisePropertyChanged("LastReviewedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastViewDate {
            get {
                return this.LastViewDateField;
            }
            set {
                if ((object.ReferenceEquals(this.LastViewDateField, value) != true)) {
                    this.LastViewDateField = value;
                    this.RaisePropertyChanged("LastViewDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberView {
            get {
                return this.NumberViewField;
            }
            set {
                if ((this.NumberViewField.Equals(value) != true)) {
                    this.NumberViewField = value;
                    this.RaisePropertyChanged("NumberView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleRelated[] RelatedArticle {
            get {
                return this.RelatedArticleField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedArticleField, value) != true)) {
                    this.RelatedArticleField = value;
                    this.RaisePropertyChanged("RelatedArticle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Attachment", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class Attachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.IO.MemoryStream ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResourceIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.IO.MemoryStream Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentType {
            get {
                return this.ContentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentTypeField, value) != true)) {
                    this.ContentTypeField = value;
                    this.RaisePropertyChanged("ContentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((this.ResourceIDField.Equals(value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleRelated", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class ArticleRelated : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArticleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArticleID {
            get {
                return this.ArticleIDField;
            }
            set {
                if ((this.ArticleIDField.Equals(value) != true)) {
                    this.ArticleIDField = value;
                    this.RaisePropertyChanged("ArticleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleName {
            get {
                return this.ArticleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleNameField, value) != true)) {
                    this.ArticleNameField = value;
                    this.RaisePropertyChanged("ArticleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleContentMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class ArticleContentMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Attachment[] ArticleAttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.IO.MemoryStream ArticleContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleContentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleExtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Attachment[] ArticleAttachments {
            get {
                return this.ArticleAttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleAttachmentsField, value) != true)) {
                    this.ArticleAttachmentsField = value;
                    this.RaisePropertyChanged("ArticleAttachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.IO.MemoryStream ArticleContent {
            get {
                return this.ArticleContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleContentField, value) != true)) {
                    this.ArticleContentField = value;
                    this.RaisePropertyChanged("ArticleContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleContentType {
            get {
                return this.ArticleContentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleContentTypeField, value) != true)) {
                    this.ArticleContentTypeField = value;
                    this.RaisePropertyChanged("ArticleContentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleExt {
            get {
                return this.ArticleExtField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleExtField, value) != true)) {
                    this.ArticleExtField = value;
                    this.RaisePropertyChanged("ArticleExt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleName {
            get {
                return this.ArticleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleNameField, value) != true)) {
                    this.ArticleNameField = value;
                    this.RaisePropertyChanged("ArticleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleResourceMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Portal")]
    [System.SerializableAttribute()]
    public partial class ArticleResourceMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArticleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceContentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceFileExtentionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UploadDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArticleID {
            get {
                return this.ArticleIDField;
            }
            set {
                if ((this.ArticleIDField.Equals(value) != true)) {
                    this.ArticleIDField = value;
                    this.RaisePropertyChanged("ArticleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceContentType {
            get {
                return this.ResourceContentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceContentTypeField, value) != true)) {
                    this.ResourceContentTypeField = value;
                    this.RaisePropertyChanged("ResourceContentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceFileExtention {
            get {
                return this.ResourceFileExtentionField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceFileExtentionField, value) != true)) {
                    this.ResourceFileExtentionField = value;
                    this.RaisePropertyChanged("ResourceFileExtention");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((this.ResourceIDField.Equals(value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceName {
            get {
                return this.ResourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceNameField, value) != true)) {
                    this.ResourceNameField = value;
                    this.RaisePropertyChanged("ResourceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UploadDate {
            get {
                return this.UploadDateField;
            }
            set {
                if ((this.UploadDateField.Equals(value) != true)) {
                    this.UploadDateField = value;
                    this.RaisePropertyChanged("UploadDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tag", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase")]
    [System.SerializableAttribute()]
    public partial class Tag : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedbyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedbyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModifiedbyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedbyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TagIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedbyID {
            get {
                return this.CreatedbyIDField;
            }
            set {
                if ((this.CreatedbyIDField.Equals(value) != true)) {
                    this.CreatedbyIDField = value;
                    this.RaisePropertyChanged("CreatedbyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedbyName {
            get {
                return this.CreatedbyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedbyNameField, value) != true)) {
                    this.CreatedbyNameField = value;
                    this.RaisePropertyChanged("CreatedbyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateModified {
            get {
                return this.DateModifiedField;
            }
            set {
                if ((this.DateModifiedField.Equals(value) != true)) {
                    this.DateModifiedField = value;
                    this.RaisePropertyChanged("DateModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModifiedbyID {
            get {
                return this.ModifiedbyIDField;
            }
            set {
                if ((this.ModifiedbyIDField.Equals(value) != true)) {
                    this.ModifiedbyIDField = value;
                    this.RaisePropertyChanged("ModifiedbyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedbyName {
            get {
                return this.ModifiedbyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedbyNameField, value) != true)) {
                    this.ModifiedbyNameField = value;
                    this.RaisePropertyChanged("ModifiedbyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagDesc {
            get {
                return this.TagDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TagDescField, value) != true)) {
                    this.TagDescField = value;
                    this.RaisePropertyChanged("TagDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagId {
            get {
                return this.TagIdField;
            }
            set {
                if ((this.TagIdField.Equals(value) != true)) {
                    this.TagIdField = value;
                    this.RaisePropertyChanged("TagId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="History", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase")]
    [System.SerializableAttribute()]
    public partial class History : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedbyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedbyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedbyID {
            get {
                return this.CreatedbyIDField;
            }
            set {
                if ((this.CreatedbyIDField.Equals(value) != true)) {
                    this.CreatedbyIDField = value;
                    this.RaisePropertyChanged("CreatedbyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedbyName {
            get {
                return this.CreatedbyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedbyNameField, value) != true)) {
                    this.CreatedbyNameField = value;
                    this.RaisePropertyChanged("CreatedbyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ForumDisplayMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase")]
    [System.SerializableAttribute()]
    public partial class ForumDisplayMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ForumIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfPostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositiveRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ThreadIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThreadNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ForumID {
            get {
                return this.ForumIDField;
            }
            set {
                if ((this.ForumIDField.Equals(value) != true)) {
                    this.ForumIDField = value;
                    this.RaisePropertyChanged("ForumID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForumName {
            get {
                return this.ForumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ForumNameField, value) != true)) {
                    this.ForumNameField = value;
                    this.RaisePropertyChanged("ForumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfPosts {
            get {
                return this.NumberOfPostsField;
            }
            set {
                if ((this.NumberOfPostsField.Equals(value) != true)) {
                    this.NumberOfPostsField = value;
                    this.RaisePropertyChanged("NumberOfPosts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PositiveRate {
            get {
                return this.PositiveRateField;
            }
            set {
                if ((this.PositiveRateField.Equals(value) != true)) {
                    this.PositiveRateField = value;
                    this.RaisePropertyChanged("PositiveRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ThreadID {
            get {
                return this.ThreadIDField;
            }
            set {
                if ((this.ThreadIDField.Equals(value) != true)) {
                    this.ThreadIDField = value;
                    this.RaisePropertyChanged("ThreadID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThreadName {
            get {
                return this.ThreadNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ThreadNameField, value) != true)) {
                    this.ThreadNameField = value;
                    this.RaisePropertyChanged("ThreadName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PortalKBMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Search.KBSearchConfiguratio" +
        "n")]
    [System.SerializableAttribute()]
    public partial class PortalKBMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KBIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KBId {
            get {
                return this.KBIdField;
            }
            set {
                if ((this.KBIdField.Equals(value) != true)) {
                    this.KBIdField = value;
                    this.RaisePropertyChanged("KBId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBName {
            get {
                return this.KBNameField;
            }
            set {
                if ((object.ReferenceEquals(this.KBNameField, value) != true)) {
                    this.KBNameField = value;
                    this.RaisePropertyChanged("KBName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchMethod", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Search")]
    public enum SearchMethod : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ALLWORD = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ANYWORD = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BOOLEAN = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXACTKEYWORD = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXACTPHRASE = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NLQ = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WITHINASEARCH = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AUTORECOMMEND = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RECALLPREVIOUS = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REFERENCEWORD = 11,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchParamsList", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Search")]
    [System.SerializableAttribute()]
    public partial class SearchParamsList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchParameter", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Search")]
    [System.SerializableAttribute()]
    public partial class SearchParameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchEnum NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchEnum Name {
            get {
                return this.NameField;
            }
            set {
                if ((this.NameField.Equals(value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchEnum", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Search")]
    public enum SearchEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORTALID = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CLIENTID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SESSIONID = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USERNAME = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TEXT = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEARCHARTICLEAREA = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEARCHSORTTYPE = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARTICLEKBID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARTICLECATEGORYID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARTICLEATTRIBUTEID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARTICLEGROUPID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARTICLETYPE = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARTICLESIZE = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RELEVANCE = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARTICLERATING = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARTICLEEXPDATE = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARTICLEMODDATE = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARTICLECREATEDDATE = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARTICLETEMPLATEID = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARTICLELOCALE = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FORUMID = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ASSOCIATIONTYPE = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REMOTESITEID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REMOTEDBID = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REMOTEFSID = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SHAREPOINTID = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAQID = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SFID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLOSSARYID = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LANGUAGE = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TAGID = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SOURCETYPE = 31,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PortalSettingField", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.User")]
    [System.SerializableAttribute()]
    public partial class PortalSettingField : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Required {
            get {
                return this.RequiredField;
            }
            set {
                if ((this.RequiredField.Equals(value) != true)) {
                    this.RequiredField = value;
                    this.RaisePropertyChanged("Required");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserType", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.User")]
    public enum UserType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalUser = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalUser = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleContentTemplateMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Admin")]
    [System.SerializableAttribute()]
    public partial class ArticleContentTemplateMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArticleidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateTabidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Articleid {
            get {
                return this.ArticleidField;
            }
            set {
                if ((this.ArticleidField.Equals(value) != true)) {
                    this.ArticleidField = value;
                    this.RaisePropertyChanged("Articleid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateTabid {
            get {
                return this.TemplateTabidField;
            }
            set {
                if ((this.TemplateTabidField.Equals(value) != true)) {
                    this.TemplateTabidField = value;
                    this.RaisePropertyChanged("TemplateTabid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Templateid {
            get {
                return this.TemplateidField;
            }
            set {
                if ((this.TemplateidField.Equals(value) != true)) {
                    this.TemplateidField = value;
                    this.RaisePropertyChanged("Templateid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleCommentMember", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Admin")]
    [System.SerializableAttribute()]
    public partial class ArticleCommentMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArticleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DatePostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArticleID {
            get {
                return this.ArticleIDField;
            }
            set {
                if ((this.ArticleIDField.Equals(value) != true)) {
                    this.ArticleIDField = value;
                    this.RaisePropertyChanged("ArticleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DatePosted {
            get {
                return this.DatePostedField;
            }
            set {
                if ((this.DatePostedField.Equals(value) != true)) {
                    this.DatePostedField = value;
                    this.RaisePropertyChanged("DatePosted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PortalID {
            get {
                return this.PortalIDField;
            }
            set {
                if ((this.PortalIDField.Equals(value) != true)) {
                    this.PortalIDField = value;
                    this.RaisePropertyChanged("PortalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KBWorkFlow", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Admin")]
    [System.SerializableAttribute()]
    public partial class KBWorkFlow : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KBWorkFlowStep", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Admin")]
    [System.SerializableAttribute()]
    public partial class KBWorkFlowStep : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WorkFlowType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WorkFlowType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkFlowType", Namespace="http://schemas.datacontract.org/2004/07/KnowledgeBase.Admin")]
    public enum WorkFlowType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Published = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="KnowledgeBaseServiceReference.IKBService")]
    public interface IKBService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByUser", ReplyAction="http://tempuri.org/IKBService/GetThreadByUserResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByUser(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByUser", ReplyAction="http://tempuri.org/IKBService/GetThreadByUserResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByUserAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByDate", ReplyAction="http://tempuri.org/IKBService/GetThreadByDateResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByDate(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime dateTime, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByDate", ReplyAction="http://tempuri.org/IKBService/GetThreadByDateResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByDateAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime dateTime, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByDateBetween", ReplyAction="http://tempuri.org/IKBService/GetThreadByDateBetweenResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByDateBetween(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime startDate, System.DateTime endDate, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByDateBetween", ReplyAction="http://tempuri.org/IKBService/GetThreadByDateBetweenResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByDateBetweenAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime startDate, System.DateTime endDate, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByDateByPage", ReplyAction="http://tempuri.org/IKBService/GetThreadByDateByPageResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByDateByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime startDate, System.DateTime endDate, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByDateByPage", ReplyAction="http://tempuri.org/IKBService/GetThreadByDateByPageResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByDateByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime startDate, System.DateTime endDate, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFirstThread", ReplyAction="http://tempuri.org/IKBService/GetFirstThreadResponse")]
        int GetFirstThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFirstThread", ReplyAction="http://tempuri.org/IKBService/GetFirstThreadResponse")]
        System.Threading.Tasks.Task<int> GetFirstThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThread", ReplyAction="http://tempuri.org/IKBService/GetThreadResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember GetThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThread", ReplyAction="http://tempuri.org/IKBService/GetThreadResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember> GetThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTotalThreadsByForum", ReplyAction="http://tempuri.org/IKBService/GetTotalThreadsByForumResponse")]
        int GetTotalThreadsByForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTotalThreadsByForum", ReplyAction="http://tempuri.org/IKBService/GetTotalThreadsByForumResponse")]
        System.Threading.Tasks.Task<int> GetTotalThreadsByForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopRatedThreadsByPortal", ReplyAction="http://tempuri.org/IKBService/GetTopRatedThreadsByPortalResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadDisplayMember[] GetTopRatedThreadsByPortal(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopRatedThreadsByPortal", ReplyAction="http://tempuri.org/IKBService/GetTopRatedThreadsByPortalResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadDisplayMember[]> GetTopRatedThreadsByPortalAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopRatedThreadsByForum", ReplyAction="http://tempuri.org/IKBService/GetTopRatedThreadsByForumResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadDisplayMember[] GetTopRatedThreadsByForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopRatedThreadsByForum", ReplyAction="http://tempuri.org/IKBService/GetTopRatedThreadsByForumResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadDisplayMember[]> GetTopRatedThreadsByForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByTagByPage", ReplyAction="http://tempuri.org/IKBService/GetThreadByTagByPageResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByTagByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int tagId, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByTagByPage", ReplyAction="http://tempuri.org/IKBService/GetThreadByTagByPageResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByTagByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int tagId, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByTag", ReplyAction="http://tempuri.org/IKBService/GetThreadByTagResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByTag(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByTag", ReplyAction="http://tempuri.org/IKBService/GetThreadByTagResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByTagAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByTagUserByPage", ReplyAction="http://tempuri.org/IKBService/GetThreadByTagUserByPageResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByTagUserByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByTagUserByPage", ReplyAction="http://tempuri.org/IKBService/GetThreadByTagUserByPageResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByTagUserByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByTagUser", ReplyAction="http://tempuri.org/IKBService/GetThreadByTagUserResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByTagUser(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByTagUser", ReplyAction="http://tempuri.org/IKBService/GetThreadByTagUserResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByTagUserAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByTaggedDate", ReplyAction="http://tempuri.org/IKBService/GetThreadByTaggedDateResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByTaggedDate(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime taggedDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByTaggedDate", ReplyAction="http://tempuri.org/IKBService/GetThreadByTaggedDateResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByTaggedDateAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime taggedDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByTaggedDateByTagId", ReplyAction="http://tempuri.org/IKBService/GetThreadByTaggedDateByTagIdResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByTaggedDateByTagId(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime taggedDate, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByTaggedDateByTagId", ReplyAction="http://tempuri.org/IKBService/GetThreadByTaggedDateByTagIdResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByTaggedDateByTagIdAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime taggedDate, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddTagToThread", ReplyAction="http://tempuri.org/IKBService/AddTagToThreadResponse")]
        void AddTagToThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddTagToThread", ReplyAction="http://tempuri.org/IKBService/AddTagToThreadResponse")]
        System.Threading.Tasks.Task AddTagToThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteTagsByThread", ReplyAction="http://tempuri.org/IKBService/DeleteTagsByThreadResponse")]
        void DeleteTagsByThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteTagsByThread", ReplyAction="http://tempuri.org/IKBService/DeleteTagsByThreadResponse")]
        System.Threading.Tasks.Task DeleteTagsByThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteTagByThread", ReplyAction="http://tempuri.org/IKBService/DeleteTagByThreadResponse")]
        void DeleteTagByThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteTagByThread", ReplyAction="http://tempuri.org/IKBService/DeleteTagByThreadResponse")]
        System.Threading.Tasks.Task DeleteTagByThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTagsByThread", ReplyAction="http://tempuri.org/IKBService/GetTagsByThreadResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CommunityTagMember[] GetTagsByThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTagsByThread", ReplyAction="http://tempuri.org/IKBService/GetTagsByThreadResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CommunityTagMember[]> GetTagsByThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddAttachmentToThread", ReplyAction="http://tempuri.org/IKBService/AddAttachmentToThreadResponse")]
        void AddAttachmentToThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string filepath, string fileName, string fileExtn, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddAttachmentToThread", ReplyAction="http://tempuri.org/IKBService/AddAttachmentToThreadResponse")]
        System.Threading.Tasks.Task AddAttachmentToThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string filepath, string fileName, string fileExtn, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetAttachmentsByThread", ReplyAction="http://tempuri.org/IKBService/GetAttachmentsByThreadResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMember[] GetAttachmentsByThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetAttachmentsByThread", ReplyAction="http://tempuri.org/IKBService/GetAttachmentsByThreadResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMember[]> GetAttachmentsByThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetAttachmentById", ReplyAction="http://tempuri.org/IKBService/GetAttachmentByIdResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMemberFile GetAttachmentById(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int attachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetAttachmentById", ReplyAction="http://tempuri.org/IKBService/GetAttachmentByIdResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMemberFile> GetAttachmentByIdAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int attachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteAttachment", ReplyAction="http://tempuri.org/IKBService/DeleteAttachmentResponse")]
        void DeleteAttachment(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadid, int attachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteAttachment", ReplyAction="http://tempuri.org/IKBService/DeleteAttachmentResponse")]
        System.Threading.Tasks.Task DeleteAttachmentAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadid, int attachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteAttachmentsByThread", ReplyAction="http://tempuri.org/IKBService/DeleteAttachmentsByThreadResponse")]
        void DeleteAttachmentsByThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteAttachmentsByThread", ReplyAction="http://tempuri.org/IKBService/DeleteAttachmentsByThreadResponse")]
        System.Threading.Tasks.Task DeleteAttachmentsByThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreatePost", ReplyAction="http://tempuri.org/IKBService/CreatePostResponse")]
        int CreatePost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string postContent, int postTypeId, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreatePost", ReplyAction="http://tempuri.org/IKBService/CreatePostResponse")]
        System.Threading.Tasks.Task<int> CreatePostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string postContent, int postTypeId, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreatePostByParnetID", ReplyAction="http://tempuri.org/IKBService/CreatePostByParnetIDResponse")]
        int CreatePostByParnetID(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string postContent, int postTypeId, int threadId, int parentPostId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreatePostByParnetID", ReplyAction="http://tempuri.org/IKBService/CreatePostByParnetIDResponse")]
        System.Threading.Tasks.Task<int> CreatePostByParnetIDAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string postContent, int postTypeId, int threadId, int parentPostId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeletePost", ReplyAction="http://tempuri.org/IKBService/DeletePostResponse")]
        int DeletePost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeletePost", ReplyAction="http://tempuri.org/IKBService/DeletePostResponse")]
        System.Threading.Tasks.Task<int> DeletePostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/UpdatePost", ReplyAction="http://tempuri.org/IKBService/UpdatePostResponse")]
        int UpdatePost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, string postContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/UpdatePost", ReplyAction="http://tempuri.org/IKBService/UpdatePostResponse")]
        System.Threading.Tasks.Task<int> UpdatePostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, string postContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddPostCustomMessage", ReplyAction="http://tempuri.org/IKBService/AddPostCustomMessageResponse")]
        void AddPostCustomMessage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string message, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddPostCustomMessage", ReplyAction="http://tempuri.org/IKBService/AddPostCustomMessageResponse")]
        System.Threading.Tasks.Task AddPostCustomMessageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string message, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetReplysByPost", ReplyAction="http://tempuri.org/IKBService/GetReplysByPostResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetReplysByPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetReplysByPost", ReplyAction="http://tempuri.org/IKBService/GetReplysByPostResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetReplysByPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetQuotesByPost", ReplyAction="http://tempuri.org/IKBService/GetQuotesByPostResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetQuotesByPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetQuotesByPost", ReplyAction="http://tempuri.org/IKBService/GetQuotesByPostResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetQuotesByPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFirstPost", ReplyAction="http://tempuri.org/IKBService/GetFirstPostResponse")]
        int GetFirstPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFirstPost", ReplyAction="http://tempuri.org/IKBService/GetFirstPostResponse")]
        System.Threading.Tasks.Task<int> GetFirstPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTotalPosts", ReplyAction="http://tempuri.org/IKBService/GetTotalPostsResponse")]
        int GetTotalPosts(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTotalPosts", ReplyAction="http://tempuri.org/IKBService/GetTotalPostsResponse")]
        System.Threading.Tasks.Task<int> GetTotalPostsAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTotalPostsByUser", ReplyAction="http://tempuri.org/IKBService/GetTotalPostsByUserResponse")]
        int GetTotalPostsByUser(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId, int threadId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTotalPostsByUser", ReplyAction="http://tempuri.org/IKBService/GetTotalPostsByUserResponse")]
        System.Threading.Tasks.Task<int> GetTotalPostsByUserAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId, int threadId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByForum", ReplyAction="http://tempuri.org/IKBService/GetPostByForumResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByForum", ReplyAction="http://tempuri.org/IKBService/GetPostByForumResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByForumByPage", ReplyAction="http://tempuri.org/IKBService/GetPostByForumByPageResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByForumByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByForumByPage", ReplyAction="http://tempuri.org/IKBService/GetPostByForumByPageResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByForumByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetLatestPost", ReplyAction="http://tempuri.org/IKBService/GetLatestPostResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember GetLatestPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetLatestPost", ReplyAction="http://tempuri.org/IKBService/GetLatestPostResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember> GetLatestPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPost", ReplyAction="http://tempuri.org/IKBService/GetPostResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember GetPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int searchid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPost", ReplyAction="http://tempuri.org/IKBService/GetPostResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember> GetPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int searchid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetInaccuratePost", ReplyAction="http://tempuri.org/IKBService/SetInaccuratePostResponse")]
        void SetInaccuratePost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetInaccuratePost", ReplyAction="http://tempuri.org/IKBService/SetInaccuratePostResponse")]
        System.Threading.Tasks.Task SetInaccuratePostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/RemoveProposedPost", ReplyAction="http://tempuri.org/IKBService/RemoveProposedPostResponse")]
        void RemoveProposedPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/RemoveProposedPost", ReplyAction="http://tempuri.org/IKBService/RemoveProposedPostResponse")]
        System.Threading.Tasks.Task RemoveProposedPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/RemovePostAsAnswer", ReplyAction="http://tempuri.org/IKBService/RemovePostAsAnswerResponse")]
        void RemovePostAsAnswer(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/RemovePostAsAnswer", ReplyAction="http://tempuri.org/IKBService/RemovePostAsAnswerResponse")]
        System.Threading.Tasks.Task RemovePostAsAnswerAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetProposedPost", ReplyAction="http://tempuri.org/IKBService/SetProposedPostResponse")]
        void SetProposedPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetProposedPost", ReplyAction="http://tempuri.org/IKBService/SetProposedPostResponse")]
        System.Threading.Tasks.Task SetProposedPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetPostAsAnswer", ReplyAction="http://tempuri.org/IKBService/SetPostAsAnswerResponse")]
        void SetPostAsAnswer(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetPostAsAnswer", ReplyAction="http://tempuri.org/IKBService/SetPostAsAnswerResponse")]
        System.Threading.Tasks.Task SetPostAsAnswerAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByThreadByPage", ReplyAction="http://tempuri.org/IKBService/GetPostByThreadByPageResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByThreadByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByThreadByPage", ReplyAction="http://tempuri.org/IKBService/GetPostByThreadByPageResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByThreadByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByThread", ReplyAction="http://tempuri.org/IKBService/GetPostByThreadResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByThread", ReplyAction="http://tempuri.org/IKBService/GetPostByThreadResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostAnswers", ReplyAction="http://tempuri.org/IKBService/GetPostAnswersResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostAnswers(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostAnswers", ReplyAction="http://tempuri.org/IKBService/GetPostAnswersResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostAnswersAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostAnswersPageWise", ReplyAction="http://tempuri.org/IKBService/GetPostAnswersPageWiseResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostAnswersPageWise(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostAnswersPageWise", ReplyAction="http://tempuri.org/IKBService/GetPostAnswersPageWiseResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostAnswersPageWiseAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostProposedSolutions", ReplyAction="http://tempuri.org/IKBService/GetPostProposedSolutionsResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostProposedSolutions(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostProposedSolutions", ReplyAction="http://tempuri.org/IKBService/GetPostProposedSolutionsResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostProposedSolutionsAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostProposedSolutionsPageWise", ReplyAction="http://tempuri.org/IKBService/GetPostProposedSolutionsPageWiseResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostProposedSolutionsPageWise(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostProposedSolutionsPageWise", ReplyAction="http://tempuri.org/IKBService/GetPostProposedSolutionsPageWiseResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostProposedSolutionsPageWiseAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetLatestPostByUser", ReplyAction="http://tempuri.org/IKBService/GetLatestPostByUserResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember GetLatestPostByUser(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetLatestPostByUser", ReplyAction="http://tempuri.org/IKBService/GetLatestPostByUserResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember> GetLatestPostByUserAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByUserByPage", ReplyAction="http://tempuri.org/IKBService/GetPostByUserByPageResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByUserByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByUserByPage", ReplyAction="http://tempuri.org/IKBService/GetPostByUserByPageResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByUserByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByUser", ReplyAction="http://tempuri.org/IKBService/GetPostByUserResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByUser(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByUser", ReplyAction="http://tempuri.org/IKBService/GetPostByUserResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByUserAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetUserCreditsByProposedSolutions", ReplyAction="http://tempuri.org/IKBService/GetUserCreditsByProposedSolutionsResponse")]
        int GetUserCreditsByProposedSolutions(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetUserCreditsByProposedSolutions", ReplyAction="http://tempuri.org/IKBService/GetUserCreditsByProposedSolutionsResponse")]
        System.Threading.Tasks.Task<int> GetUserCreditsByProposedSolutionsAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetUserCreditsByAcceptedSolutions", ReplyAction="http://tempuri.org/IKBService/GetUserCreditsByAcceptedSolutionsResponse")]
        int GetUserCreditsByAcceptedSolutions(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetUserCreditsByAcceptedSolutions", ReplyAction="http://tempuri.org/IKBService/GetUserCreditsByAcceptedSolutionsResponse")]
        System.Threading.Tasks.Task<int> GetUserCreditsByAcceptedSolutionsAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetMostPopulerUsersByPostAnswers", ReplyAction="http://tempuri.org/IKBService/GetMostPopulerUsersByPostAnswersResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostUser[] GetMostPopulerUsersByPostAnswers(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetMostPopulerUsersByPostAnswers", ReplyAction="http://tempuri.org/IKBService/GetMostPopulerUsersByPostAnswersResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostUser[]> GetMostPopulerUsersByPostAnswersAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetMostPopulerUsersByPostsProposed", ReplyAction="http://tempuri.org/IKBService/GetMostPopulerUsersByPostsProposedResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostUser[] GetMostPopulerUsersByPostsProposed(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetMostPopulerUsersByPostsProposed", ReplyAction="http://tempuri.org/IKBService/GetMostPopulerUsersByPostsProposedResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostUser[]> GetMostPopulerUsersByPostsProposedAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByDateBetween", ReplyAction="http://tempuri.org/IKBService/GetPostByDateBetweenResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByDateBetween(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime stratDate, System.DateTime endDate, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByDateBetween", ReplyAction="http://tempuri.org/IKBService/GetPostByDateBetweenResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByDateBetweenAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime stratDate, System.DateTime endDate, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByDateByPage", ReplyAction="http://tempuri.org/IKBService/GetPostByDateByPageResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByDateByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime startDate, System.DateTime endDate, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByDateByPage", ReplyAction="http://tempuri.org/IKBService/GetPostByDateByPageResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByDateByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime startDate, System.DateTime endDate, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByDate", ReplyAction="http://tempuri.org/IKBService/GetPostByDateResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByDate(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime date, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByDate", ReplyAction="http://tempuri.org/IKBService/GetPostByDateResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByDateAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime date, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByTag", ReplyAction="http://tempuri.org/IKBService/GetPostByTagResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByTag(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByTag", ReplyAction="http://tempuri.org/IKBService/GetPostByTagResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByTagAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByTagByPage", ReplyAction="http://tempuri.org/IKBService/GetPostByTagByPageResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByTagByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int tagId, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByTagByPage", ReplyAction="http://tempuri.org/IKBService/GetPostByTagByPageResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByTagByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int tagId, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByTagger", ReplyAction="http://tempuri.org/IKBService/GetPostByTaggerResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByTagger(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByTagger", ReplyAction="http://tempuri.org/IKBService/GetPostByTaggerResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByTaggerAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByTaggerByPage", ReplyAction="http://tempuri.org/IKBService/GetPostByTaggerByPageResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByTaggerByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByTaggerByPage", ReplyAction="http://tempuri.org/IKBService/GetPostByTaggerByPageResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByTaggerByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByTaggedDateByTagid", ReplyAction="http://tempuri.org/IKBService/GetPostByTaggedDateByTagidResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByTaggedDateByTagid(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime taggedDate, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByTaggedDateByTagid", ReplyAction="http://tempuri.org/IKBService/GetPostByTaggedDateByTagidResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByTaggedDateByTagidAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime taggedDate, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByTaggedDate", ReplyAction="http://tempuri.org/IKBService/GetPostByTaggedDateResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByTaggedDate(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime taggedDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPostByTaggedDate", ReplyAction="http://tempuri.org/IKBService/GetPostByTaggedDateResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByTaggedDateAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime taggedDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddTagToPost", ReplyAction="http://tempuri.org/IKBService/AddTagToPostResponse")]
        void AddTagToPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddTagToPost", ReplyAction="http://tempuri.org/IKBService/AddTagToPostResponse")]
        System.Threading.Tasks.Task AddTagToPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteTagByPost", ReplyAction="http://tempuri.org/IKBService/DeleteTagByPostResponse")]
        void DeleteTagByPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteTagByPost", ReplyAction="http://tempuri.org/IKBService/DeleteTagByPostResponse")]
        System.Threading.Tasks.Task DeleteTagByPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteAllTags", ReplyAction="http://tempuri.org/IKBService/DeleteAllTagsResponse")]
        void DeleteAllTags(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteAllTags", ReplyAction="http://tempuri.org/IKBService/DeleteAllTagsResponse")]
        System.Threading.Tasks.Task DeleteAllTagsAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTagsByPost", ReplyAction="http://tempuri.org/IKBService/GetTagsByPostResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CommunityTagMember[] GetTagsByPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTagsByPost", ReplyAction="http://tempuri.org/IKBService/GetTagsByPostResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CommunityTagMember[]> GetTagsByPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddAttachmentToPost", ReplyAction="http://tempuri.org/IKBService/AddAttachmentToPostResponse")]
        void AddAttachmentToPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string filepath, string fileName, string fileExtn, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddAttachmentToPost", ReplyAction="http://tempuri.org/IKBService/AddAttachmentToPostResponse")]
        System.Threading.Tasks.Task AddAttachmentToPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string filepath, string fileName, string fileExtn, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteAttachmentsByPost", ReplyAction="http://tempuri.org/IKBService/DeleteAttachmentsByPostResponse")]
        void DeleteAttachmentsByPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteAttachmentsByPost", ReplyAction="http://tempuri.org/IKBService/DeleteAttachmentsByPostResponse")]
        System.Threading.Tasks.Task DeleteAttachmentsByPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetAttachmentsByPost", ReplyAction="http://tempuri.org/IKBService/GetAttachmentsByPostResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMember[] GetAttachmentsByPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetAttachmentsByPost", ReplyAction="http://tempuri.org/IKBService/GetAttachmentsByPostResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMember[]> GetAttachmentsByPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetRating", ReplyAction="http://tempuri.org/IKBService/SetRatingResponse")]
        bool SetRating(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SetRatingMember mem, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int portalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetRating", ReplyAction="http://tempuri.org/IKBService/SetRatingResponse")]
        System.Threading.Tasks.Task<bool> SetRatingAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SetRatingMember mem, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int portalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/getRating", ReplyAction="http://tempuri.org/IKBService/getRatingResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.RatingValueMember getRating(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SetRatingMember sourceid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int portalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/getRating", ReplyAction="http://tempuri.org/IKBService/getRatingResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.RatingValueMember> getRatingAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SetRatingMember sourceid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int portalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetHotTopics", ReplyAction="http://tempuri.org/IKBService/GetHotTopicsResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetHotTopics(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetHotTopics", ReplyAction="http://tempuri.org/IKBService/GetHotTopicsResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetHotTopicsAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetLatestArticles", ReplyAction="http://tempuri.org/IKBService/GetLatestArticlesResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetLatestArticles(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetLatestArticles", ReplyAction="http://tempuri.org/IKBService/GetLatestArticlesResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetLatestArticlesAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopDailySearch", ReplyAction="http://tempuri.org/IKBService/GetTopDailySearchResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchCloudResultMember[] GetTopDailySearch(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopDailySearch", ReplyAction="http://tempuri.org/IKBService/GetTopDailySearchResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchCloudResultMember[]> GetTopDailySearchAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopWeeklySearch", ReplyAction="http://tempuri.org/IKBService/GetTopWeeklySearchResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchCloudResultMember[] GetTopWeeklySearch(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopWeeklySearch", ReplyAction="http://tempuri.org/IKBService/GetTopWeeklySearchResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchCloudResultMember[]> GetTopWeeklySearchAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSearchOptionList", ReplyAction="http://tempuri.org/IKBService/GetSearchOptionListResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchTypeMember[] GetSearchOptionList(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSearchOptionList", ReplyAction="http://tempuri.org/IKBService/GetSearchOptionListResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchTypeMember[]> GetSearchOptionListAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSearchTypeList", ReplyAction="http://tempuri.org/IKBService/GetSearchTypeListResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchTypeMember[] GetSearchTypeList(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSearchTypeList", ReplyAction="http://tempuri.org/IKBService/GetSearchTypeListResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchTypeMember[]> GetSearchTypeListAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPortalKB", ReplyAction="http://tempuri.org/IKBService/GetPortalKBResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalKBMember[] GetPortalKB(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPortalKB", ReplyAction="http://tempuri.org/IKBService/GetPortalKBResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalKBMember[]> GetPortalKBAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetKnowledgebasePortalByPortalId", ReplyAction="http://tempuri.org/IKBService/GetKnowledgebasePortalByPortalIdResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalKBMember[] GetKnowledgebasePortalByPortalId(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetKnowledgebasePortalByPortalId", ReplyAction="http://tempuri.org/IKBService/GetKnowledgebasePortalByPortalIdResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalKBMember[]> GetKnowledgebasePortalByPortalIdAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTagCloudByClientId", ReplyAction="http://tempuri.org/IKBService/GetTagCloudByClientIdResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TagMember[] GetTagCloudByClientId(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTagCloudByClientId", ReplyAction="http://tempuri.org/IKBService/GetTagCloudByClientIdResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TagMember[]> GetTagCloudByClientIdAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTagCloudByTagId", ReplyAction="http://tempuri.org/IKBService/GetTagCloudByTagIdResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TagMember[] GetTagCloudByTagId(int tagid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTagCloudByTagId", ReplyAction="http://tempuri.org/IKBService/GetTagCloudByTagIdResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TagMember[]> GetTagCloudByTagIdAsync(int tagid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiList", ReplyAction="http://tempuri.org/IKBService/GetWikiListResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[] GetWikiList(string sessionID, int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiList", ReplyAction="http://tempuri.org/IKBService/GetWikiListResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[]> GetWikiListAsync(string sessionID, int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiContainerID", ReplyAction="http://tempuri.org/IKBService/GetWikiContainerIDResponse")]
        int GetWikiContainerID(string sessionID, int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiContainerID", ReplyAction="http://tempuri.org/IKBService/GetWikiContainerIDResponse")]
        System.Threading.Tasks.Task<int> GetWikiContainerIDAsync(string sessionID, int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiListByPortal", ReplyAction="http://tempuri.org/IKBService/GetWikiListByPortalResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[] GetWikiListByPortal(string sessionID, int clientID, int portalID, string filter, string orderby, bool isDescending, int rowPerPage, int currentPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiListByPortal", ReplyAction="http://tempuri.org/IKBService/GetWikiListByPortalResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[]> GetWikiListByPortalAsync(string sessionID, int clientID, int portalID, string filter, string orderby, bool isDescending, int rowPerPage, int currentPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CheckInWikis", ReplyAction="http://tempuri.org/IKBService/CheckInWikisResponse")]
        bool CheckInWikis(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int[] wikiIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CheckInWikis", ReplyAction="http://tempuri.org/IKBService/CheckInWikisResponse")]
        System.Threading.Tasks.Task<bool> CheckInWikisAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int[] wikiIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CheckOutWikis", ReplyAction="http://tempuri.org/IKBService/CheckOutWikisResponse")]
        bool CheckOutWikis(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int[] wikiIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CheckOutWikis", ReplyAction="http://tempuri.org/IKBService/CheckOutWikisResponse")]
        System.Threading.Tasks.Task<bool> CheckOutWikisAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int[] wikiIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CheckInWiki", ReplyAction="http://tempuri.org/IKBService/CheckInWikiResponse")]
        bool CheckInWiki(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int wikiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CheckInWiki", ReplyAction="http://tempuri.org/IKBService/CheckInWikiResponse")]
        System.Threading.Tasks.Task<bool> CheckInWikiAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int wikiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CheckOutWiki", ReplyAction="http://tempuri.org/IKBService/CheckOutWikiResponse")]
        bool CheckOutWiki(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int wikiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CheckOutWiki", ReplyAction="http://tempuri.org/IKBService/CheckOutWikiResponse")]
        System.Threading.Tasks.Task<bool> CheckOutWikiAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int wikiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/IsWikiEditableByUserID", ReplyAction="http://tempuri.org/IKBService/IsWikiEditableByUserIDResponse")]
        bool IsWikiEditableByUserID(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki editWiki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/IsWikiEditableByUserID", ReplyAction="http://tempuri.org/IKBService/IsWikiEditableByUserIDResponse")]
        System.Threading.Tasks.Task<bool> IsWikiEditableByUserIDAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki editWiki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreateNewWiki", ReplyAction="http://tempuri.org/IKBService/CreateNewWikiResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki CreateNewWiki(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki newWiki, int langID, bool isAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreateNewWiki", ReplyAction="http://tempuri.org/IKBService/CreateNewWikiResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki> CreateNewWikiAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki newWiki, int langID, bool isAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteWiki", ReplyAction="http://tempuri.org/IKBService/DeleteWikiResponse")]
        void DeleteWiki(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int wikiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteWiki", ReplyAction="http://tempuri.org/IKBService/DeleteWikiResponse")]
        System.Threading.Tasks.Task DeleteWikiAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int wikiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteWikis", ReplyAction="http://tempuri.org/IKBService/DeleteWikisResponse")]
        void DeleteWikis(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int[] wikiIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteWikis", ReplyAction="http://tempuri.org/IKBService/DeleteWikisResponse")]
        System.Threading.Tasks.Task DeleteWikisAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int[] wikiIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiMetaData", ReplyAction="http://tempuri.org/IKBService/GetWikiMetaDataResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki GetWikiMetaData(string sessionID, int clientID, int wikiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiMetaData", ReplyAction="http://tempuri.org/IKBService/GetWikiMetaDataResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki> GetWikiMetaDataAsync(string sessionID, int clientID, int wikiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/UpdateWikiMetaData", ReplyAction="http://tempuri.org/IKBService/UpdateWikiMetaDataResponse")]
        void UpdateWikiMetaData(int clientID, string sessionID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki myWiki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/UpdateWikiMetaData", ReplyAction="http://tempuri.org/IKBService/UpdateWikiMetaDataResponse")]
        System.Threading.Tasks.Task UpdateWikiMetaDataAsync(int clientID, string sessionID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki myWiki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiContent", ReplyAction="http://tempuri.org/IKBService/GetWikiContentResponse")]
        string GetWikiContent(string sessionID, int clientID, int wikiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiContent", ReplyAction="http://tempuri.org/IKBService/GetWikiContentResponse")]
        System.Threading.Tasks.Task<string> GetWikiContentAsync(string sessionID, int clientID, int wikiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetWikiContent", ReplyAction="http://tempuri.org/IKBService/SetWikiContentResponse")]
        void SetWikiContent(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int wikiID, int fileID, int templateID, string content, bool isAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetWikiContent", ReplyAction="http://tempuri.org/IKBService/SetWikiContentResponse")]
        System.Threading.Tasks.Task SetWikiContentAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int wikiID, int fileID, int templateID, string content, bool isAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiVersionInfo", ReplyAction="http://tempuri.org/IKBService/GetWikiVersionInfoResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki GetWikiVersionInfo(string sessionID, int clientID, int wikiID, int versionID, int wveID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiVersionInfo", ReplyAction="http://tempuri.org/IKBService/GetWikiVersionInfoResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki> GetWikiVersionInfoAsync(string sessionID, int clientID, int wikiID, int versionID, int wveID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/IsWikiViewPermittedinPortal", ReplyAction="http://tempuri.org/IKBService/IsWikiViewPermittedinPortalResponse")]
        bool IsWikiViewPermittedinPortal(string sessionID, int clientID, int portalID, int wikiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/IsWikiViewPermittedinPortal", ReplyAction="http://tempuri.org/IKBService/IsWikiViewPermittedinPortalResponse")]
        System.Threading.Tasks.Task<bool> IsWikiViewPermittedinPortalAsync(string sessionID, int clientID, int portalID, int wikiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiTagsByWikiID", ReplyAction="http://tempuri.org/IKBService/GetWikiTagsByWikiIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[] GetWikiTagsByWikiID(string sessionID, int clientID, int wikiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiTagsByWikiID", ReplyAction="http://tempuri.org/IKBService/GetWikiTagsByWikiIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[]> GetWikiTagsByWikiIDAsync(string sessionID, int clientID, int wikiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikisByTagID", ReplyAction="http://tempuri.org/IKBService/GetWikisByTagIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[] GetWikisByTagID(string sessionID, int clientID, string tagIDs, int portalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikisByTagID", ReplyAction="http://tempuri.org/IKBService/GetWikisByTagIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[]> GetWikisByTagIDAsync(string sessionID, int clientID, string tagIDs, int portalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddWikiTags", ReplyAction="http://tempuri.org/IKBService/AddWikiTagsResponse")]
        void AddWikiTags(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki myWiki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddWikiTags", ReplyAction="http://tempuri.org/IKBService/AddWikiTagsResponse")]
        System.Threading.Tasks.Task AddWikiTagsAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki myWiki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/UpdateWikiTags", ReplyAction="http://tempuri.org/IKBService/UpdateWikiTagsResponse")]
        void UpdateWikiTags(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki myWiki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/UpdateWikiTags", ReplyAction="http://tempuri.org/IKBService/UpdateWikiTagsResponse")]
        System.Threading.Tasks.Task UpdateWikiTagsAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki myWiki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteWikiTags", ReplyAction="http://tempuri.org/IKBService/DeleteWikiTagsResponse")]
        void DeleteWikiTags(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki myWiki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteWikiTags", ReplyAction="http://tempuri.org/IKBService/DeleteWikiTagsResponse")]
        System.Threading.Tasks.Task DeleteWikiTagsAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki myWiki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteTags", ReplyAction="http://tempuri.org/IKBService/DeleteTagsResponse")]
        void DeleteTags(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[] tags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteTags", ReplyAction="http://tempuri.org/IKBService/DeleteTagsResponse")]
        System.Threading.Tasks.Task DeleteTagsAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[] tags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTagClouds", ReplyAction="http://tempuri.org/IKBService/GetTagCloudsResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[] GetTagClouds(string sessionID, int clientID, int portalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTagClouds", ReplyAction="http://tempuri.org/IKBService/GetTagCloudsResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[]> GetTagCloudsAsync(string sessionID, int clientID, int portalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiTemplates", ReplyAction="http://tempuri.org/IKBService/GetWikiTemplatesResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template[] GetWikiTemplates(string sessionID, int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiTemplates", ReplyAction="http://tempuri.org/IKBService/GetWikiTemplatesResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template[]> GetWikiTemplatesAsync(string sessionID, int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiTemplate", ReplyAction="http://tempuri.org/IKBService/GetWikiTemplateResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template GetWikiTemplate(string sessionID, int clientID, int wikiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiTemplate", ReplyAction="http://tempuri.org/IKBService/GetWikiTemplateResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template> GetWikiTemplateAsync(string sessionID, int clientID, int wikiID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiTemplatesByPortals", ReplyAction="http://tempuri.org/IKBService/GetWikiTemplatesByPortalsResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template[] GetWikiTemplatesByPortals(string sessionID, int clientID, int[] portalIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiTemplatesByPortals", ReplyAction="http://tempuri.org/IKBService/GetWikiTemplatesByPortalsResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template[]> GetWikiTemplatesByPortalsAsync(string sessionID, int clientID, int[] portalIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetHistoryByWikiID", ReplyAction="http://tempuri.org/IKBService/GetHistoryByWikiIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.History[] GetHistoryByWikiID(string sessionID, int clientID, int wikiID, int pageNum, int displayNum, int langID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetHistoryByWikiID", ReplyAction="http://tempuri.org/IKBService/GetHistoryByWikiIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.History[]> GetHistoryByWikiIDAsync(string sessionID, int clientID, int wikiID, int pageNum, int displayNum, int langID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTotalNumberOfHistory", ReplyAction="http://tempuri.org/IKBService/GetTotalNumberOfHistoryResponse")]
        int GetTotalNumberOfHistory(string sessionID, int clientID, int wikiID, int langID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTotalNumberOfHistory", ReplyAction="http://tempuri.org/IKBService/GetTotalNumberOfHistoryResponse")]
        System.Threading.Tasks.Task<int> GetTotalNumberOfHistoryAsync(string sessionID, int clientID, int wikiID, int langID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiPortalConfig", ReplyAction="http://tempuri.org/IKBService/GetWikiPortalConfigResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiPortalConfig GetWikiPortalConfig(string sessionID, int clientID, int portalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiPortalConfig", ReplyAction="http://tempuri.org/IKBService/GetWikiPortalConfigResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiPortalConfig> GetWikiPortalConfigAsync(string sessionID, int clientID, int portalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreateWikiPortalConfig", ReplyAction="http://tempuri.org/IKBService/CreateWikiPortalConfigResponse")]
        void CreateWikiPortalConfig(string sessionID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiPortalConfig portalConfig);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreateWikiPortalConfig", ReplyAction="http://tempuri.org/IKBService/CreateWikiPortalConfigResponse")]
        System.Threading.Tasks.Task CreateWikiPortalConfigAsync(string sessionID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiPortalConfig portalConfig);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopRatedWikis", ReplyAction="http://tempuri.org/IKBService/GetTopRatedWikisResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[] GetTopRatedWikis(string sessionID, int clientID, int portalID, int numofWiki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopRatedWikis", ReplyAction="http://tempuri.org/IKBService/GetTopRatedWikisResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[]> GetTopRatedWikisAsync(string sessionID, int clientID, int portalID, int numofWiki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopViewedWikis", ReplyAction="http://tempuri.org/IKBService/GetTopViewedWikisResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[] GetTopViewedWikis(string sessionID, int clientID, int portalID, int numofWiki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopViewedWikis", ReplyAction="http://tempuri.org/IKBService/GetTopViewedWikisResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[]> GetTopViewedWikisAsync(string sessionID, int clientID, int portalID, int numofWiki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetMostRecentWikis", ReplyAction="http://tempuri.org/IKBService/GetMostRecentWikisResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[] GetMostRecentWikis(string sessionID, int clientID, int portalID, int numofWiki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetMostRecentWikis", ReplyAction="http://tempuri.org/IKBService/GetMostRecentWikisResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[]> GetMostRecentWikisAsync(string sessionID, int clientID, int portalID, int numofWiki);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetCreatedWikiCountByUser", ReplyAction="http://tempuri.org/IKBService/GetCreatedWikiCountByUserResponse")]
        int GetCreatedWikiCountByUser(string sessionID, int clientID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetCreatedWikiCountByUser", ReplyAction="http://tempuri.org/IKBService/GetCreatedWikiCountByUserResponse")]
        System.Threading.Tasks.Task<int> GetCreatedWikiCountByUserAsync(string sessionID, int clientID, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetArticleContent", ReplyAction="http://tempuri.org/IKBService/SetArticleContentResponse")]
        void SetArticleContent(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int articleID, int fileID, int templateID, string content, bool isAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetArticleContent", ReplyAction="http://tempuri.org/IKBService/SetArticleContentResponse")]
        System.Threading.Tasks.Task SetArticleContentAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int articleID, int fileID, int templateID, string content, bool isAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTemplateContent", ReplyAction="http://tempuri.org/IKBService/GetTemplateContentResponse")]
        string GetTemplateContent(string sessionID, int clientID, int templateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTemplateContent", ReplyAction="http://tempuri.org/IKBService/GetTemplateContentResponse")]
        System.Threading.Tasks.Task<string> GetTemplateContentAsync(string sessionID, int clientID, int templateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiRssFeed", ReplyAction="http://tempuri.org/IKBService/GetWikiRssFeedResponse")]
        string GetWikiRssFeed(string sessionID, string clientID, string portalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWikiRssFeed", ReplyAction="http://tempuri.org/IKBService/GetWikiRssFeedResponse")]
        System.Threading.Tasks.Task<string> GetWikiRssFeedAsync(string sessionID, string clientID, string portalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddWikiUserActivityReport", ReplyAction="http://tempuri.org/IKBService/AddWikiUserActivityReportResponse")]
        void AddWikiUserActivityReport(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiUserActivityReport report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddWikiUserActivityReport", ReplyAction="http://tempuri.org/IKBService/AddWikiUserActivityReportResponse")]
        System.Threading.Tasks.Task AddWikiUserActivityReportAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiUserActivityReport report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreateCategory", ReplyAction="http://tempuri.org/IKBService/CreateCategoryResponse")]
        int CreateCategory(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string catName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreateCategory", ReplyAction="http://tempuri.org/IKBService/CreateCategoryResponse")]
        System.Threading.Tasks.Task<int> CreateCategoryAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string catName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteCategory", ReplyAction="http://tempuri.org/IKBService/DeleteCategoryResponse")]
        int DeleteCategory(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int catID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteCategory", ReplyAction="http://tempuri.org/IKBService/DeleteCategoryResponse")]
        System.Threading.Tasks.Task<int> DeleteCategoryAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int catID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/UpdateCategory", ReplyAction="http://tempuri.org/IKBService/UpdateCategoryResponse")]
        int UpdateCategory(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int catID, string catName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/UpdateCategory", ReplyAction="http://tempuri.org/IKBService/UpdateCategoryResponse")]
        System.Threading.Tasks.Task<int> UpdateCategoryAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int catID, string catName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumCategories", ReplyAction="http://tempuri.org/IKBService/GetForumCategoriesResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[] GetForumCategories(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumCategories", ReplyAction="http://tempuri.org/IKBService/GetForumCategoriesResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[]> GetForumCategoriesAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumCategoriesByPage", ReplyAction="http://tempuri.org/IKBService/GetForumCategoriesByPageResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[] GetForumCategoriesByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumCategoriesByPage", ReplyAction="http://tempuri.org/IKBService/GetForumCategoriesByPageResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[]> GetForumCategoriesByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumCategoriesByUser", ReplyAction="http://tempuri.org/IKBService/GetForumCategoriesByUserResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[] GetForumCategoriesByUser(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumCategoriesByUser", ReplyAction="http://tempuri.org/IKBService/GetForumCategoriesByUserResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[]> GetForumCategoriesByUserAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumCategoriesByUserByPage", ReplyAction="http://tempuri.org/IKBService/GetForumCategoriesByUserByPageResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[] GetForumCategoriesByUserByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumCategoriesByUserByPage", ReplyAction="http://tempuri.org/IKBService/GetForumCategoriesByUserByPageResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[]> GetForumCategoriesByUserByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreateForum", ReplyAction="http://tempuri.org/IKBService/CreateForumResponse")]
        int CreateForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string forumName, int catId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreateForum", ReplyAction="http://tempuri.org/IKBService/CreateForumResponse")]
        System.Threading.Tasks.Task<int> CreateForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string forumName, int catId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreateForumWithDesc", ReplyAction="http://tempuri.org/IKBService/CreateForumWithDescResponse")]
        int CreateForumWithDesc(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string forumName, string forumDesc, int catId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreateForumWithDesc", ReplyAction="http://tempuri.org/IKBService/CreateForumWithDescResponse")]
        System.Threading.Tasks.Task<int> CreateForumWithDescAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string forumName, string forumDesc, int catId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreateForumWithStatus", ReplyAction="http://tempuri.org/IKBService/CreateForumWithStatusResponse")]
        int CreateForumWithStatus(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string forumName, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumStatus status, string forumDesc, int catId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreateForumWithStatus", ReplyAction="http://tempuri.org/IKBService/CreateForumWithStatusResponse")]
        System.Threading.Tasks.Task<int> CreateForumWithStatusAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string forumName, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumStatus status, string forumDesc, int catId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteForum", ReplyAction="http://tempuri.org/IKBService/DeleteForumResponse")]
        int DeleteForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteForum", ReplyAction="http://tempuri.org/IKBService/DeleteForumResponse")]
        System.Threading.Tasks.Task<int> DeleteForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/UpdateForum", ReplyAction="http://tempuri.org/IKBService/UpdateForumResponse")]
        int UpdateForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID, string forumName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/UpdateForum", ReplyAction="http://tempuri.org/IKBService/UpdateForumResponse")]
        System.Threading.Tasks.Task<int> UpdateForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID, string forumName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/UpdateForumDesc", ReplyAction="http://tempuri.org/IKBService/UpdateForumDescResponse")]
        int UpdateForumDesc(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID, string forumName, string forumDesc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/UpdateForumDesc", ReplyAction="http://tempuri.org/IKBService/UpdateForumDescResponse")]
        System.Threading.Tasks.Task<int> UpdateForumDescAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID, string forumName, string forumDesc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CloseForum", ReplyAction="http://tempuri.org/IKBService/CloseForumResponse")]
        int CloseForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID, System.DateTime closedDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CloseForum", ReplyAction="http://tempuri.org/IKBService/CloseForumResponse")]
        System.Threading.Tasks.Task<int> CloseForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID, System.DateTime closedDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/ReOpenForum", ReplyAction="http://tempuri.org/IKBService/ReOpenForumResponse")]
        int ReOpenForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/ReOpenForum", ReplyAction="http://tempuri.org/IKBService/ReOpenForumResponse")]
        System.Threading.Tasks.Task<int> ReOpenForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddForumToPortal", ReplyAction="http://tempuri.org/IKBService/AddForumToPortalResponse")]
        void AddForumToPortal(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddForumToPortal", ReplyAction="http://tempuri.org/IKBService/AddForumToPortalResponse")]
        System.Threading.Tasks.Task AddForumToPortalAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/RemoveForumFromPortal", ReplyAction="http://tempuri.org/IKBService/RemoveForumFromPortalResponse")]
        void RemoveForumFromPortal(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/RemoveForumFromPortal", ReplyAction="http://tempuri.org/IKBService/RemoveForumFromPortalResponse")]
        System.Threading.Tasks.Task RemoveForumFromPortalAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForum", ReplyAction="http://tempuri.org/IKBService/GetForumResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember GetForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForum", ReplyAction="http://tempuri.org/IKBService/GetForumResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember> GetForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumsByCategoryByPage", ReplyAction="http://tempuri.org/IKBService/GetForumsByCategoryByPageResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[] GetForumsByCategoryByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int catId, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumsByCategoryByPage", ReplyAction="http://tempuri.org/IKBService/GetForumsByCategoryByPageResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[]> GetForumsByCategoryByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int catId, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumsByCategory", ReplyAction="http://tempuri.org/IKBService/GetForumsByCategoryResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[] GetForumsByCategory(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int catId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumsByCategory", ReplyAction="http://tempuri.org/IKBService/GetForumsByCategoryResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[]> GetForumsByCategoryAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int catId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumsByPortal", ReplyAction="http://tempuri.org/IKBService/GetForumsByPortalResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[] GetForumsByPortal(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumsByPortal", ReplyAction="http://tempuri.org/IKBService/GetForumsByPortalResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[]> GetForumsByPortalAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumsByPortalByPage", ReplyAction="http://tempuri.org/IKBService/GetForumsByPortalByPageResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[] GetForumsByPortalByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumsByPortalByPage", ReplyAction="http://tempuri.org/IKBService/GetForumsByPortalByPageResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[]> GetForumsByPortalByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetAllForums", ReplyAction="http://tempuri.org/IKBService/GetAllForumsResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[] GetAllForums(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetAllForums", ReplyAction="http://tempuri.org/IKBService/GetAllForumsResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[]> GetAllForumsAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumsByUserByPage", ReplyAction="http://tempuri.org/IKBService/GetForumsByUserByPageResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[] GetForumsByUserByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumsByUserByPage", ReplyAction="http://tempuri.org/IKBService/GetForumsByUserByPageResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[]> GetForumsByUserByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumsByUser", ReplyAction="http://tempuri.org/IKBService/GetForumsByUserResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[] GetForumsByUser(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetForumsByUser", ReplyAction="http://tempuri.org/IKBService/GetForumsByUserResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[]> GetForumsByUserAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopForumsByPortal", ReplyAction="http://tempuri.org/IKBService/GetTopForumsByPortalResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumDisplayMember[] GetTopForumsByPortal(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopForumsByPortal", ReplyAction="http://tempuri.org/IKBService/GetTopForumsByPortalResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumDisplayMember[]> GetTopForumsByPortalAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopRatedForumsByPortal", ReplyAction="http://tempuri.org/IKBService/GetTopRatedForumsByPortalResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumDisplayMember[] GetTopRatedForumsByPortal(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopRatedForumsByPortal", ReplyAction="http://tempuri.org/IKBService/GetTopRatedForumsByPortalResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumDisplayMember[]> GetTopRatedForumsByPortalAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/UpdateCustomMessage", ReplyAction="http://tempuri.org/IKBService/UpdateCustomMessageResponse")]
        void UpdateCustomMessage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string message, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/UpdateCustomMessage", ReplyAction="http://tempuri.org/IKBService/UpdateCustomMessageResponse")]
        System.Threading.Tasks.Task UpdateCustomMessageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string message, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTotalForumsByPortal", ReplyAction="http://tempuri.org/IKBService/GetTotalForumsByPortalResponse")]
        int GetTotalForumsByPortal(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTotalForumsByPortal", ReplyAction="http://tempuri.org/IKBService/GetTotalForumsByPortalResponse")]
        System.Threading.Tasks.Task<int> GetTotalForumsByPortalAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreateThread", ReplyAction="http://tempuri.org/IKBService/CreateThreadResponse")]
        int CreateThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string threadName, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CreateThread", ReplyAction="http://tempuri.org/IKBService/CreateThreadResponse")]
        System.Threading.Tasks.Task<int> CreateThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string threadName, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteThread", ReplyAction="http://tempuri.org/IKBService/DeleteThreadResponse")]
        int DeleteThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/DeleteThread", ReplyAction="http://tempuri.org/IKBService/DeleteThreadResponse")]
        System.Threading.Tasks.Task<int> DeleteThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/UpdateThread", ReplyAction="http://tempuri.org/IKBService/UpdateThreadResponse")]
        int UpdateThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, string threadName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/UpdateThread", ReplyAction="http://tempuri.org/IKBService/UpdateThreadResponse")]
        System.Threading.Tasks.Task<int> UpdateThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, string threadName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddThreadCustomMessage", ReplyAction="http://tempuri.org/IKBService/AddThreadCustomMessageResponse")]
        void AddThreadCustomMessage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string message, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AddThreadCustomMessage", ReplyAction="http://tempuri.org/IKBService/AddThreadCustomMessageResponse")]
        System.Threading.Tasks.Task AddThreadCustomMessageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string message, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByForumByPage", ReplyAction="http://tempuri.org/IKBService/GetThreadByForumByPageResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByForumByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByForumByPage", ReplyAction="http://tempuri.org/IKBService/GetThreadByForumByPageResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByForumByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByForum", ReplyAction="http://tempuri.org/IKBService/GetThreadByForumResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByForum", ReplyAction="http://tempuri.org/IKBService/GetThreadByForumResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByUserByPage", ReplyAction="http://tempuri.org/IKBService/GetThreadByUserByPageResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByUserByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetThreadByUserByPage", ReplyAction="http://tempuri.org/IKBService/GetThreadByUserByPageResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByUserByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetExternalUserProfile", ReplyAction="http://tempuri.org/IKBService/GetExternalUserProfileResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ExternalProfileMember[] GetExternalUserProfile(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetExternalUserProfile", ReplyAction="http://tempuri.org/IKBService/GetExternalUserProfileResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ExternalProfileMember[]> GetExternalUserProfileAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetAllExternalUserByProfileIDList", ReplyAction="http://tempuri.org/IKBService/GetAllExternalUserByProfileIDListResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember[] GetAllExternalUserByProfileIDList(int[] profileid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetAllExternalUserByProfileIDList", ReplyAction="http://tempuri.org/IKBService/GetAllExternalUserByProfileIDListResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember[]> GetAllExternalUserByProfileIDListAsync(int[] profileid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetAllExternalUsers", ReplyAction="http://tempuri.org/IKBService/GetAllExternalUsersResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember[] GetAllExternalUsers(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetAllExternalUsers", ReplyAction="http://tempuri.org/IKBService/GetAllExternalUsersResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember[]> GetAllExternalUsersAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetAllInternalUsers", ReplyAction="http://tempuri.org/IKBService/GetAllInternalUsersResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember[] GetAllInternalUsers(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetAllInternalUsers", ReplyAction="http://tempuri.org/IKBService/GetAllInternalUsersResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember[]> GetAllInternalUsersAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetUserByUserID", ReplyAction="http://tempuri.org/IKBService/GetUserByUserIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember GetUserByUserID(int userid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserType type, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetUserByUserID", ReplyAction="http://tempuri.org/IKBService/GetUserByUserIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember> GetUserByUserIDAsync(int userid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserType type, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetUserByUserInfo", ReplyAction="http://tempuri.org/IKBService/GetUserByUserInfoResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember GetUserByUserInfo(string username, string password, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserType type, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetUserByUserInfo", ReplyAction="http://tempuri.org/IKBService/GetUserByUserInfoResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember> GetUserByUserInfoAsync(string username, string password, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserType type, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPortalByPortalId", ReplyAction="http://tempuri.org/IKBService/GetPortalByPortalIdResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties GetPortalByPortalId(int clientid, int portalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPortalByPortalId", ReplyAction="http://tempuri.org/IKBService/GetPortalByPortalIdResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties> GetPortalByPortalIdAsync(int clientid, int portalid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPortalByClientId", ReplyAction="http://tempuri.org/IKBService/GetPortalByClientIdResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalMember[] GetPortalByClientId(int clientid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPortalByClientId", ReplyAction="http://tempuri.org/IKBService/GetPortalByClientIdResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalMember[]> GetPortalByClientIdAsync(int clientid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetCurrentAPIVersion", ReplyAction="http://tempuri.org/IKBService/GetCurrentAPIVersionResponse")]
        string GetCurrentAPIVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetCurrentAPIVersion", ReplyAction="http://tempuri.org/IKBService/GetCurrentAPIVersionResponse")]
        System.Threading.Tasks.Task<string> GetCurrentAPIVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetCustomerPortalVersion", ReplyAction="http://tempuri.org/IKBService/GetCustomerPortalVersionResponse")]
        string GetCustomerPortalVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetCustomerPortalVersion", ReplyAction="http://tempuri.org/IKBService/GetCustomerPortalVersionResponse")]
        System.Threading.Tasks.Task<string> GetCustomerPortalVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopFAQ", ReplyAction="http://tempuri.org/IKBService/GetTopFAQResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[] GetTopFAQ(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopFAQ", ReplyAction="http://tempuri.org/IKBService/GetTopFAQResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[]> GetTopFAQAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFAQCategories", ReplyAction="http://tempuri.org/IKBService/GetFAQCategoriesResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQCategoryMember[] GetFAQCategories(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFAQCategories", ReplyAction="http://tempuri.org/IKBService/GetFAQCategoriesResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQCategoryMember[]> GetFAQCategoriesAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFAQCategoriesByKBId", ReplyAction="http://tempuri.org/IKBService/GetFAQCategoriesByKBIdResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQCategoryMember[] GetFAQCategoriesByKBId(int kbId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFAQCategoriesByKBId", ReplyAction="http://tempuri.org/IKBService/GetFAQCategoriesByKBIdResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQCategoryMember[]> GetFAQCategoriesByKBIdAsync(int kbId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFAQArticlesByFAQCategory", ReplyAction="http://tempuri.org/IKBService/GetFAQArticlesByFAQCategoryResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetFAQArticlesByFAQCategory(int faqCatId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFAQArticlesByFAQCategory", ReplyAction="http://tempuri.org/IKBService/GetFAQArticlesByFAQCategoryResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetFAQArticlesByFAQCategoryAsync(int faqCatId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFAQByCategory", ReplyAction="http://tempuri.org/IKBService/GetFAQByCategoryResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[] GetFAQByCategory(int faqCatId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFAQByCategory", ReplyAction="http://tempuri.org/IKBService/GetFAQByCategoryResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[]> GetFAQByCategoryAsync(int faqCatId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFAQByKB", ReplyAction="http://tempuri.org/IKBService/GetFAQByKBResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[] GetFAQByKB(int kbId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFAQByKB", ReplyAction="http://tempuri.org/IKBService/GetFAQByKBResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[]> GetFAQByKBAsync(int kbId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFAQs", ReplyAction="http://tempuri.org/IKBService/GetFAQsResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[] GetFAQs(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFAQs", ReplyAction="http://tempuri.org/IKBService/GetFAQsResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[]> GetFAQsAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFAQArticlesByFAQ", ReplyAction="http://tempuri.org/IKBService/GetFAQArticlesByFAQResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetFAQArticlesByFAQ(int faqId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetFAQArticlesByFAQ", ReplyAction="http://tempuri.org/IKBService/GetFAQArticlesByFAQResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetFAQArticlesByFAQAsync(int faqId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetFAQInfo", ReplyAction="http://tempuri.org/IKBService/SetFAQInfoResponse")]
        void SetFAQInfo(int faqId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetFAQInfo", ReplyAction="http://tempuri.org/IKBService/SetFAQInfoResponse")]
        System.Threading.Tasks.Task SetFAQInfoAsync(int faqId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetCategoryByKBID", ReplyAction="http://tempuri.org/IKBService/GetCategoryByKBIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CategoryMember[] GetCategoryByKBID(int kbid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetCategoryByKBID", ReplyAction="http://tempuri.org/IKBService/GetCategoryByKBIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CategoryMember[]> GetCategoryByKBIDAsync(int kbid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSubCategoryByCatID", ReplyAction="http://tempuri.org/IKBService/GetSubCategoryByCatIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CategoryMember[] GetSubCategoryByCatID(int catid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSubCategoryByCatID", ReplyAction="http://tempuri.org/IKBService/GetSubCategoryByCatIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CategoryMember[]> GetSubCategoryByCatIDAsync(int catid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleByCatID", ReplyAction="http://tempuri.org/IKBService/GetArticleByCatIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetArticleByCatID(int catid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleByCatID", ReplyAction="http://tempuri.org/IKBService/GetArticleByCatIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetArticleByCatIDAsync(int catid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleNoneCategorizedByKBID", ReplyAction="http://tempuri.org/IKBService/GetArticleNoneCategorizedByKBIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetArticleNoneCategorizedByKBID(int kbid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleNoneCategorizedByKBID", ReplyAction="http://tempuri.org/IKBService/GetArticleNoneCategorizedByKBIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetArticleNoneCategorizedByKBIDAsync(int kbid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetCategoryTreeByCatID", ReplyAction="http://tempuri.org/IKBService/GetCategoryTreeByCatIDResponse")]
        string[] GetCategoryTreeByCatID(int catid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetCategoryTreeByCatID", ReplyAction="http://tempuri.org/IKBService/GetCategoryTreeByCatIDResponse")]
        System.Threading.Tasks.Task<string[]> GetCategoryTreeByCatIDAsync(int catid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSolutionFinders", ReplyAction="http://tempuri.org/IKBService/GetSolutionFindersResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[] GetSolutionFinders(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSolutionFinders", ReplyAction="http://tempuri.org/IKBService/GetSolutionFindersResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[]> GetSolutionFindersAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSolutionFinderChoicesBySFID", ReplyAction="http://tempuri.org/IKBService/GetSolutionFinderChoicesBySFIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[] GetSolutionFinderChoicesBySFID(int SFID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSolutionFinderChoicesBySFID", ReplyAction="http://tempuri.org/IKBService/GetSolutionFinderChoicesBySFIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[]> GetSolutionFinderChoicesBySFIDAsync(int SFID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSolutionFinderChoicesByParentID", ReplyAction="http://tempuri.org/IKBService/GetSolutionFinderChoicesByParentIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[] GetSolutionFinderChoicesByParentID(int parentID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSolutionFinderChoicesByParentID", ReplyAction="http://tempuri.org/IKBService/GetSolutionFinderChoicesByParentIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[]> GetSolutionFinderChoicesByParentIDAsync(int parentID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSolutionFinderChoicesByClientID", ReplyAction="http://tempuri.org/IKBService/GetSolutionFinderChoicesByClientIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[] GetSolutionFinderChoicesByClientID(int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSolutionFinderChoicesByClientID", ReplyAction="http://tempuri.org/IKBService/GetSolutionFinderChoicesByClientIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[]> GetSolutionFinderChoicesByClientIDAsync(int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSFArticlesByChoiceID", ReplyAction="http://tempuri.org/IKBService/GetSFArticlesByChoiceIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetSFArticlesByChoiceID(int choiceID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSFArticlesByChoiceID", ReplyAction="http://tempuri.org/IKBService/GetSFArticlesByChoiceIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetSFArticlesByChoiceIDAsync(int choiceID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSFArticlesBySFID", ReplyAction="http://tempuri.org/IKBService/GetSFArticlesBySFIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetSFArticlesBySFID(int SFID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSFArticlesBySFID", ReplyAction="http://tempuri.org/IKBService/GetSFArticlesBySFIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetSFArticlesBySFIDAsync(int SFID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetGlossaries", ReplyAction="http://tempuri.org/IKBService/GetGlossariesResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryMember[] GetGlossaries(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetGlossaries", ReplyAction="http://tempuri.org/IKBService/GetGlossariesResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryMember[]> GetGlossariesAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetGlossaryTerms", ReplyAction="http://tempuri.org/IKBService/GetGlossaryTermsResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryTermMember[] GetGlossaryTerms(int glossaryId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetGlossaryTerms", ReplyAction="http://tempuri.org/IKBService/GetGlossaryTermsResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryTermMember[]> GetGlossaryTermsAsync(int glossaryId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetGlossaryTermsByItem", ReplyAction="http://tempuri.org/IKBService/GetGlossaryTermsByItemResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryTermMember[] GetGlossaryTermsByItem(int glossaryId, int glossaryItemId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetGlossaryTermsByItem", ReplyAction="http://tempuri.org/IKBService/GetGlossaryTermsByItemResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryTermMember[]> GetGlossaryTermsByItemAsync(int glossaryId, int glossaryItemId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetGlossaryTermsByAlphabet", ReplyAction="http://tempuri.org/IKBService/GetGlossaryTermsByAlphabetResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryTermMember[] GetGlossaryTermsByAlphabet(int glossaryId, char alphabet, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetGlossaryTermsByAlphabet", ReplyAction="http://tempuri.org/IKBService/GetGlossaryTermsByAlphabetResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryTermMember[]> GetGlossaryTermsByAlphabetAsync(int glossaryId, char alphabet, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetGlossaryItems", ReplyAction="http://tempuri.org/IKBService/GetGlossaryItemsResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryItemMember[] GetGlossaryItems(int glossaryId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetGlossaryItems", ReplyAction="http://tempuri.org/IKBService/GetGlossaryItemsResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryItemMember[]> GetGlossaryItemsAsync(int glossaryId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetATRMember", ReplyAction="http://tempuri.org/IKBService/GetATRMemberResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRMember GetATRMember(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetATRMember", ReplyAction="http://tempuri.org/IKBService/GetATRMemberResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRMember> GetATRMemberAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SubmitATR", ReplyAction="http://tempuri.org/IKBService/SubmitATRResponse")]
        bool SubmitATR(string question, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRMember membervalue, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SubmitATR", ReplyAction="http://tempuri.org/IKBService/SubmitATRResponse")]
        System.Threading.Tasks.Task<bool> SubmitATRAsync(string question, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRMember membervalue, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SaveUserInfo", ReplyAction="http://tempuri.org/IKBService/SaveUserInfoResponse")]
        void SaveUserInfo(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SaveUserInfo", ReplyAction="http://tempuri.org/IKBService/SaveUserInfoResponse")]
        System.Threading.Tasks.Task SaveUserInfoAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/requestPassword", ReplyAction="http://tempuri.org/IKBService/requestPasswordResponse")]
        bool requestPassword(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, string username, string emailaddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/requestPassword", ReplyAction="http://tempuri.org/IKBService/requestPasswordResponse")]
        System.Threading.Tasks.Task<bool> requestPasswordAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, string username, string emailaddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/requestAccount", ReplyAction="http://tempuri.org/IKBService/requestAccountResponse")]
        bool requestAccount(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalSettingMember member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/requestAccount", ReplyAction="http://tempuri.org/IKBService/requestAccountResponse")]
        System.Threading.Tasks.Task<bool> requestAccountAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalSettingMember member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleViewAuthorized", ReplyAction="http://tempuri.org/IKBService/GetArticleViewAuthorizedResponse")]
        bool GetArticleViewAuthorized(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleViewAuthorized", ReplyAction="http://tempuri.org/IKBService/GetArticleViewAuthorizedResponse")]
        System.Threading.Tasks.Task<bool> GetArticleViewAuthorizedAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetCategoryViewAuthorized", ReplyAction="http://tempuri.org/IKBService/GetCategoryViewAuthorizedResponse")]
        bool GetCategoryViewAuthorized(int catid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetCategoryViewAuthorized", ReplyAction="http://tempuri.org/IKBService/GetCategoryViewAuthorizedResponse")]
        System.Threading.Tasks.Task<bool> GetCategoryViewAuthorizedAsync(int catid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPortalAuthorized", ReplyAction="http://tempuri.org/IKBService/GetPortalAuthorizedResponse")]
        bool GetPortalAuthorized(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetPortalAuthorized", ReplyAction="http://tempuri.org/IKBService/GetPortalAuthorizedResponse")]
        System.Threading.Tasks.Task<bool> GetPortalAuthorizedAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CheckArticleExistByCategory", ReplyAction="http://tempuri.org/IKBService/CheckArticleExistByCategoryResponse")]
        bool CheckArticleExistByCategory(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int articleID, string catID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CheckArticleExistByCategory", ReplyAction="http://tempuri.org/IKBService/CheckArticleExistByCategoryResponse")]
        System.Threading.Tasks.Task<bool> CheckArticleExistByCategoryAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int articleID, string catID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CheckArticleExistByKB", ReplyAction="http://tempuri.org/IKBService/CheckArticleExistByKBResponse")]
        bool CheckArticleExistByKB(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int articleID, string kbID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CheckArticleExistByKB", ReplyAction="http://tempuri.org/IKBService/CheckArticleExistByKBResponse")]
        System.Threading.Tasks.Task<bool> CheckArticleExistByKBAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int articleID, string kbID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CheckArticleExistByAttributes", ReplyAction="http://tempuri.org/IKBService/CheckArticleExistByAttributesResponse")]
        bool CheckArticleExistByAttributes(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int articleID, string attID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/CheckArticleExistByAttributes", ReplyAction="http://tempuri.org/IKBService/CheckArticleExistByAttributesResponse")]
        System.Threading.Tasks.Task<bool> CheckArticleExistByAttributesAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int articleID, string attID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleSummary", ReplyAction="http://tempuri.org/IKBService/GetArticleSummaryResponse")]
        string GetArticleSummary(int artid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleSummary", ReplyAction="http://tempuri.org/IKBService/GetArticleSummaryResponse")]
        System.Threading.Tasks.Task<string> GetArticleSummaryAsync(int artid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSynopsisByArticleId", ReplyAction="http://tempuri.org/IKBService/GetSynopsisByArticleIdResponse")]
        string GetSynopsisByArticleId(int artid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetSynopsisByArticleId", ReplyAction="http://tempuri.org/IKBService/GetSynopsisByArticleIdResponse")]
        System.Threading.Tasks.Task<string> GetSynopsisByArticleIdAsync(int artid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SearchArticles", ReplyAction="http://tempuri.org/IKBService/SearchArticlesResponse")]
        System.Data.DataSet SearchArticles(string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod type, string kbid, string categoryid, string attribute, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SearchArticles", ReplyAction="http://tempuri.org/IKBService/SearchArticlesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchArticlesAsync(string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod type, string kbid, string categoryid, string attribute, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SearchArticlesEx", ReplyAction="http://tempuri.org/IKBService/SearchArticlesExResponse")]
        System.Data.DataSet SearchArticlesEx(string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod type, string kbid, string categoryid, string attribute, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SearchArticlesEx", ReplyAction="http://tempuri.org/IKBService/SearchArticlesExResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchArticlesExAsync(string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod type, string kbid, string categoryid, string attribute, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/Search", ReplyAction="http://tempuri.org/IKBService/SearchResponse")]
        System.Data.DataSet Search(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParamsList list, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod type, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/Search", ReplyAction="http://tempuri.org/IKBService/SearchResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParamsList list, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod type, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AdvancedSearch", ReplyAction="http://tempuri.org/IKBService/AdvancedSearchResponse")]
        System.Data.DataSet AdvancedSearch(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParameter[] list, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod type, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/AdvancedSearch", ReplyAction="http://tempuri.org/IKBService/AdvancedSearchResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> AdvancedSearchAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParameter[] list, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod type, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/Add", ReplyAction="http://tempuri.org/IKBService/AddResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParamsList Add(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParamsList list, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParameter sparam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/Add", ReplyAction="http://tempuri.org/IKBService/AddResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParamsList> AddAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParamsList list, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParameter sparam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleContent", ReplyAction="http://tempuri.org/IKBService/GetArticleContentResponse")]
        System.IO.MemoryStream GetArticleContent(int articleid, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleContent", ReplyAction="http://tempuri.org/IKBService/GetArticleContentResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetArticleContentAsync(int articleid, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleContentString", ReplyAction="http://tempuri.org/IKBService/GetArticleContentStringResponse")]
        string GetArticleContentString(int articleid, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleContentString", ReplyAction="http://tempuri.org/IKBService/GetArticleContentStringResponse")]
        System.Threading.Tasks.Task<string> GetArticleContentStringAsync(int articleid, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleDisplayInfo", ReplyAction="http://tempuri.org/IKBService/GetArticleDisplayInfoResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetArticleDisplayInfo(string articleidlist, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleDisplayInfo", ReplyAction="http://tempuri.org/IKBService/GetArticleDisplayInfoResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetArticleDisplayInfoAsync(string articleidlist, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleInfo", ReplyAction="http://tempuri.org/IKBService/GetArticleInfoResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleInfoMember GetArticleInfo(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleInfo", ReplyAction="http://tempuri.org/IKBService/GetArticleInfoResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleInfoMember> GetArticleInfoAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleMetadata", ReplyAction="http://tempuri.org/IKBService/GetArticleMetadataResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleInfoProperties GetArticleMetadata(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleMetadata", ReplyAction="http://tempuri.org/IKBService/GetArticleMetadataResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleInfoProperties> GetArticleMetadataAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleGroup", ReplyAction="http://tempuri.org/IKBService/GetArticleGroupResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.MarshalByRefObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TemplateSection[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TemplateSection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiVersion[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiVersion))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiPortalConfig))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.User[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Portal[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Portal))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserProfile[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiUserActivityReport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ApplicationInfoMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQDisplayOption))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FileTypeMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FileTypeMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleDisplayMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalArticleInfoMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalLanguageMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalLanguageMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagement))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WidgetManagementMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AlertStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchCloudResultMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchCloudResultMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchTypeMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchTypeMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TagMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TagMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQCategoryMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQCategoryMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CategoryMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CategoryMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryTermMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryTermMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryItemMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryItemMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRField[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRField))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRDropDownlist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRDropDownlist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATREmail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATREmail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleInfoMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleInfoProperties))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Attachment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Attachment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleRelated[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleRelated))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleContentMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleResourceMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleResourceMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(int[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Member))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostProposedType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadDisplayMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadDisplayMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CommunityTagMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CommunityTagMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMemberFile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.History[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.History))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumDisplayMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumDisplayMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.IO.MemoryStream))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.IO.Stream))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalKBMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalKBMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParamsList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParameter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParameter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SetRatingMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SourceRating))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.RatingValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.RatingValueMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMemberBasic))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ExternalProfileMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleGroupMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleGroupMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ProfileForumManagementMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalTypes))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ProfileWikiManagementMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSessionBasic))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalSettingField[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalSettingField))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalSettingMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ExternalProfileMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleContentTemplateMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleContentTemplateMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleCommentMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleCommentMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlow[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlowStep[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlowStep))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WorkFlowType))]
        object[] GetArticleGroup(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleGroup", ReplyAction="http://tempuri.org/IKBService/GetArticleGroupResponse")]
        System.Threading.Tasks.Task<object[]> GetArticleGroupAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetArticleFeedBack", ReplyAction="http://tempuri.org/IKBService/SetArticleFeedBackResponse")]
        bool SetArticleFeedBack(int articleid, string feedback, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetArticleFeedBack", ReplyAction="http://tempuri.org/IKBService/SetArticleFeedBackResponse")]
        System.Threading.Tasks.Task<bool> SetArticleFeedBackAsync(int articleid, string feedback, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleView", ReplyAction="http://tempuri.org/IKBService/GetArticleViewResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleContentMember GetArticleView(int articleid, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleView", ReplyAction="http://tempuri.org/IKBService/GetArticleViewResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleContentMember> GetArticleViewAsync(int articleid, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/createOnlineArticle", ReplyAction="http://tempuri.org/IKBService/createOnlineArticleResponse")]
        bool createOnlineArticle(string title, string content, int kbid, int wfstepid, int clientid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/createOnlineArticle", ReplyAction="http://tempuri.org/IKBService/createOnlineArticleResponse")]
        System.Threading.Tasks.Task<bool> createOnlineArticleAsync(string title, string content, int kbid, int wfstepid, int clientid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/createOnlineArticleVersion", ReplyAction="http://tempuri.org/IKBService/createOnlineArticleVersionResponse")]
        bool createOnlineArticleVersion(int articleid, string title, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleContentTemplateMember[] contentList, int kbid, int wfstepid, int templateID, int clientid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/createOnlineArticleVersion", ReplyAction="http://tempuri.org/IKBService/createOnlineArticleVersionResponse")]
        System.Threading.Tasks.Task<bool> createOnlineArticleVersionAsync(int articleid, string title, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleContentTemplateMember[] contentList, int kbid, int wfstepid, int templateID, int clientid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleResourceByArticleID", ReplyAction="http://tempuri.org/IKBService/GetArticleResourceByArticleIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleResourceMember[] GetArticleResourceByArticleID(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleResourceByArticleID", ReplyAction="http://tempuri.org/IKBService/GetArticleResourceByArticleIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleResourceMember[]> GetArticleResourceByArticleIDAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetResourceFileByResourceID", ReplyAction="http://tempuri.org/IKBService/GetResourceFileByResourceIDResponse")]
        System.IO.MemoryStream GetResourceFileByResourceID(int resourceid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetResourceFileByResourceID", ReplyAction="http://tempuri.org/IKBService/GetResourceFileByResourceIDResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetResourceFileByResourceIDAsync(int resourceid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetResourceFile", ReplyAction="http://tempuri.org/IKBService/GetResourceFileResponse")]
        System.IO.MemoryStream GetResourceFile(int resourceid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetResourceFile", ReplyAction="http://tempuri.org/IKBService/GetResourceFileResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetResourceFileAsync(int resourceid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetResourceFileContent", ReplyAction="http://tempuri.org/IKBService/GetResourceFileContentResponse")]
        string GetResourceFileContent(int resourceid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetResourceFileContent", ReplyAction="http://tempuri.org/IKBService/GetResourceFileContentResponse")]
        System.Threading.Tasks.Task<string> GetResourceFileContentAsync(int resourceid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleViewURL", ReplyAction="http://tempuri.org/IKBService/GetArticleViewURLResponse")]
        string GetArticleViewURL(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleViewURL", ReplyAction="http://tempuri.org/IKBService/GetArticleViewURLResponse")]
        System.Threading.Tasks.Task<string> GetArticleViewURLAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetPortalFeedBack", ReplyAction="http://tempuri.org/IKBService/SetPortalFeedBackResponse")]
        bool SetPortalFeedBack(string userfullname, string emailaddress, int kbid, int catecogry, string subject, string feedback, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetPortalFeedBack", ReplyAction="http://tempuri.org/IKBService/SetPortalFeedBackResponse")]
        System.Threading.Tasks.Task<bool> SetPortalFeedBackAsync(string userfullname, string emailaddress, int kbid, int catecogry, string subject, string feedback, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetArticleSubscription", ReplyAction="http://tempuri.org/IKBService/SetArticleSubscriptionResponse")]
        bool SetArticleSubscription(string email, int articleid, bool sub, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/SetArticleSubscription", ReplyAction="http://tempuri.org/IKBService/SetArticleSubscriptionResponse")]
        System.Threading.Tasks.Task<bool> SetArticleSubscriptionAsync(string email, int articleid, bool sub, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleCommentsByArticleID", ReplyAction="http://tempuri.org/IKBService/GetArticleCommentsByArticleIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleCommentMember[] GetArticleCommentsByArticleID(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleCommentsByArticleID", ReplyAction="http://tempuri.org/IKBService/GetArticleCommentsByArticleIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleCommentMember[]> GetArticleCommentsByArticleIDAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/sendArticleSpacesComments", ReplyAction="http://tempuri.org/IKBService/sendArticleSpacesCommentsResponse")]
        bool sendArticleSpacesComments(int articleid, string articleComments, string email, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/sendArticleSpacesComments", ReplyAction="http://tempuri.org/IKBService/sendArticleSpacesCommentsResponse")]
        System.Threading.Tasks.Task<bool> sendArticleSpacesCommentsAsync(int articleid, string articleComments, string email, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleViewSecureURL", ReplyAction="http://tempuri.org/IKBService/GetArticleViewSecureURLResponse")]
        string GetArticleViewSecureURL(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleViewSecureURL", ReplyAction="http://tempuri.org/IKBService/GetArticleViewSecureURLResponse")]
        System.Threading.Tasks.Task<string> GetArticleViewSecureURLAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/IsConvertedArticle", ReplyAction="http://tempuri.org/IKBService/IsConvertedArticleResponse")]
        bool IsConvertedArticle(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/IsConvertedArticle", ReplyAction="http://tempuri.org/IKBService/IsConvertedArticleResponse")]
        System.Threading.Tasks.Task<bool> IsConvertedArticleAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetRelatedarticlesID", ReplyAction="http://tempuri.org/IKBService/GetRelatedarticlesIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleRelated[] GetRelatedarticlesID(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetRelatedarticlesID", ReplyAction="http://tempuri.org/IKBService/GetRelatedarticlesIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleRelated[]> GetRelatedarticlesIDAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopArticlesFavorite", ReplyAction="http://tempuri.org/IKBService/GetTopArticlesFavoriteResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetTopArticlesFavorite(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopArticlesFavorite", ReplyAction="http://tempuri.org/IKBService/GetTopArticlesFavoriteResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetTopArticlesFavoriteAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetAllArticlesFavorite", ReplyAction="http://tempuri.org/IKBService/GetAllArticlesFavoriteResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetAllArticlesFavorite(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetAllArticlesFavorite", ReplyAction="http://tempuri.org/IKBService/GetAllArticlesFavoriteResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetAllArticlesFavoriteAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetLatestArticlesViewed", ReplyAction="http://tempuri.org/IKBService/GetLatestArticlesViewedResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetLatestArticlesViewed(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetLatestArticlesViewed", ReplyAction="http://tempuri.org/IKBService/GetLatestArticlesViewedResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetLatestArticlesViewedAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopLastSearch", ReplyAction="http://tempuri.org/IKBService/GetTopLastSearchResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchCloudResultMember[] GetTopLastSearch(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetTopLastSearch", ReplyAction="http://tempuri.org/IKBService/GetTopLastSearchResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchCloudResultMember[]> GetTopLastSearchAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/setArticleFavorite", ReplyAction="http://tempuri.org/IKBService/setArticleFavoriteResponse")]
        bool setArticleFavorite(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/setArticleFavorite", ReplyAction="http://tempuri.org/IKBService/setArticleFavoriteResponse")]
        System.Threading.Tasks.Task<bool> setArticleFavoriteAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/removeArticleFavorite", ReplyAction="http://tempuri.org/IKBService/removeArticleFavoriteResponse")]
        bool removeArticleFavorite(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/removeArticleFavorite", ReplyAction="http://tempuri.org/IKBService/removeArticleFavoriteResponse")]
        System.Threading.Tasks.Task<bool> removeArticleFavoriteAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWorkFlowByClientId", ReplyAction="http://tempuri.org/IKBService/GetWorkFlowByClientIdResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlow[] GetWorkFlowByClientId(int clientid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWorkFlowByClientId", ReplyAction="http://tempuri.org/IKBService/GetWorkFlowByClientIdResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlow[]> GetWorkFlowByClientIdAsync(int clientid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWorkFlowStep", ReplyAction="http://tempuri.org/IKBService/GetWorkFlowStepResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlowStep[] GetWorkFlowStep(int clientid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWorkFlowStep", ReplyAction="http://tempuri.org/IKBService/GetWorkFlowStepResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlowStep[]> GetWorkFlowStepAsync(int clientid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWorkFlowStepByTypeID", ReplyAction="http://tempuri.org/IKBService/GetWorkFlowStepByTypeIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlowStep[] GetWorkFlowStepByTypeID(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WorkFlowType typeid, int clientid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetWorkFlowStepByTypeID", ReplyAction="http://tempuri.org/IKBService/GetWorkFlowStepByTypeIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlowStep[]> GetWorkFlowStepByTypeIDAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WorkFlowType typeid, int clientid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleByTagID", ReplyAction="http://tempuri.org/IKBService/GetArticleByTagIDResponse")]
        IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetArticleByTagID(int tagIDPortal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKBService/GetArticleByTagID", ReplyAction="http://tempuri.org/IKBService/GetArticleByTagIDResponse")]
        System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetArticleByTagIDAsync(int tagIDPortal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IKBServiceChannel : IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.IKBService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KBServiceClient : System.ServiceModel.ClientBase<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.IKBService>, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.IKBService {
        
        public KBServiceClient() {
        }
        
        public KBServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public KBServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KBServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KBServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByUser(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetThreadByUser(managingUser);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByUserAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetThreadByUserAsync(managingUser);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByDate(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime dateTime, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType) {
            return base.Channel.GetThreadByDate(managingUser, dateTime, dateType);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByDateAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime dateTime, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType) {
            return base.Channel.GetThreadByDateAsync(managingUser, dateTime, dateType);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByDateBetween(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime startDate, System.DateTime endDate, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType) {
            return base.Channel.GetThreadByDateBetween(managingUser, startDate, endDate, dateType);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByDateBetweenAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime startDate, System.DateTime endDate, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType) {
            return base.Channel.GetThreadByDateBetweenAsync(managingUser, startDate, endDate, dateType);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByDateByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime startDate, System.DateTime endDate, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetThreadByDateByPage(managingUser, startDate, endDate, dateType, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByDateByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime startDate, System.DateTime endDate, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetThreadByDateByPageAsync(managingUser, startDate, endDate, dateType, currentPage, totalRowsPerPage);
        }
        
        public int GetFirstThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            return base.Channel.GetFirstThread(managingUser, forumId);
        }
        
        public System.Threading.Tasks.Task<int> GetFirstThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            return base.Channel.GetFirstThreadAsync(managingUser, forumId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember GetThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            return base.Channel.GetThread(managingUser, threadId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember> GetThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            return base.Channel.GetThreadAsync(managingUser, threadId);
        }
        
        public int GetTotalThreadsByForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            return base.Channel.GetTotalThreadsByForum(managingUser, forumId);
        }
        
        public System.Threading.Tasks.Task<int> GetTotalThreadsByForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            return base.Channel.GetTotalThreadsByForumAsync(managingUser, forumId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadDisplayMember[] GetTopRatedThreadsByPortal(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetTopRatedThreadsByPortal(managingUser);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadDisplayMember[]> GetTopRatedThreadsByPortalAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetTopRatedThreadsByPortalAsync(managingUser);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadDisplayMember[] GetTopRatedThreadsByForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            return base.Channel.GetTopRatedThreadsByForum(managingUser, forumId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadDisplayMember[]> GetTopRatedThreadsByForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            return base.Channel.GetTopRatedThreadsByForumAsync(managingUser, forumId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByTagByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int tagId, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetThreadByTagByPage(managingUser, tagId, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByTagByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int tagId, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetThreadByTagByPageAsync(managingUser, tagId, currentPage, totalRowsPerPage);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByTag(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int tagId) {
            return base.Channel.GetThreadByTag(managingUser, tagId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByTagAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int tagId) {
            return base.Channel.GetThreadByTagAsync(managingUser, tagId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByTagUserByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetThreadByTagUserByPage(managingUser, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByTagUserByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetThreadByTagUserByPageAsync(managingUser, currentPage, totalRowsPerPage);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByTagUser(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetThreadByTagUser(managingUser);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByTagUserAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetThreadByTagUserAsync(managingUser);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByTaggedDate(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime taggedDate) {
            return base.Channel.GetThreadByTaggedDate(managingUser, taggedDate);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByTaggedDateAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime taggedDate) {
            return base.Channel.GetThreadByTaggedDateAsync(managingUser, taggedDate);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByTaggedDateByTagId(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime taggedDate, int tagId) {
            return base.Channel.GetThreadByTaggedDateByTagId(managingUser, taggedDate, tagId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByTaggedDateByTagIdAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime taggedDate, int tagId) {
            return base.Channel.GetThreadByTaggedDateByTagIdAsync(managingUser, taggedDate, tagId);
        }
        
        public void AddTagToThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int tagId) {
            base.Channel.AddTagToThread(managingUser, threadId, tagId);
        }
        
        public System.Threading.Tasks.Task AddTagToThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int tagId) {
            return base.Channel.AddTagToThreadAsync(managingUser, threadId, tagId);
        }
        
        public void DeleteTagsByThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            base.Channel.DeleteTagsByThread(managingUser, threadId);
        }
        
        public System.Threading.Tasks.Task DeleteTagsByThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            return base.Channel.DeleteTagsByThreadAsync(managingUser, threadId);
        }
        
        public void DeleteTagByThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int tagId) {
            base.Channel.DeleteTagByThread(managingUser, threadId, tagId);
        }
        
        public System.Threading.Tasks.Task DeleteTagByThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int tagId) {
            return base.Channel.DeleteTagByThreadAsync(managingUser, threadId, tagId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CommunityTagMember[] GetTagsByThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            return base.Channel.GetTagsByThread(managingUser, threadId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CommunityTagMember[]> GetTagsByThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            return base.Channel.GetTagsByThreadAsync(managingUser, threadId);
        }
        
        public void AddAttachmentToThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string filepath, string fileName, string fileExtn, int threadId) {
            base.Channel.AddAttachmentToThread(managingUser, filepath, fileName, fileExtn, threadId);
        }
        
        public System.Threading.Tasks.Task AddAttachmentToThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string filepath, string fileName, string fileExtn, int threadId) {
            return base.Channel.AddAttachmentToThreadAsync(managingUser, filepath, fileName, fileExtn, threadId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMember[] GetAttachmentsByThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            return base.Channel.GetAttachmentsByThread(managingUser, threadId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMember[]> GetAttachmentsByThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            return base.Channel.GetAttachmentsByThreadAsync(managingUser, threadId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMemberFile GetAttachmentById(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int attachmentId) {
            return base.Channel.GetAttachmentById(managingUser, attachmentId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMemberFile> GetAttachmentByIdAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int attachmentId) {
            return base.Channel.GetAttachmentByIdAsync(managingUser, attachmentId);
        }
        
        public void DeleteAttachment(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadid, int attachmentId) {
            base.Channel.DeleteAttachment(managingUser, threadid, attachmentId);
        }
        
        public System.Threading.Tasks.Task DeleteAttachmentAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadid, int attachmentId) {
            return base.Channel.DeleteAttachmentAsync(managingUser, threadid, attachmentId);
        }
        
        public void DeleteAttachmentsByThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            base.Channel.DeleteAttachmentsByThread(managingUser, threadId);
        }
        
        public System.Threading.Tasks.Task DeleteAttachmentsByThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            return base.Channel.DeleteAttachmentsByThreadAsync(managingUser, threadId);
        }
        
        public int CreatePost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string postContent, int postTypeId, int threadId) {
            return base.Channel.CreatePost(managingUser, postContent, postTypeId, threadId);
        }
        
        public System.Threading.Tasks.Task<int> CreatePostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string postContent, int postTypeId, int threadId) {
            return base.Channel.CreatePostAsync(managingUser, postContent, postTypeId, threadId);
        }
        
        public int CreatePostByParnetID(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string postContent, int postTypeId, int threadId, int parentPostId) {
            return base.Channel.CreatePostByParnetID(managingUser, postContent, postTypeId, threadId, parentPostId);
        }
        
        public System.Threading.Tasks.Task<int> CreatePostByParnetIDAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string postContent, int postTypeId, int threadId, int parentPostId) {
            return base.Channel.CreatePostByParnetIDAsync(managingUser, postContent, postTypeId, threadId, parentPostId);
        }
        
        public int DeletePost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            return base.Channel.DeletePost(managingUser, postId);
        }
        
        public System.Threading.Tasks.Task<int> DeletePostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            return base.Channel.DeletePostAsync(managingUser, postId);
        }
        
        public int UpdatePost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, string postContent) {
            return base.Channel.UpdatePost(managingUser, postId, postContent);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, string postContent) {
            return base.Channel.UpdatePostAsync(managingUser, postId, postContent);
        }
        
        public void AddPostCustomMessage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string message, int postId) {
            base.Channel.AddPostCustomMessage(managingUser, message, postId);
        }
        
        public System.Threading.Tasks.Task AddPostCustomMessageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string message, int postId) {
            return base.Channel.AddPostCustomMessageAsync(managingUser, message, postId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetReplysByPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            return base.Channel.GetReplysByPost(managingUser, postId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetReplysByPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            return base.Channel.GetReplysByPostAsync(managingUser, postId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetQuotesByPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            return base.Channel.GetQuotesByPost(managingUser, postId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetQuotesByPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            return base.Channel.GetQuotesByPostAsync(managingUser, postId);
        }
        
        public int GetFirstPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            return base.Channel.GetFirstPost(managingUser, threadId);
        }
        
        public System.Threading.Tasks.Task<int> GetFirstPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            return base.Channel.GetFirstPostAsync(managingUser, threadId);
        }
        
        public int GetTotalPosts(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId, int threadId) {
            return base.Channel.GetTotalPosts(managingUser, forumId, threadId);
        }
        
        public System.Threading.Tasks.Task<int> GetTotalPostsAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId, int threadId) {
            return base.Channel.GetTotalPostsAsync(managingUser, forumId, threadId);
        }
        
        public int GetTotalPostsByUser(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId, int threadId, int userId) {
            return base.Channel.GetTotalPostsByUser(managingUser, forumId, threadId, userId);
        }
        
        public System.Threading.Tasks.Task<int> GetTotalPostsByUserAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId, int threadId, int userId) {
            return base.Channel.GetTotalPostsByUserAsync(managingUser, forumId, threadId, userId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            return base.Channel.GetPostByForum(managingUser, forumId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            return base.Channel.GetPostByForumAsync(managingUser, forumId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByForumByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetPostByForumByPage(managingUser, forumId, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByForumByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetPostByForumByPageAsync(managingUser, forumId, currentPage, totalRowsPerPage);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember GetLatestPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            return base.Channel.GetLatestPost(managingUser, forumId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember> GetLatestPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            return base.Channel.GetLatestPostAsync(managingUser, forumId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember GetPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int searchid) {
            return base.Channel.GetPost(managingUser, postId, searchid);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember> GetPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int searchid) {
            return base.Channel.GetPostAsync(managingUser, postId, searchid);
        }
        
        public void SetInaccuratePost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, string comment) {
            base.Channel.SetInaccuratePost(managingUser, postId, comment);
        }
        
        public System.Threading.Tasks.Task SetInaccuratePostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, string comment) {
            return base.Channel.SetInaccuratePostAsync(managingUser, postId, comment);
        }
        
        public void RemoveProposedPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            base.Channel.RemoveProposedPost(managingUser, postId);
        }
        
        public System.Threading.Tasks.Task RemoveProposedPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            return base.Channel.RemoveProposedPostAsync(managingUser, postId);
        }
        
        public void RemovePostAsAnswer(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            base.Channel.RemovePostAsAnswer(managingUser, postId);
        }
        
        public System.Threading.Tasks.Task RemovePostAsAnswerAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            return base.Channel.RemovePostAsAnswerAsync(managingUser, postId);
        }
        
        public void SetProposedPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int threadId) {
            base.Channel.SetProposedPost(managingUser, postId, threadId);
        }
        
        public System.Threading.Tasks.Task SetProposedPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int threadId) {
            return base.Channel.SetProposedPostAsync(managingUser, postId, threadId);
        }
        
        public void SetPostAsAnswer(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int threadId) {
            base.Channel.SetPostAsAnswer(managingUser, postId, threadId);
        }
        
        public System.Threading.Tasks.Task SetPostAsAnswerAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int threadId) {
            return base.Channel.SetPostAsAnswerAsync(managingUser, postId, threadId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByThreadByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetPostByThreadByPage(managingUser, threadId, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByThreadByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetPostByThreadByPageAsync(managingUser, threadId, currentPage, totalRowsPerPage);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            return base.Channel.GetPostByThread(managingUser, threadId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            return base.Channel.GetPostByThreadAsync(managingUser, threadId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostAnswers(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            return base.Channel.GetPostAnswers(managingUser, threadId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostAnswersAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            return base.Channel.GetPostAnswersAsync(managingUser, threadId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostAnswersPageWise(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetPostAnswersPageWise(managingUser, threadId, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostAnswersPageWiseAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetPostAnswersPageWiseAsync(managingUser, threadId, currentPage, totalRowsPerPage);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostProposedSolutions(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            return base.Channel.GetPostProposedSolutions(managingUser, threadId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostProposedSolutionsAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId) {
            return base.Channel.GetPostProposedSolutionsAsync(managingUser, threadId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostProposedSolutionsPageWise(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetPostProposedSolutionsPageWise(managingUser, threadId, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostProposedSolutionsPageWiseAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetPostProposedSolutionsPageWiseAsync(managingUser, threadId, currentPage, totalRowsPerPage);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember GetLatestPostByUser(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetLatestPostByUser(managingUser);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember> GetLatestPostByUserAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetLatestPostByUserAsync(managingUser);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByUserByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetPostByUserByPage(managingUser, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByUserByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetPostByUserByPageAsync(managingUser, currentPage, totalRowsPerPage);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByUser(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetPostByUser(managingUser);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByUserAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetPostByUserAsync(managingUser);
        }
        
        public int GetUserCreditsByProposedSolutions(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int userId) {
            return base.Channel.GetUserCreditsByProposedSolutions(managingUser, userId);
        }
        
        public System.Threading.Tasks.Task<int> GetUserCreditsByProposedSolutionsAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int userId) {
            return base.Channel.GetUserCreditsByProposedSolutionsAsync(managingUser, userId);
        }
        
        public int GetUserCreditsByAcceptedSolutions(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int userId) {
            return base.Channel.GetUserCreditsByAcceptedSolutions(managingUser, userId);
        }
        
        public System.Threading.Tasks.Task<int> GetUserCreditsByAcceptedSolutionsAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int userId) {
            return base.Channel.GetUserCreditsByAcceptedSolutionsAsync(managingUser, userId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostUser[] GetMostPopulerUsersByPostAnswers(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetMostPopulerUsersByPostAnswers(managingUser);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostUser[]> GetMostPopulerUsersByPostAnswersAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetMostPopulerUsersByPostAnswersAsync(managingUser);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostUser[] GetMostPopulerUsersByPostsProposed(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetMostPopulerUsersByPostsProposed(managingUser);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostUser[]> GetMostPopulerUsersByPostsProposedAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetMostPopulerUsersByPostsProposedAsync(managingUser);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByDateBetween(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime stratDate, System.DateTime endDate, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType) {
            return base.Channel.GetPostByDateBetween(managingUser, stratDate, endDate, dateType);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByDateBetweenAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime stratDate, System.DateTime endDate, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType) {
            return base.Channel.GetPostByDateBetweenAsync(managingUser, stratDate, endDate, dateType);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByDateByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime startDate, System.DateTime endDate, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetPostByDateByPage(managingUser, startDate, endDate, dateType, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByDateByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime startDate, System.DateTime endDate, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetPostByDateByPageAsync(managingUser, startDate, endDate, dateType, currentPage, totalRowsPerPage);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByDate(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime date, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType) {
            return base.Channel.GetPostByDate(managingUser, date, dateType);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByDateAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime date, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.DateType dateType) {
            return base.Channel.GetPostByDateAsync(managingUser, date, dateType);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByTag(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int tagId) {
            return base.Channel.GetPostByTag(managingUser, tagId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByTagAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int tagId) {
            return base.Channel.GetPostByTagAsync(managingUser, tagId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByTagByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int tagId, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetPostByTagByPage(managingUser, tagId, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByTagByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int tagId, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetPostByTagByPageAsync(managingUser, tagId, currentPage, totalRowsPerPage);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByTagger(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetPostByTagger(managingUser);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByTaggerAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetPostByTaggerAsync(managingUser);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByTaggerByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetPostByTaggerByPage(managingUser, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByTaggerByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetPostByTaggerByPageAsync(managingUser, currentPage, totalRowsPerPage);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByTaggedDateByTagid(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime taggedDate, int tagId) {
            return base.Channel.GetPostByTaggedDateByTagid(managingUser, taggedDate, tagId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByTaggedDateByTagidAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime taggedDate, int tagId) {
            return base.Channel.GetPostByTaggedDateByTagidAsync(managingUser, taggedDate, tagId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[] GetPostByTaggedDate(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime taggedDate) {
            return base.Channel.GetPostByTaggedDate(managingUser, taggedDate);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PostMember[]> GetPostByTaggedDateAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, System.DateTime taggedDate) {
            return base.Channel.GetPostByTaggedDateAsync(managingUser, taggedDate);
        }
        
        public void AddTagToPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int tagId) {
            base.Channel.AddTagToPost(managingUser, postId, tagId);
        }
        
        public System.Threading.Tasks.Task AddTagToPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int tagId) {
            return base.Channel.AddTagToPostAsync(managingUser, postId, tagId);
        }
        
        public void DeleteTagByPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int tagId) {
            base.Channel.DeleteTagByPost(managingUser, postId, tagId);
        }
        
        public System.Threading.Tasks.Task DeleteTagByPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId, int tagId) {
            return base.Channel.DeleteTagByPostAsync(managingUser, postId, tagId);
        }
        
        public void DeleteAllTags(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            base.Channel.DeleteAllTags(managingUser, postId);
        }
        
        public System.Threading.Tasks.Task DeleteAllTagsAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            return base.Channel.DeleteAllTagsAsync(managingUser, postId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CommunityTagMember[] GetTagsByPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            return base.Channel.GetTagsByPost(managingUser, postId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CommunityTagMember[]> GetTagsByPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            return base.Channel.GetTagsByPostAsync(managingUser, postId);
        }
        
        public void AddAttachmentToPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string filepath, string fileName, string fileExtn, int postId) {
            base.Channel.AddAttachmentToPost(managingUser, filepath, fileName, fileExtn, postId);
        }
        
        public System.Threading.Tasks.Task AddAttachmentToPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string filepath, string fileName, string fileExtn, int postId) {
            return base.Channel.AddAttachmentToPostAsync(managingUser, filepath, fileName, fileExtn, postId);
        }
        
        public void DeleteAttachmentsByPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            base.Channel.DeleteAttachmentsByPost(managingUser, postId);
        }
        
        public System.Threading.Tasks.Task DeleteAttachmentsByPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            return base.Channel.DeleteAttachmentsByPostAsync(managingUser, postId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMember[] GetAttachmentsByPost(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            return base.Channel.GetAttachmentsByPost(managingUser, postId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.AttachmentMember[]> GetAttachmentsByPostAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int postId) {
            return base.Channel.GetAttachmentsByPostAsync(managingUser, postId);
        }
        
        public bool SetRating(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SetRatingMember mem, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int portalID) {
            return base.Channel.SetRating(mem, user, portalID);
        }
        
        public System.Threading.Tasks.Task<bool> SetRatingAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SetRatingMember mem, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int portalID) {
            return base.Channel.SetRatingAsync(mem, user, portalID);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.RatingValueMember getRating(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SetRatingMember sourceid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int portalID) {
            return base.Channel.getRating(sourceid, user, portalID);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.RatingValueMember> getRatingAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SetRatingMember sourceid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int portalID) {
            return base.Channel.getRatingAsync(sourceid, user, portalID);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetHotTopics(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetHotTopics(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetHotTopicsAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetHotTopicsAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetLatestArticles(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetLatestArticles(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetLatestArticlesAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetLatestArticlesAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchCloudResultMember[] GetTopDailySearch(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetTopDailySearch(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchCloudResultMember[]> GetTopDailySearchAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetTopDailySearchAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchCloudResultMember[] GetTopWeeklySearch(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetTopWeeklySearch(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchCloudResultMember[]> GetTopWeeklySearchAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetTopWeeklySearchAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchTypeMember[] GetSearchOptionList(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSearchOptionList(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchTypeMember[]> GetSearchOptionListAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSearchOptionListAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchTypeMember[] GetSearchTypeList(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSearchTypeList(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchTypeMember[]> GetSearchTypeListAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSearchTypeListAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalKBMember[] GetPortalKB(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetPortalKB(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalKBMember[]> GetPortalKBAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetPortalKBAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalKBMember[] GetKnowledgebasePortalByPortalId(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetKnowledgebasePortalByPortalId(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalKBMember[]> GetKnowledgebasePortalByPortalIdAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetKnowledgebasePortalByPortalIdAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TagMember[] GetTagCloudByClientId(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetTagCloudByClientId(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TagMember[]> GetTagCloudByClientIdAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetTagCloudByClientIdAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TagMember[] GetTagCloudByTagId(int tagid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetTagCloudByTagId(tagid, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.TagMember[]> GetTagCloudByTagIdAsync(int tagid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetTagCloudByTagIdAsync(tagid, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[] GetWikiList(string sessionID, int clientID) {
            return base.Channel.GetWikiList(sessionID, clientID);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[]> GetWikiListAsync(string sessionID, int clientID) {
            return base.Channel.GetWikiListAsync(sessionID, clientID);
        }
        
        public int GetWikiContainerID(string sessionID, int clientID) {
            return base.Channel.GetWikiContainerID(sessionID, clientID);
        }
        
        public System.Threading.Tasks.Task<int> GetWikiContainerIDAsync(string sessionID, int clientID) {
            return base.Channel.GetWikiContainerIDAsync(sessionID, clientID);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[] GetWikiListByPortal(string sessionID, int clientID, int portalID, string filter, string orderby, bool isDescending, int rowPerPage, int currentPage) {
            return base.Channel.GetWikiListByPortal(sessionID, clientID, portalID, filter, orderby, isDescending, rowPerPage, currentPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[]> GetWikiListByPortalAsync(string sessionID, int clientID, int portalID, string filter, string orderby, bool isDescending, int rowPerPage, int currentPage) {
            return base.Channel.GetWikiListByPortalAsync(sessionID, clientID, portalID, filter, orderby, isDescending, rowPerPage, currentPage);
        }
        
        public bool CheckInWikis(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int[] wikiIDs) {
            return base.Channel.CheckInWikis(sessionID, clientID, user, wikiIDs);
        }
        
        public System.Threading.Tasks.Task<bool> CheckInWikisAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int[] wikiIDs) {
            return base.Channel.CheckInWikisAsync(sessionID, clientID, user, wikiIDs);
        }
        
        public bool CheckOutWikis(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int[] wikiIDs) {
            return base.Channel.CheckOutWikis(sessionID, clientID, user, wikiIDs);
        }
        
        public System.Threading.Tasks.Task<bool> CheckOutWikisAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int[] wikiIDs) {
            return base.Channel.CheckOutWikisAsync(sessionID, clientID, user, wikiIDs);
        }
        
        public bool CheckInWiki(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int wikiID) {
            return base.Channel.CheckInWiki(sessionID, clientID, user, wikiID);
        }
        
        public System.Threading.Tasks.Task<bool> CheckInWikiAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int wikiID) {
            return base.Channel.CheckInWikiAsync(sessionID, clientID, user, wikiID);
        }
        
        public bool CheckOutWiki(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int wikiID) {
            return base.Channel.CheckOutWiki(sessionID, clientID, user, wikiID);
        }
        
        public System.Threading.Tasks.Task<bool> CheckOutWikiAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int wikiID) {
            return base.Channel.CheckOutWikiAsync(sessionID, clientID, user, wikiID);
        }
        
        public bool IsWikiEditableByUserID(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki editWiki) {
            return base.Channel.IsWikiEditableByUserID(user, editWiki);
        }
        
        public System.Threading.Tasks.Task<bool> IsWikiEditableByUserIDAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki editWiki) {
            return base.Channel.IsWikiEditableByUserIDAsync(user, editWiki);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki CreateNewWiki(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki newWiki, int langID, bool isAdmin) {
            return base.Channel.CreateNewWiki(sessionID, clientID, user, newWiki, langID, isAdmin);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki> CreateNewWikiAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki newWiki, int langID, bool isAdmin) {
            return base.Channel.CreateNewWikiAsync(sessionID, clientID, user, newWiki, langID, isAdmin);
        }
        
        public void DeleteWiki(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int wikiID) {
            base.Channel.DeleteWiki(sessionID, clientID, user, wikiID);
        }
        
        public System.Threading.Tasks.Task DeleteWikiAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int wikiID) {
            return base.Channel.DeleteWikiAsync(sessionID, clientID, user, wikiID);
        }
        
        public void DeleteWikis(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int[] wikiIDs) {
            base.Channel.DeleteWikis(sessionID, clientID, user, wikiIDs);
        }
        
        public System.Threading.Tasks.Task DeleteWikisAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int[] wikiIDs) {
            return base.Channel.DeleteWikisAsync(sessionID, clientID, user, wikiIDs);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki GetWikiMetaData(string sessionID, int clientID, int wikiID) {
            return base.Channel.GetWikiMetaData(sessionID, clientID, wikiID);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki> GetWikiMetaDataAsync(string sessionID, int clientID, int wikiID) {
            return base.Channel.GetWikiMetaDataAsync(sessionID, clientID, wikiID);
        }
        
        public void UpdateWikiMetaData(int clientID, string sessionID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki myWiki) {
            base.Channel.UpdateWikiMetaData(clientID, sessionID, user, myWiki);
        }
        
        public System.Threading.Tasks.Task UpdateWikiMetaDataAsync(int clientID, string sessionID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki myWiki) {
            return base.Channel.UpdateWikiMetaDataAsync(clientID, sessionID, user, myWiki);
        }
        
        public string GetWikiContent(string sessionID, int clientID, int wikiID) {
            return base.Channel.GetWikiContent(sessionID, clientID, wikiID);
        }
        
        public System.Threading.Tasks.Task<string> GetWikiContentAsync(string sessionID, int clientID, int wikiID) {
            return base.Channel.GetWikiContentAsync(sessionID, clientID, wikiID);
        }
        
        public void SetWikiContent(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int wikiID, int fileID, int templateID, string content, bool isAdmin) {
            base.Channel.SetWikiContent(sessionID, clientID, user, wikiID, fileID, templateID, content, isAdmin);
        }
        
        public System.Threading.Tasks.Task SetWikiContentAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int wikiID, int fileID, int templateID, string content, bool isAdmin) {
            return base.Channel.SetWikiContentAsync(sessionID, clientID, user, wikiID, fileID, templateID, content, isAdmin);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki GetWikiVersionInfo(string sessionID, int clientID, int wikiID, int versionID, int wveID) {
            return base.Channel.GetWikiVersionInfo(sessionID, clientID, wikiID, versionID, wveID);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki> GetWikiVersionInfoAsync(string sessionID, int clientID, int wikiID, int versionID, int wveID) {
            return base.Channel.GetWikiVersionInfoAsync(sessionID, clientID, wikiID, versionID, wveID);
        }
        
        public bool IsWikiViewPermittedinPortal(string sessionID, int clientID, int portalID, int wikiID) {
            return base.Channel.IsWikiViewPermittedinPortal(sessionID, clientID, portalID, wikiID);
        }
        
        public System.Threading.Tasks.Task<bool> IsWikiViewPermittedinPortalAsync(string sessionID, int clientID, int portalID, int wikiID) {
            return base.Channel.IsWikiViewPermittedinPortalAsync(sessionID, clientID, portalID, wikiID);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[] GetWikiTagsByWikiID(string sessionID, int clientID, int wikiID) {
            return base.Channel.GetWikiTagsByWikiID(sessionID, clientID, wikiID);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[]> GetWikiTagsByWikiIDAsync(string sessionID, int clientID, int wikiID) {
            return base.Channel.GetWikiTagsByWikiIDAsync(sessionID, clientID, wikiID);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[] GetWikisByTagID(string sessionID, int clientID, string tagIDs, int portalID) {
            return base.Channel.GetWikisByTagID(sessionID, clientID, tagIDs, portalID);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[]> GetWikisByTagIDAsync(string sessionID, int clientID, string tagIDs, int portalID) {
            return base.Channel.GetWikisByTagIDAsync(sessionID, clientID, tagIDs, portalID);
        }
        
        public void AddWikiTags(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki myWiki) {
            base.Channel.AddWikiTags(sessionID, clientID, user, myWiki);
        }
        
        public System.Threading.Tasks.Task AddWikiTagsAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki myWiki) {
            return base.Channel.AddWikiTagsAsync(sessionID, clientID, user, myWiki);
        }
        
        public void UpdateWikiTags(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki myWiki) {
            base.Channel.UpdateWikiTags(sessionID, clientID, user, myWiki);
        }
        
        public System.Threading.Tasks.Task UpdateWikiTagsAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki myWiki) {
            return base.Channel.UpdateWikiTagsAsync(sessionID, clientID, user, myWiki);
        }
        
        public void DeleteWikiTags(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki myWiki) {
            base.Channel.DeleteWikiTags(sessionID, clientID, user, myWiki);
        }
        
        public System.Threading.Tasks.Task DeleteWikiTagsAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki myWiki) {
            return base.Channel.DeleteWikiTagsAsync(sessionID, clientID, user, myWiki);
        }
        
        public void DeleteTags(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[] tags) {
            base.Channel.DeleteTags(sessionID, clientID, user, tags);
        }
        
        public System.Threading.Tasks.Task DeleteTagsAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[] tags) {
            return base.Channel.DeleteTagsAsync(sessionID, clientID, user, tags);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[] GetTagClouds(string sessionID, int clientID, int portalID) {
            return base.Channel.GetTagClouds(sessionID, clientID, portalID);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Tag[]> GetTagCloudsAsync(string sessionID, int clientID, int portalID) {
            return base.Channel.GetTagCloudsAsync(sessionID, clientID, portalID);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template[] GetWikiTemplates(string sessionID, int clientID) {
            return base.Channel.GetWikiTemplates(sessionID, clientID);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template[]> GetWikiTemplatesAsync(string sessionID, int clientID) {
            return base.Channel.GetWikiTemplatesAsync(sessionID, clientID);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template GetWikiTemplate(string sessionID, int clientID, int wikiID) {
            return base.Channel.GetWikiTemplate(sessionID, clientID, wikiID);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template> GetWikiTemplateAsync(string sessionID, int clientID, int wikiID) {
            return base.Channel.GetWikiTemplateAsync(sessionID, clientID, wikiID);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template[] GetWikiTemplatesByPortals(string sessionID, int clientID, int[] portalIDs) {
            return base.Channel.GetWikiTemplatesByPortals(sessionID, clientID, portalIDs);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Template[]> GetWikiTemplatesByPortalsAsync(string sessionID, int clientID, int[] portalIDs) {
            return base.Channel.GetWikiTemplatesByPortalsAsync(sessionID, clientID, portalIDs);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.History[] GetHistoryByWikiID(string sessionID, int clientID, int wikiID, int pageNum, int displayNum, int langID) {
            return base.Channel.GetHistoryByWikiID(sessionID, clientID, wikiID, pageNum, displayNum, langID);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.History[]> GetHistoryByWikiIDAsync(string sessionID, int clientID, int wikiID, int pageNum, int displayNum, int langID) {
            return base.Channel.GetHistoryByWikiIDAsync(sessionID, clientID, wikiID, pageNum, displayNum, langID);
        }
        
        public int GetTotalNumberOfHistory(string sessionID, int clientID, int wikiID, int langID) {
            return base.Channel.GetTotalNumberOfHistory(sessionID, clientID, wikiID, langID);
        }
        
        public System.Threading.Tasks.Task<int> GetTotalNumberOfHistoryAsync(string sessionID, int clientID, int wikiID, int langID) {
            return base.Channel.GetTotalNumberOfHistoryAsync(sessionID, clientID, wikiID, langID);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiPortalConfig GetWikiPortalConfig(string sessionID, int clientID, int portalID) {
            return base.Channel.GetWikiPortalConfig(sessionID, clientID, portalID);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiPortalConfig> GetWikiPortalConfigAsync(string sessionID, int clientID, int portalID) {
            return base.Channel.GetWikiPortalConfigAsync(sessionID, clientID, portalID);
        }
        
        public void CreateWikiPortalConfig(string sessionID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiPortalConfig portalConfig) {
            base.Channel.CreateWikiPortalConfig(sessionID, user, portalConfig);
        }
        
        public System.Threading.Tasks.Task CreateWikiPortalConfigAsync(string sessionID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiPortalConfig portalConfig) {
            return base.Channel.CreateWikiPortalConfigAsync(sessionID, user, portalConfig);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[] GetTopRatedWikis(string sessionID, int clientID, int portalID, int numofWiki) {
            return base.Channel.GetTopRatedWikis(sessionID, clientID, portalID, numofWiki);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[]> GetTopRatedWikisAsync(string sessionID, int clientID, int portalID, int numofWiki) {
            return base.Channel.GetTopRatedWikisAsync(sessionID, clientID, portalID, numofWiki);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[] GetTopViewedWikis(string sessionID, int clientID, int portalID, int numofWiki) {
            return base.Channel.GetTopViewedWikis(sessionID, clientID, portalID, numofWiki);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[]> GetTopViewedWikisAsync(string sessionID, int clientID, int portalID, int numofWiki) {
            return base.Channel.GetTopViewedWikisAsync(sessionID, clientID, portalID, numofWiki);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[] GetMostRecentWikis(string sessionID, int clientID, int portalID, int numofWiki) {
            return base.Channel.GetMostRecentWikis(sessionID, clientID, portalID, numofWiki);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.Wiki[]> GetMostRecentWikisAsync(string sessionID, int clientID, int portalID, int numofWiki) {
            return base.Channel.GetMostRecentWikisAsync(sessionID, clientID, portalID, numofWiki);
        }
        
        public int GetCreatedWikiCountByUser(string sessionID, int clientID, int userID) {
            return base.Channel.GetCreatedWikiCountByUser(sessionID, clientID, userID);
        }
        
        public System.Threading.Tasks.Task<int> GetCreatedWikiCountByUserAsync(string sessionID, int clientID, int userID) {
            return base.Channel.GetCreatedWikiCountByUserAsync(sessionID, clientID, userID);
        }
        
        public void SetArticleContent(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int articleID, int fileID, int templateID, string content, bool isAdmin) {
            base.Channel.SetArticleContent(sessionID, clientID, user, articleID, fileID, templateID, content, isAdmin);
        }
        
        public System.Threading.Tasks.Task SetArticleContentAsync(string sessionID, int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int articleID, int fileID, int templateID, string content, bool isAdmin) {
            return base.Channel.SetArticleContentAsync(sessionID, clientID, user, articleID, fileID, templateID, content, isAdmin);
        }
        
        public string GetTemplateContent(string sessionID, int clientID, int templateID) {
            return base.Channel.GetTemplateContent(sessionID, clientID, templateID);
        }
        
        public System.Threading.Tasks.Task<string> GetTemplateContentAsync(string sessionID, int clientID, int templateID) {
            return base.Channel.GetTemplateContentAsync(sessionID, clientID, templateID);
        }
        
        public string GetWikiRssFeed(string sessionID, string clientID, string portalID) {
            return base.Channel.GetWikiRssFeed(sessionID, clientID, portalID);
        }
        
        public System.Threading.Tasks.Task<string> GetWikiRssFeedAsync(string sessionID, string clientID, string portalID) {
            return base.Channel.GetWikiRssFeedAsync(sessionID, clientID, portalID);
        }
        
        public void AddWikiUserActivityReport(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiUserActivityReport report) {
            base.Channel.AddWikiUserActivityReport(report);
        }
        
        public System.Threading.Tasks.Task AddWikiUserActivityReportAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WikiUserActivityReport report) {
            return base.Channel.AddWikiUserActivityReportAsync(report);
        }
        
        public int CreateCategory(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string catName) {
            return base.Channel.CreateCategory(managingUser, catName);
        }
        
        public System.Threading.Tasks.Task<int> CreateCategoryAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string catName) {
            return base.Channel.CreateCategoryAsync(managingUser, catName);
        }
        
        public int DeleteCategory(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int catID) {
            return base.Channel.DeleteCategory(managingUser, catID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCategoryAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int catID) {
            return base.Channel.DeleteCategoryAsync(managingUser, catID);
        }
        
        public int UpdateCategory(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int catID, string catName) {
            return base.Channel.UpdateCategory(managingUser, catID, catName);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCategoryAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int catID, string catName) {
            return base.Channel.UpdateCategoryAsync(managingUser, catID, catName);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[] GetForumCategories(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetForumCategories(managingUser);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[]> GetForumCategoriesAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetForumCategoriesAsync(managingUser);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[] GetForumCategoriesByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetForumCategoriesByPage(managingUser, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[]> GetForumCategoriesByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetForumCategoriesByPageAsync(managingUser, currentPage, totalRowsPerPage);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[] GetForumCategoriesByUser(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetForumCategoriesByUser(managingUser);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[]> GetForumCategoriesByUserAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetForumCategoriesByUserAsync(managingUser);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[] GetForumCategoriesByUserByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetForumCategoriesByUserByPage(managingUser, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumCategoryMember[]> GetForumCategoriesByUserByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetForumCategoriesByUserByPageAsync(managingUser, currentPage, totalRowsPerPage);
        }
        
        public int CreateForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string forumName, int catId) {
            return base.Channel.CreateForum(managingUser, forumName, catId);
        }
        
        public System.Threading.Tasks.Task<int> CreateForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string forumName, int catId) {
            return base.Channel.CreateForumAsync(managingUser, forumName, catId);
        }
        
        public int CreateForumWithDesc(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string forumName, string forumDesc, int catId) {
            return base.Channel.CreateForumWithDesc(managingUser, forumName, forumDesc, catId);
        }
        
        public System.Threading.Tasks.Task<int> CreateForumWithDescAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string forumName, string forumDesc, int catId) {
            return base.Channel.CreateForumWithDescAsync(managingUser, forumName, forumDesc, catId);
        }
        
        public int CreateForumWithStatus(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string forumName, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumStatus status, string forumDesc, int catId) {
            return base.Channel.CreateForumWithStatus(managingUser, forumName, status, forumDesc, catId);
        }
        
        public System.Threading.Tasks.Task<int> CreateForumWithStatusAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string forumName, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumStatus status, string forumDesc, int catId) {
            return base.Channel.CreateForumWithStatusAsync(managingUser, forumName, status, forumDesc, catId);
        }
        
        public int DeleteForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID) {
            return base.Channel.DeleteForum(managingUser, forumID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID) {
            return base.Channel.DeleteForumAsync(managingUser, forumID);
        }
        
        public int UpdateForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID, string forumName) {
            return base.Channel.UpdateForum(managingUser, forumID, forumName);
        }
        
        public System.Threading.Tasks.Task<int> UpdateForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID, string forumName) {
            return base.Channel.UpdateForumAsync(managingUser, forumID, forumName);
        }
        
        public int UpdateForumDesc(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID, string forumName, string forumDesc) {
            return base.Channel.UpdateForumDesc(managingUser, forumID, forumName, forumDesc);
        }
        
        public System.Threading.Tasks.Task<int> UpdateForumDescAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID, string forumName, string forumDesc) {
            return base.Channel.UpdateForumDescAsync(managingUser, forumID, forumName, forumDesc);
        }
        
        public int CloseForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID, System.DateTime closedDate) {
            return base.Channel.CloseForum(managingUser, forumID, closedDate);
        }
        
        public System.Threading.Tasks.Task<int> CloseForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID, System.DateTime closedDate) {
            return base.Channel.CloseForumAsync(managingUser, forumID, closedDate);
        }
        
        public int ReOpenForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID) {
            return base.Channel.ReOpenForum(managingUser, forumID);
        }
        
        public System.Threading.Tasks.Task<int> ReOpenForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumID) {
            return base.Channel.ReOpenForumAsync(managingUser, forumID);
        }
        
        public void AddForumToPortal(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            base.Channel.AddForumToPortal(managingUser, forumId);
        }
        
        public System.Threading.Tasks.Task AddForumToPortalAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            return base.Channel.AddForumToPortalAsync(managingUser, forumId);
        }
        
        public void RemoveForumFromPortal(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            base.Channel.RemoveForumFromPortal(managingUser, forumId);
        }
        
        public System.Threading.Tasks.Task RemoveForumFromPortalAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            return base.Channel.RemoveForumFromPortalAsync(managingUser, forumId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember GetForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            return base.Channel.GetForum(managingUser, forumId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember> GetForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            return base.Channel.GetForumAsync(managingUser, forumId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[] GetForumsByCategoryByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int catId, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetForumsByCategoryByPage(managingUser, catId, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[]> GetForumsByCategoryByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int catId, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetForumsByCategoryByPageAsync(managingUser, catId, currentPage, totalRowsPerPage);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[] GetForumsByCategory(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int catId) {
            return base.Channel.GetForumsByCategory(managingUser, catId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[]> GetForumsByCategoryAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int catId) {
            return base.Channel.GetForumsByCategoryAsync(managingUser, catId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[] GetForumsByPortal(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetForumsByPortal(managingUser);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[]> GetForumsByPortalAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetForumsByPortalAsync(managingUser);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[] GetForumsByPortalByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetForumsByPortalByPage(managingUser, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[]> GetForumsByPortalByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetForumsByPortalByPageAsync(managingUser, currentPage, totalRowsPerPage);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[] GetAllForums(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetAllForums(managingUser);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[]> GetAllForumsAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetAllForumsAsync(managingUser);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[] GetForumsByUserByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetForumsByUserByPage(managingUser, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[]> GetForumsByUserByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetForumsByUserByPageAsync(managingUser, currentPage, totalRowsPerPage);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[] GetForumsByUser(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetForumsByUser(managingUser);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumMember[]> GetForumsByUserAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetForumsByUserAsync(managingUser);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumDisplayMember[] GetTopForumsByPortal(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetTopForumsByPortal(managingUser);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumDisplayMember[]> GetTopForumsByPortalAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetTopForumsByPortalAsync(managingUser);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumDisplayMember[] GetTopRatedForumsByPortal(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetTopRatedForumsByPortal(managingUser);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ForumDisplayMember[]> GetTopRatedForumsByPortalAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetTopRatedForumsByPortalAsync(managingUser);
        }
        
        public void UpdateCustomMessage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string message, int forumId) {
            base.Channel.UpdateCustomMessage(managingUser, message, forumId);
        }
        
        public System.Threading.Tasks.Task UpdateCustomMessageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string message, int forumId) {
            return base.Channel.UpdateCustomMessageAsync(managingUser, message, forumId);
        }
        
        public int GetTotalForumsByPortal(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetTotalForumsByPortal(managingUser);
        }
        
        public System.Threading.Tasks.Task<int> GetTotalForumsByPortalAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser) {
            return base.Channel.GetTotalForumsByPortalAsync(managingUser);
        }
        
        public int CreateThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string threadName, int forumId) {
            return base.Channel.CreateThread(managingUser, threadName, forumId);
        }
        
        public System.Threading.Tasks.Task<int> CreateThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string threadName, int forumId) {
            return base.Channel.CreateThreadAsync(managingUser, threadName, forumId);
        }
        
        public int DeleteThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int forumId) {
            return base.Channel.DeleteThread(managingUser, threadId, forumId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, int forumId) {
            return base.Channel.DeleteThreadAsync(managingUser, threadId, forumId);
        }
        
        public int UpdateThread(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, string threadName) {
            return base.Channel.UpdateThread(managingUser, threadId, threadName);
        }
        
        public System.Threading.Tasks.Task<int> UpdateThreadAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int threadId, string threadName) {
            return base.Channel.UpdateThreadAsync(managingUser, threadId, threadName);
        }
        
        public void AddThreadCustomMessage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string message, int threadId) {
            base.Channel.AddThreadCustomMessage(managingUser, message, threadId);
        }
        
        public System.Threading.Tasks.Task AddThreadCustomMessageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, string message, int threadId) {
            return base.Channel.AddThreadCustomMessageAsync(managingUser, message, threadId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByForumByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetThreadByForumByPage(managingUser, forumId, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByForumByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetThreadByForumByPageAsync(managingUser, forumId, currentPage, totalRowsPerPage);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByForum(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            return base.Channel.GetThreadByForum(managingUser, forumId);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByForumAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int forumId) {
            return base.Channel.GetThreadByForumAsync(managingUser, forumId);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[] GetThreadByUserByPage(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetThreadByUserByPage(managingUser, currentPage, totalRowsPerPage);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ThreadMember[]> GetThreadByUserByPageAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember managingUser, int currentPage, int totalRowsPerPage) {
            return base.Channel.GetThreadByUserByPageAsync(managingUser, currentPage, totalRowsPerPage);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ExternalProfileMember[] GetExternalUserProfile(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid) {
            return base.Channel.GetExternalUserProfile(session, clientid, portalid);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ExternalProfileMember[]> GetExternalUserProfileAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid) {
            return base.Channel.GetExternalUserProfileAsync(session, clientid, portalid);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember[] GetAllExternalUserByProfileIDList(int[] profileid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid) {
            return base.Channel.GetAllExternalUserByProfileIDList(profileid, session, clientid, portalid);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember[]> GetAllExternalUserByProfileIDListAsync(int[] profileid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid) {
            return base.Channel.GetAllExternalUserByProfileIDListAsync(profileid, session, clientid, portalid);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember[] GetAllExternalUsers(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid) {
            return base.Channel.GetAllExternalUsers(session, clientid, portalid);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember[]> GetAllExternalUsersAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid) {
            return base.Channel.GetAllExternalUsersAsync(session, clientid, portalid);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember[] GetAllInternalUsers(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid) {
            return base.Channel.GetAllInternalUsers(session, clientid, portalid);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember[]> GetAllInternalUsersAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid) {
            return base.Channel.GetAllInternalUsersAsync(session, clientid, portalid);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember GetUserByUserID(int userid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserType type, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid) {
            return base.Channel.GetUserByUserID(userid, type, session, clientid, portalid);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember> GetUserByUserIDAsync(int userid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserType type, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid) {
            return base.Channel.GetUserByUserIDAsync(userid, type, session, clientid, portalid);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember GetUserByUserInfo(string username, string password, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserType type, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid) {
            return base.Channel.GetUserByUserInfo(username, password, type, session, clientid, portalid);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember> GetUserByUserInfoAsync(string username, string password, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserType type, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBUserSession session, int clientid, int portalid) {
            return base.Channel.GetUserByUserInfoAsync(username, password, type, session, clientid, portalid);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties GetPortalByPortalId(int clientid, int portalid) {
            return base.Channel.GetPortalByPortalId(clientid, portalid);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties> GetPortalByPortalIdAsync(int clientid, int portalid) {
            return base.Channel.GetPortalByPortalIdAsync(clientid, portalid);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalMember[] GetPortalByClientId(int clientid) {
            return base.Channel.GetPortalByClientId(clientid);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalMember[]> GetPortalByClientIdAsync(int clientid) {
            return base.Channel.GetPortalByClientIdAsync(clientid);
        }
        
        public string GetCurrentAPIVersion() {
            return base.Channel.GetCurrentAPIVersion();
        }
        
        public System.Threading.Tasks.Task<string> GetCurrentAPIVersionAsync() {
            return base.Channel.GetCurrentAPIVersionAsync();
        }
        
        public string GetCustomerPortalVersion() {
            return base.Channel.GetCustomerPortalVersion();
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerPortalVersionAsync() {
            return base.Channel.GetCustomerPortalVersionAsync();
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[] GetTopFAQ(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetTopFAQ(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[]> GetTopFAQAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetTopFAQAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQCategoryMember[] GetFAQCategories(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetFAQCategories(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQCategoryMember[]> GetFAQCategoriesAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetFAQCategoriesAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQCategoryMember[] GetFAQCategoriesByKBId(int kbId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetFAQCategoriesByKBId(kbId, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQCategoryMember[]> GetFAQCategoriesByKBIdAsync(int kbId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetFAQCategoriesByKBIdAsync(kbId, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetFAQArticlesByFAQCategory(int faqCatId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetFAQArticlesByFAQCategory(faqCatId, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetFAQArticlesByFAQCategoryAsync(int faqCatId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetFAQArticlesByFAQCategoryAsync(faqCatId, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[] GetFAQByCategory(int faqCatId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetFAQByCategory(faqCatId, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[]> GetFAQByCategoryAsync(int faqCatId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetFAQByCategoryAsync(faqCatId, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[] GetFAQByKB(int kbId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetFAQByKB(kbId, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[]> GetFAQByKBAsync(int kbId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetFAQByKBAsync(kbId, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[] GetFAQs(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetFAQs(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.FAQMember[]> GetFAQsAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetFAQsAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetFAQArticlesByFAQ(int faqId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetFAQArticlesByFAQ(faqId, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetFAQArticlesByFAQAsync(int faqId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetFAQArticlesByFAQAsync(faqId, portal, user);
        }
        
        public void SetFAQInfo(int faqId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            base.Channel.SetFAQInfo(faqId, portal, user);
        }
        
        public System.Threading.Tasks.Task SetFAQInfoAsync(int faqId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.SetFAQInfoAsync(faqId, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CategoryMember[] GetCategoryByKBID(int kbid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetCategoryByKBID(kbid, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CategoryMember[]> GetCategoryByKBIDAsync(int kbid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetCategoryByKBIDAsync(kbid, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CategoryMember[] GetSubCategoryByCatID(int catid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSubCategoryByCatID(catid, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.CategoryMember[]> GetSubCategoryByCatIDAsync(int catid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSubCategoryByCatIDAsync(catid, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetArticleByCatID(int catid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleByCatID(catid, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetArticleByCatIDAsync(int catid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleByCatIDAsync(catid, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetArticleNoneCategorizedByKBID(int kbid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleNoneCategorizedByKBID(kbid, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetArticleNoneCategorizedByKBIDAsync(int kbid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleNoneCategorizedByKBIDAsync(kbid, portal, user);
        }
        
        public string[] GetCategoryTreeByCatID(int catid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetCategoryTreeByCatID(catid, portal, user);
        }
        
        public System.Threading.Tasks.Task<string[]> GetCategoryTreeByCatIDAsync(int catid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetCategoryTreeByCatIDAsync(catid, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[] GetSolutionFinders(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSolutionFinders(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[]> GetSolutionFindersAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSolutionFindersAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[] GetSolutionFinderChoicesBySFID(int SFID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSolutionFinderChoicesBySFID(SFID, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[]> GetSolutionFinderChoicesBySFIDAsync(int SFID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSolutionFinderChoicesBySFIDAsync(SFID, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[] GetSolutionFinderChoicesByParentID(int parentID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSolutionFinderChoicesByParentID(parentID, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[]> GetSolutionFinderChoicesByParentIDAsync(int parentID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSolutionFinderChoicesByParentIDAsync(parentID, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[] GetSolutionFinderChoicesByClientID(int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSolutionFinderChoicesByClientID(clientID, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SolutionFinderMember[]> GetSolutionFinderChoicesByClientIDAsync(int clientID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSolutionFinderChoicesByClientIDAsync(clientID, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetSFArticlesByChoiceID(int choiceID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSFArticlesByChoiceID(choiceID, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetSFArticlesByChoiceIDAsync(int choiceID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSFArticlesByChoiceIDAsync(choiceID, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetSFArticlesBySFID(int SFID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSFArticlesBySFID(SFID, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetSFArticlesBySFIDAsync(int SFID, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSFArticlesBySFIDAsync(SFID, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryMember[] GetGlossaries(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetGlossaries(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryMember[]> GetGlossariesAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetGlossariesAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryTermMember[] GetGlossaryTerms(int glossaryId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetGlossaryTerms(glossaryId, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryTermMember[]> GetGlossaryTermsAsync(int glossaryId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetGlossaryTermsAsync(glossaryId, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryTermMember[] GetGlossaryTermsByItem(int glossaryId, int glossaryItemId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetGlossaryTermsByItem(glossaryId, glossaryItemId, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryTermMember[]> GetGlossaryTermsByItemAsync(int glossaryId, int glossaryItemId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetGlossaryTermsByItemAsync(glossaryId, glossaryItemId, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryTermMember[] GetGlossaryTermsByAlphabet(int glossaryId, char alphabet, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetGlossaryTermsByAlphabet(glossaryId, alphabet, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryTermMember[]> GetGlossaryTermsByAlphabetAsync(int glossaryId, char alphabet, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetGlossaryTermsByAlphabetAsync(glossaryId, alphabet, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryItemMember[] GetGlossaryItems(int glossaryId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetGlossaryItems(glossaryId, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.GlossaryItemMember[]> GetGlossaryItemsAsync(int glossaryId, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetGlossaryItemsAsync(glossaryId, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRMember GetATRMember(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetATRMember(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRMember> GetATRMemberAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetATRMemberAsync(portal, user);
        }
        
        public bool SubmitATR(string question, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRMember membervalue, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.SubmitATR(question, membervalue, portal, user);
        }
        
        public System.Threading.Tasks.Task<bool> SubmitATRAsync(string question, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ATRMember membervalue, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.SubmitATRAsync(question, membervalue, portal, user);
        }
        
        public void SaveUserInfo(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, string password) {
            base.Channel.SaveUserInfo(portal, user, password);
        }
        
        public System.Threading.Tasks.Task SaveUserInfoAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, string password) {
            return base.Channel.SaveUserInfoAsync(portal, user, password);
        }
        
        public bool requestPassword(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, string username, string emailaddress) {
            return base.Channel.requestPassword(portal, user, username, emailaddress);
        }
        
        public System.Threading.Tasks.Task<bool> requestPasswordAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, string username, string emailaddress) {
            return base.Channel.requestPasswordAsync(portal, user, username, emailaddress);
        }
        
        public bool requestAccount(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalSettingMember member) {
            return base.Channel.requestAccount(portal, user, member);
        }
        
        public System.Threading.Tasks.Task<bool> requestAccountAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalSettingMember member) {
            return base.Channel.requestAccountAsync(portal, user, member);
        }
        
        public bool GetArticleViewAuthorized(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleViewAuthorized(articleid, portal, user);
        }
        
        public System.Threading.Tasks.Task<bool> GetArticleViewAuthorizedAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleViewAuthorizedAsync(articleid, portal, user);
        }
        
        public bool GetCategoryViewAuthorized(int catid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetCategoryViewAuthorized(catid, portal, user);
        }
        
        public System.Threading.Tasks.Task<bool> GetCategoryViewAuthorizedAsync(int catid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetCategoryViewAuthorizedAsync(catid, portal, user);
        }
        
        public bool GetPortalAuthorized(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetPortalAuthorized(portal, user);
        }
        
        public System.Threading.Tasks.Task<bool> GetPortalAuthorizedAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetPortalAuthorizedAsync(portal, user);
        }
        
        public bool CheckArticleExistByCategory(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int articleID, string catID) {
            return base.Channel.CheckArticleExistByCategory(portal, user, articleID, catID);
        }
        
        public System.Threading.Tasks.Task<bool> CheckArticleExistByCategoryAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int articleID, string catID) {
            return base.Channel.CheckArticleExistByCategoryAsync(portal, user, articleID, catID);
        }
        
        public bool CheckArticleExistByKB(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int articleID, string kbID) {
            return base.Channel.CheckArticleExistByKB(portal, user, articleID, kbID);
        }
        
        public System.Threading.Tasks.Task<bool> CheckArticleExistByKBAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int articleID, string kbID) {
            return base.Channel.CheckArticleExistByKBAsync(portal, user, articleID, kbID);
        }
        
        public bool CheckArticleExistByAttributes(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int articleID, string attID) {
            return base.Channel.CheckArticleExistByAttributes(portal, user, articleID, attID);
        }
        
        public System.Threading.Tasks.Task<bool> CheckArticleExistByAttributesAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user, int articleID, string attID) {
            return base.Channel.CheckArticleExistByAttributesAsync(portal, user, articleID, attID);
        }
        
        public string GetArticleSummary(int artid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleSummary(artid, portal, user);
        }
        
        public System.Threading.Tasks.Task<string> GetArticleSummaryAsync(int artid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleSummaryAsync(artid, portal, user);
        }
        
        public string GetSynopsisByArticleId(int artid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSynopsisByArticleId(artid, portal, user);
        }
        
        public System.Threading.Tasks.Task<string> GetSynopsisByArticleIdAsync(int artid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetSynopsisByArticleIdAsync(artid, portal, user);
        }
        
        public System.Data.DataSet SearchArticles(string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod type, string kbid, string categoryid, string attribute, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.SearchArticles(searchstring, type, kbid, categoryid, attribute, portal, user);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchArticlesAsync(string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod type, string kbid, string categoryid, string attribute, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.SearchArticlesAsync(searchstring, type, kbid, categoryid, attribute, portal, user);
        }
        
        public System.Data.DataSet SearchArticlesEx(string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod type, string kbid, string categoryid, string attribute, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.SearchArticlesEx(searchstring, type, kbid, categoryid, attribute, portal, user);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchArticlesExAsync(string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod type, string kbid, string categoryid, string attribute, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.SearchArticlesExAsync(searchstring, type, kbid, categoryid, attribute, portal, user);
        }
        
        public System.Data.DataSet Search(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParamsList list, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod type, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.Search(list, type, searchstring, portal, user);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParamsList list, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod type, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.SearchAsync(list, type, searchstring, portal, user);
        }
        
        public System.Data.DataSet AdvancedSearch(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParameter[] list, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod type, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.AdvancedSearch(list, type, searchstring, portal, user);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AdvancedSearchAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParameter[] list, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchMethod type, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.AdvancedSearchAsync(list, type, searchstring, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParamsList Add(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParamsList list, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParameter sparam) {
            return base.Channel.Add(list, sparam);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParamsList> AddAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParamsList list, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchParameter sparam) {
            return base.Channel.AddAsync(list, sparam);
        }
        
        public System.IO.MemoryStream GetArticleContent(int articleid, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleContent(articleid, searchstring, portal, user);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetArticleContentAsync(int articleid, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleContentAsync(articleid, searchstring, portal, user);
        }
        
        public string GetArticleContentString(int articleid, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleContentString(articleid, searchstring, portal, user);
        }
        
        public System.Threading.Tasks.Task<string> GetArticleContentStringAsync(int articleid, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleContentStringAsync(articleid, searchstring, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetArticleDisplayInfo(string articleidlist, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleDisplayInfo(articleidlist, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetArticleDisplayInfoAsync(string articleidlist, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleDisplayInfoAsync(articleidlist, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleInfoMember GetArticleInfo(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleInfo(articleid, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleInfoMember> GetArticleInfoAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleInfoAsync(articleid, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleInfoProperties GetArticleMetadata(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleMetadata(articleid, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleInfoProperties> GetArticleMetadataAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleMetadataAsync(articleid, portal, user);
        }
        
        public object[] GetArticleGroup(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleGroup(articleid, portal, user);
        }
        
        public System.Threading.Tasks.Task<object[]> GetArticleGroupAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleGroupAsync(articleid, portal, user);
        }
        
        public bool SetArticleFeedBack(int articleid, string feedback, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.SetArticleFeedBack(articleid, feedback, portal, user);
        }
        
        public System.Threading.Tasks.Task<bool> SetArticleFeedBackAsync(int articleid, string feedback, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.SetArticleFeedBackAsync(articleid, feedback, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleContentMember GetArticleView(int articleid, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleView(articleid, searchstring, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleContentMember> GetArticleViewAsync(int articleid, string searchstring, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleViewAsync(articleid, searchstring, portal, user);
        }
        
        public bool createOnlineArticle(string title, string content, int kbid, int wfstepid, int clientid, int userid) {
            return base.Channel.createOnlineArticle(title, content, kbid, wfstepid, clientid, userid);
        }
        
        public System.Threading.Tasks.Task<bool> createOnlineArticleAsync(string title, string content, int kbid, int wfstepid, int clientid, int userid) {
            return base.Channel.createOnlineArticleAsync(title, content, kbid, wfstepid, clientid, userid);
        }
        
        public bool createOnlineArticleVersion(int articleid, string title, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleContentTemplateMember[] contentList, int kbid, int wfstepid, int templateID, int clientid, int userid) {
            return base.Channel.createOnlineArticleVersion(articleid, title, contentList, kbid, wfstepid, templateID, clientid, userid);
        }
        
        public System.Threading.Tasks.Task<bool> createOnlineArticleVersionAsync(int articleid, string title, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleContentTemplateMember[] contentList, int kbid, int wfstepid, int templateID, int clientid, int userid) {
            return base.Channel.createOnlineArticleVersionAsync(articleid, title, contentList, kbid, wfstepid, templateID, clientid, userid);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleResourceMember[] GetArticleResourceByArticleID(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleResourceByArticleID(articleid, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleResourceMember[]> GetArticleResourceByArticleIDAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleResourceByArticleIDAsync(articleid, portal, user);
        }
        
        public System.IO.MemoryStream GetResourceFileByResourceID(int resourceid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetResourceFileByResourceID(resourceid, portal, user);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetResourceFileByResourceIDAsync(int resourceid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetResourceFileByResourceIDAsync(resourceid, portal, user);
        }
        
        public System.IO.MemoryStream GetResourceFile(int resourceid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetResourceFile(resourceid, portal, user);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetResourceFileAsync(int resourceid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetResourceFileAsync(resourceid, portal, user);
        }
        
        public string GetResourceFileContent(int resourceid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetResourceFileContent(resourceid, portal, user);
        }
        
        public System.Threading.Tasks.Task<string> GetResourceFileContentAsync(int resourceid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetResourceFileContentAsync(resourceid, portal, user);
        }
        
        public string GetArticleViewURL(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleViewURL(articleid, portal, user);
        }
        
        public System.Threading.Tasks.Task<string> GetArticleViewURLAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleViewURLAsync(articleid, portal, user);
        }
        
        public bool SetPortalFeedBack(string userfullname, string emailaddress, int kbid, int catecogry, string subject, string feedback, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.SetPortalFeedBack(userfullname, emailaddress, kbid, catecogry, subject, feedback, portal, user);
        }
        
        public System.Threading.Tasks.Task<bool> SetPortalFeedBackAsync(string userfullname, string emailaddress, int kbid, int catecogry, string subject, string feedback, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.SetPortalFeedBackAsync(userfullname, emailaddress, kbid, catecogry, subject, feedback, portal, user);
        }
        
        public bool SetArticleSubscription(string email, int articleid, bool sub, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.SetArticleSubscription(email, articleid, sub, portal, user);
        }
        
        public System.Threading.Tasks.Task<bool> SetArticleSubscriptionAsync(string email, int articleid, bool sub, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.SetArticleSubscriptionAsync(email, articleid, sub, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleCommentMember[] GetArticleCommentsByArticleID(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleCommentsByArticleID(articleid, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleCommentMember[]> GetArticleCommentsByArticleIDAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleCommentsByArticleIDAsync(articleid, portal, user);
        }
        
        public bool sendArticleSpacesComments(int articleid, string articleComments, string email, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.sendArticleSpacesComments(articleid, articleComments, email, portal, user);
        }
        
        public System.Threading.Tasks.Task<bool> sendArticleSpacesCommentsAsync(int articleid, string articleComments, string email, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.sendArticleSpacesCommentsAsync(articleid, articleComments, email, portal, user);
        }
        
        public string GetArticleViewSecureURL(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleViewSecureURL(articleid, portal, user);
        }
        
        public System.Threading.Tasks.Task<string> GetArticleViewSecureURLAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleViewSecureURLAsync(articleid, portal, user);
        }
        
        public bool IsConvertedArticle(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.IsConvertedArticle(articleid, portal, user);
        }
        
        public System.Threading.Tasks.Task<bool> IsConvertedArticleAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.IsConvertedArticleAsync(articleid, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleRelated[] GetRelatedarticlesID(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetRelatedarticlesID(articleid, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleRelated[]> GetRelatedarticlesIDAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetRelatedarticlesIDAsync(articleid, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetTopArticlesFavorite(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetTopArticlesFavorite(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetTopArticlesFavoriteAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetTopArticlesFavoriteAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetAllArticlesFavorite(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetAllArticlesFavorite(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetAllArticlesFavoriteAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetAllArticlesFavoriteAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetLatestArticlesViewed(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetLatestArticlesViewed(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetLatestArticlesViewedAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetLatestArticlesViewedAsync(portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchCloudResultMember[] GetTopLastSearch(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetTopLastSearch(portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.SearchCloudResultMember[]> GetTopLastSearchAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetTopLastSearchAsync(portal, user);
        }
        
        public bool setArticleFavorite(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.setArticleFavorite(articleid, portal, user);
        }
        
        public System.Threading.Tasks.Task<bool> setArticleFavoriteAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.setArticleFavoriteAsync(articleid, portal, user);
        }
        
        public bool removeArticleFavorite(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.removeArticleFavorite(articleid, portal, user);
        }
        
        public System.Threading.Tasks.Task<bool> removeArticleFavoriteAsync(int articleid, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.removeArticleFavoriteAsync(articleid, portal, user);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlow[] GetWorkFlowByClientId(int clientid, int userid) {
            return base.Channel.GetWorkFlowByClientId(clientid, userid);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlow[]> GetWorkFlowByClientIdAsync(int clientid, int userid) {
            return base.Channel.GetWorkFlowByClientIdAsync(clientid, userid);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlowStep[] GetWorkFlowStep(int clientid, int userid) {
            return base.Channel.GetWorkFlowStep(clientid, userid);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlowStep[]> GetWorkFlowStepAsync(int clientid, int userid) {
            return base.Channel.GetWorkFlowStepAsync(clientid, userid);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlowStep[] GetWorkFlowStepByTypeID(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WorkFlowType typeid, int clientid, int userid) {
            return base.Channel.GetWorkFlowStepByTypeID(typeid, clientid, userid);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.KBWorkFlowStep[]> GetWorkFlowStepByTypeIDAsync(IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.WorkFlowType typeid, int clientid, int userid) {
            return base.Channel.GetWorkFlowStepByTypeIDAsync(typeid, clientid, userid);
        }
        
        public IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[] GetArticleByTagID(int tagIDPortal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleByTagID(tagIDPortal, portal, user);
        }
        
        public System.Threading.Tasks.Task<IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.ArticleMember[]> GetArticleByTagIDAsync(int tagIDPortal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.PortalProperties portal, IFDS.KMPortal.KnowledgeBaseJob.KnowledgeBaseServiceReference.UserMember user) {
            return base.Channel.GetArticleByTagIDAsync(tagIDPortal, portal, user);
        }
    }
}
